

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 22:31:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  0081                     	;# 
   494  0085                     	;# 
   495  0086                     	;# 
   496  0087                     	;# 
   497  0088                     	;# 
   498  0089                     	;# 
   499  008C                     	;# 
   500  008D                     	;# 
   501  008E                     	;# 
   502  008F                     	;# 
   503  0090                     	;# 
   504  0091                     	;# 
   505  0092                     	;# 
   506  0093                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0094                     	;# 
   510  0095                     	;# 
   511  0096                     	;# 
   512  0097                     	;# 
   513  0098                     	;# 
   514  0099                     	;# 
   515  009A                     	;# 
   516  009B                     	;# 
   517  009C                     	;# 
   518  009D                     	;# 
   519  009E                     	;# 
   520  009F                     	;# 
   521  0105                     	;# 
   522  0107                     	;# 
   523  0108                     	;# 
   524  0109                     	;# 
   525  010C                     	;# 
   526  010C                     	;# 
   527  010D                     	;# 
   528  010E                     	;# 
   529  010F                     	;# 
   530  0185                     	;# 
   531  0187                     	;# 
   532  0188                     	;# 
   533  0189                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  000E                     	;# 
   552  000F                     	;# 
   553  0010                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001D                     	;# 
   569  001E                     	;# 
   570  001F                     	;# 
   571  0081                     	;# 
   572  0085                     	;# 
   573  0086                     	;# 
   574  0087                     	;# 
   575  0088                     	;# 
   576  0089                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  008E                     	;# 
   580  008F                     	;# 
   581  0090                     	;# 
   582  0091                     	;# 
   583  0092                     	;# 
   584  0093                     	;# 
   585  0093                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0095                     	;# 
   589  0096                     	;# 
   590  0097                     	;# 
   591  0098                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  009F                     	;# 
   599  0105                     	;# 
   600  0107                     	;# 
   601  0108                     	;# 
   602  0109                     	;# 
   603  010C                     	;# 
   604  010C                     	;# 
   605  010D                     	;# 
   606  010E                     	;# 
   607  010F                     	;# 
   608  0185                     	;# 
   609  0187                     	;# 
   610  0188                     	;# 
   611  0189                     	;# 
   612  018C                     	;# 
   613  018D                     	;# 
   614                           
   615                           	psect	idataBANK0
   616  0159                     __pidataBANK0:
   617                           
   618                           ;initializer for _motor
   619  0159  3404               	retlw	4
   620  015A  3406               	retlw	6
   621  015B  3402               	retlw	2
   622  015C  3403               	retlw	3
   623  015D  3401               	retlw	1
   624  015E  3409               	retlw	9
   625  015F  3408               	retlw	8
   626  0160  340C               	retlw	12
   627                           
   628                           	psect	strings
   629  0003                     __pstrings:
   630  0003                     stringtab:
   631  0003                     __stringtab:
   632  0003                     stringcode:	
   633                           ;	String table - string pointers are 1 byte each
   634                           
   635  0003                     stringdir:
   636  0003  3000               	movlw	high stringdir
   637  0004  008A               	movwf	10
   638  0005  0804               	movf	4,w
   639  0006  0A84               	incf	4,f
   640  0007  0782               	addwf	2,f
   641  0008                     __stringbase:
   642  0008  3400               	retlw	0
   643  0009                     __end_of__stringtab:
   644  0009                     _tecladoMatriz:
   645  0009  3431               	retlw	49
   646  000A  3432               	retlw	50
   647  000B  3433               	retlw	51
   648  000C  3441               	retlw	65
   649  000D  3434               	retlw	52
   650  000E  3435               	retlw	53
   651  000F  3436               	retlw	54
   652  0010  3442               	retlw	66
   653  0011  3437               	retlw	55
   654  0012  3438               	retlw	56
   655  0013  3439               	retlw	57
   656  0014  3443               	retlw	67
   657  0015  342A               	retlw	42
   658  0016  3430               	retlw	48
   659  0017  3423               	retlw	35
   660  0018  3444               	retlw	68
   661  0019                     __end_of_tecladoMatriz:
   662  0006                     _PORTB	set	6
   663  0007                     _PORTCbits	set	7
   664  0008                     _PORTD	set	8
   665  0008                     _PORTDbits	set	8
   666  0095                     _WPUB	set	149
   667  0081                     _OPTION_REGbits	set	129
   668  0086                     _TRISB	set	134
   669  0087                     _TRISCbits	set	135
   670  0088                     _TRISDbits	set	136
   671  0189                     _ANSELH	set	393
   672  0019                     STR_1:
   673  0019  3420               	retlw	32	;' '
   674  001A  344D               	retlw	77	;'M'
   675  001B  346F               	retlw	111	;'o'
   676  001C  3474               	retlw	116	;'t'
   677  001D  346F               	retlw	111	;'o'
   678  001E  3472               	retlw	114	;'r'
   679  001F  3420               	retlw	32	;' '
   680  0020  3464               	retlw	100	;'d'
   681  0021  3465               	retlw	101	;'e'
   682  0022  3420               	retlw	32	;' '
   683  0023  3470               	retlw	112	;'p'
   684  0024  3461               	retlw	97	;'a'
   685  0025  3473               	retlw	115	;'s'
   686  0026  3473               	retlw	115	;'s'
   687  0027  346F               	retlw	111	;'o'
   688  0028  3420               	retlw	32	;' '
   689  0029  3400               	retlw	0
   690  002A                     STR_2:
   691  002A  344E               	retlw	78	;'N'
   692  002B  3475               	retlw	117	;'u'
   693  002C  346D               	retlw	109	;'m'
   694  002D  3450               	retlw	80	;'P'
   695  002E  3461               	retlw	97	;'a'
   696  002F  3473               	retlw	115	;'s'
   697  0030  3473               	retlw	115	;'s'
   698  0031  346F               	retlw	111	;'o'
   699  0032  3473               	retlw	115	;'s'
   700  0033  343A               	retlw	58	;':'
   701  0034  3420               	retlw	32	;' '
   702  0035  3400               	retlw	0
   703                           
   704                           	psect	cinit
   705  07E4                     start_initialization:	
   706                           ; #config settings
   707                           
   708  07E4                     __initialization:
   709                           
   710                           ; Initialize objects allocated to BANK0
   711  07E4  1383               	bcf	3,7	;select IRP bank0
   712  07E5  3053               	movlw	low (__pdataBANK0+8)
   713  07E6  00FD               	movwf	btemp+-1
   714  07E7  3001               	movlw	high __pidataBANK0
   715  07E8  00FE               	movwf	btemp
   716  07E9  3059               	movlw	low __pidataBANK0
   717  07EA  00FF               	movwf	btemp+1
   718  07EB  304B               	movlw	low __pdataBANK0
   719  07EC  0084               	movwf	4
   720  07ED  120A  118A  2189  120A  118A  	fcall	init_ram0
   721                           
   722                           ; Clear objects allocated to BANK0
   723  07F2  01C1               	clrf	__pbssBANK0& (0+127)
   724  07F3  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   725  07F4  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   726  07F5  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   727  07F6  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   728  07F7  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   729  07F8  01C7               	clrf	(__pbssBANK0+6)& (0+127)
   730  07F9  01C8               	clrf	(__pbssBANK0+7)& (0+127)
   731  07FA  01C9               	clrf	(__pbssBANK0+8)& (0+127)
   732  07FB  01CA               	clrf	(__pbssBANK0+9)& (0+127)
   733  07FC                     end_of_initialization:	
   734                           ;End of C runtime variable initialization code
   735                           
   736  07FC                     __end_of__initialization:
   737  07FC  0183               	clrf	3
   738  07FD  120A  118A  2D0F   	ljmp	_main	;jump to C main() function
   739                           
   740                           	psect	bssBANK0
   741  0041                     __pbssBANK0:
   742  0041                     _contador_passos:
   743  0041                     	ds	4
   744  0045                     _ppr:
   745  0045                     	ds	2
   746  0047                     _num_original:
   747  0047                     	ds	2
   748  0049                     _passo:
   749  0049                     	ds	1
   750  004A                     _teclaAnt:
   751  004A                     	ds	1
   752                           
   753                           	psect	dataBANK0
   754  004B                     __pdataBANK0:
   755  004B                     _motor:
   756  004B                     	ds	8
   757                           
   758                           	psect	inittext
   759  0185                     init_fetch0:	
   760                           ;	Called with low address in FSR and high address in W
   761                           
   762  0185  087E               	movf	btemp,w
   763  0186  008A               	movwf	10
   764  0187  087F               	movf	btemp+1,w
   765  0188  0082               	movwf	2
   766  0189                     init_ram0:	
   767                           ;Called with:
   768                           ;	high address of idata address in btemp 
   769                           ;	low address of idata address in btemp+1 
   770                           ;	low address of data in FSR
   771                           ;	high address + 1 of data in btemp-1
   772                           
   773  0189  120A  118A  2185  120A  118A  	fcall	init_fetch0
   774  018E  0080               	movwf	0
   775  018F  0A84               	incf	4,f
   776  0190  0804               	movf	4,w
   777  0191  067D               	xorwf	btemp+-1,w
   778  0192  1903               	btfsc	3,2
   779  0193  3400               	retlw	0
   780  0194  0AFF               	incf	btemp+1,f
   781  0195  1903               	btfsc	3,2
   782  0196  0AFE               	incf	btemp,f
   783  0197  2989               	goto	init_ram0
   784                           
   785                           	psect	cstackCOMMON
   786  0070                     __pcstackCOMMON:
   787  0070                     ?_teclado_init:
   788  0070                     ??_teclado_init:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_stepmotor_init:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_teclado:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ??_teclado:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_delay:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_lcd_instReg:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ??_lcd_instReg:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_lcd_dataReg:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ??_lcd_dataReg:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_lcd_init:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_main:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?___bmul:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?___wmul:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?___awdiv:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0070                     ?___awmod:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0070                     ?___lmul:	
   834                           ; 2 bytes @ 0x0
   835                           
   836  0070                     ___bmul@multiplicand:	
   837                           ; 4 bytes @ 0x0
   838                           
   839  0070                     delay@t:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     stepmotor_init@pulsosPorRevolucao:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0070                     ___wmul@multiplier:	
   846                           ; 2 bytes @ 0x0
   847                           
   848  0070                     ___awdiv@divisor:	
   849                           ; 2 bytes @ 0x0
   850                           
   851  0070                     ___awmod@divisor:	
   852                           ; 2 bytes @ 0x0
   853                           
   854  0070                     ___lmul@multiplier:	
   855                           ; 2 bytes @ 0x0
   856                           
   857                           
   858                           ; 4 bytes @ 0x0
   859  0070                     	ds	1
   860  0071                     ??___bmul:
   861                           
   862                           ; 1 bytes @ 0x1
   863  0071                     	ds	1
   864  0072                     ??_stepmotor_init:
   865  0072                     ??_delay:	
   866                           ; 1 bytes @ 0x2
   867                           
   868  0072                     lcd_instReg@i:	
   869                           ; 1 bytes @ 0x2
   870                           
   871  0072                     lcd_dataReg@d:	
   872                           ; 1 bytes @ 0x2
   873                           
   874  0072                     ___bmul@product:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0072                     ___wmul@multiplicand:	
   878                           ; 1 bytes @ 0x2
   879                           
   880  0072                     ___awdiv@dividend:	
   881                           ; 2 bytes @ 0x2
   882                           
   883  0072                     ___awmod@dividend:	
   884                           ; 2 bytes @ 0x2
   885                           
   886                           
   887                           ; 2 bytes @ 0x2
   888  0072                     	ds	1
   889  0073                     ?_lcd_lincol:
   890  0073                     ??_lcd_init:	
   891                           ; 1 bytes @ 0x3
   892                           
   893  0073                     lcd_lincol@col:	
   894                           ; 1 bytes @ 0x3
   895                           
   896  0073                     ___bmul@multiplier:	
   897                           ; 1 bytes @ 0x3
   898                           
   899                           
   900                           ; 1 bytes @ 0x3
   901  0073                     	ds	1
   902  0074                     ??_lcd_lincol:
   903  0074                     ??___wmul:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0074                     ??___awdiv:	
   907                           ; 1 bytes @ 0x4
   908                           
   909  0074                     ??___awmod:	
   910                           ; 1 bytes @ 0x4
   911                           
   912  0074                     ___wmul@product:	
   913                           ; 1 bytes @ 0x4
   914                           
   915  0074                     ___lmul@multiplicand:	
   916                           ; 2 bytes @ 0x4
   917                           
   918                           
   919                           ; 4 bytes @ 0x4
   920  0074                     	ds	1
   921  0075                     lcd_lincol@lin:
   922  0075                     ___awdiv@counter:	
   923                           ; 1 bytes @ 0x5
   924                           
   925  0075                     ___awmod@counter:	
   926                           ; 1 bytes @ 0x5
   927                           
   928                           
   929                           ; 1 bytes @ 0x5
   930  0075                     	ds	1
   931  0076                     ?_lcd_print:
   932  0076                     lcd_print@col:	
   933                           ; 1 bytes @ 0x6
   934                           
   935  0076                     ___awdiv@sign:	
   936                           ; 1 bytes @ 0x6
   937                           
   938  0076                     ___awmod@sign:	
   939                           ; 1 bytes @ 0x6
   940                           
   941                           
   942                           ; 1 bytes @ 0x6
   943  0076                     	ds	1
   944  0077                     lcd_print@str:
   945  0077                     teclado@aux:	
   946                           ; 1 bytes @ 0x7
   947                           
   948  0077                     ___awdiv@quotient:	
   949                           ; 1 bytes @ 0x7
   950                           
   951                           
   952                           ; 2 bytes @ 0x7
   953  0077                     	ds	1
   954  0078                     ??_lcd_print:
   955  0078                     ??___lmul:	
   956                           ; 1 bytes @ 0x8
   957                           
   958  0078                     teclado@l:	
   959                           ; 1 bytes @ 0x8
   960                           
   961                           
   962                           ; 1 bytes @ 0x8
   963  0078                     	ds	1
   964  0079                     ??_edit:
   965  0079                     ?_lcd_num:	
   966                           ; 1 bytes @ 0x9
   967                           
   968  0079                     lcd_print@pos:	
   969                           ; 1 bytes @ 0x9
   970                           
   971  0079                     lcd_num@col:	
   972                           ; 1 bytes @ 0x9
   973                           
   974  0079                     teclado@c:	
   975                           ; 1 bytes @ 0x9
   976                           
   977  0079                     ___lmul@product:	
   978                           ; 1 bytes @ 0x9
   979                           
   980                           
   981                           ; 4 bytes @ 0x9
   982  0079                     	ds	1
   983  007A                     lcd_print@lin:
   984  007A                     lcd_num@num:	
   985                           ; 1 bytes @ 0xA
   986                           
   987                           
   988                           ; 2 bytes @ 0xA
   989  007A                     	ds	2
   990  007C                     lcd_num@tam:
   991                           
   992                           ; 1 bytes @ 0xC
   993  007C                     	ds	1
   994  007D                     ??___lldiv:
   995                           
   996                           ; 1 bytes @ 0xD
   997  007D                     	ds	1
   998                           
   999                           	psect	cstackBANK0
  1000  0020                     __pcstackBANK0:
  1001  0020                     ?_edit:
  1002  0020                     ??_lcd_num:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0020                     ?___lldiv:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0020                     edit@tecla:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011  0020                     ___lldiv@divisor:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014                           
  1015                           ; 4 bytes @ 0x0
  1016  0020                     	ds	1
  1017  0021                     edit@delete:
  1018                           
  1019                           ; 1 bytes @ 0x1
  1020  0021                     	ds	1
  1021  0022                     edit@menos:
  1022                           
  1023                           ; 1 bytes @ 0x2
  1024  0022                     	ds	1
  1025  0023                     lcd_num@lin:
  1026  0023                     edit@min:	
  1027                           ; 1 bytes @ 0x3
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x3
  1031  0023                     	ds	1
  1032  0024                     lcd_num@size:
  1033  0024                     ___lldiv@dividend:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x4
  1038  0024                     	ds	1
  1039  0025                     lcd_num@sinal:
  1040  0025                     edit@max:	
  1041                           ; 1 bytes @ 0x5
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x5
  1045  0025                     	ds	1
  1046  0026                     lcd_num@div:
  1047                           
  1048                           ; 2 bytes @ 0x6
  1049  0026                     	ds	1
  1050  0027                     edit@aux:
  1051                           
  1052                           ; 4 bytes @ 0x7
  1053  0027                     	ds	1
  1054  0028                     ___lldiv@quotient:
  1055                           
  1056                           ; 4 bytes @ 0x8
  1057  0028                     	ds	3
  1058  002B                     edit@ptr_edit:
  1059                           
  1060                           ; 1 bytes @ 0xB
  1061  002B                     	ds	1
  1062  002C                     ___lldiv@counter:
  1063                           
  1064                           ; 1 bytes @ 0xC
  1065  002C                     	ds	1
  1066  002D                     ?_stepmotor:
  1067  002D                     stepmotor@qtd_graus_passos:	
  1068                           ; 1 bytes @ 0xD
  1069                           
  1070                           
  1071                           ; 4 bytes @ 0xD
  1072  002D                     	ds	4
  1073  0031                     stepmotor@unidade:
  1074                           
  1075                           ; 1 bytes @ 0x11
  1076  0031                     	ds	1
  1077  0032                     stepmotor@sentido:
  1078                           
  1079                           ; 1 bytes @ 0x12
  1080  0032                     	ds	1
  1081  0033                     stepmotor@meio_passo:
  1082                           
  1083                           ; 1 bytes @ 0x13
  1084  0033                     	ds	1
  1085  0034                     stepmotor@t:
  1086                           
  1087                           ; 2 bytes @ 0x14
  1088  0034                     	ds	2
  1089  0036                     ??_stepmotor:
  1090                           
  1091                           ; 1 bytes @ 0x16
  1092  0036                     	ds	4
  1093  003A                     stepmotor@passo_sentido:
  1094                           
  1095                           ; 1 bytes @ 0x1A
  1096  003A                     	ds	1
  1097  003B                     ??_main:
  1098                           
  1099                           ; 1 bytes @ 0x1B
  1100  003B                     	ds	3
  1101  003E                     main@tecla:
  1102                           
  1103                           ; 1 bytes @ 0x1E
  1104  003E                     	ds	1
  1105  003F                     main@numpassos:
  1106                           
  1107                           ; 2 bytes @ 0x1F
  1108  003F                     	ds	2
  1109                           
  1110                           	psect	maintext
  1111  050F                     __pmaintext:	
  1112 ;;
  1113 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1114 ;;
  1115 ;; *************** function _main *****************
  1116 ;; Defined at:
  1117 ;;		line 8 in file "main.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  numpassos       2   31[BANK0 ] int 
  1122 ;;  tecla           1   30[BANK0 ] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : B00/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         0       3       0       0       0
  1134 ;;      Temps:          0       3       0       0       0
  1135 ;;      Totals:         0       6       0       0       0
  1136 ;;Total ram usage:        6 bytes
  1137 ;; Hardware stack levels required when called: 3
  1138 ;; This function calls:
  1139 ;;		_edit
  1140 ;;		_lcd_init
  1141 ;;		_lcd_num
  1142 ;;		_lcd_print
  1143 ;;		_stepmotor
  1144 ;;		_stepmotor_init
  1145 ;;		_teclado
  1146 ;;		_teclado_init
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _main
  1154  050F                     _main:
  1155  050F                     l1529:	
  1156                           ;incstack = 0
  1157                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1158                           
  1159                           
  1160                           ;main.c: 10:     unsigned char tecla;;main.c: 11:     int numpassos;;main.c: 12:     lcd
      +                          _init();
  1161  050F  120A  118A  2281  120A  118A  	fcall	_lcd_init
  1162                           
  1163                           ;main.c: 13:     teclado_init();
  1164  0514  120A  118A  2161  120A  118A  	fcall	_teclado_init
  1165  0519                     l1531:
  1166                           
  1167                           ;main.c: 14:     stepmotor_init(400);
  1168  0519  3090               	movlw	144
  1169  051A  00F0               	movwf	stepmotor_init@pulsosPorRevolucao
  1170  051B  3001               	movlw	1
  1171  051C  00F1               	movwf	stepmotor_init@pulsosPorRevolucao+1
  1172  051D  120A  118A  2218  120A  118A  	fcall	_stepmotor_init
  1173  0522                     l1533:
  1174                           
  1175                           ;main.c: 16:     lcd_print(0,0," Motor de passo ");
  1176  0522  01F6               	clrf	lcd_print@col
  1177  0523  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1178  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0526  00BB               	movwf	??_main
  1181  0527  083B               	movf	??_main,w
  1182  0528  00F7               	movwf	lcd_print@str
  1183  0529  3000               	movlw	0
  1184  052A  120A  118A  21E7  120A  118A  	fcall	_lcd_print
  1185  052F                     l1535:
  1186                           
  1187                           ;main.c: 18:     {;main.c: 19:         tecla = teclado();
  1188  052F  120A  118A  235F  120A  118A  	fcall	_teclado
  1189  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0536  00BB               	movwf	??_main
  1192  0537  083B               	movf	??_main,w
  1193  0538  00BE               	movwf	main@tecla
  1194  0539                     l1537:
  1195                           
  1196                           ;main.c: 20:         edit( &numpassos, tecla, 'D', 'Z', 0, 10000 );
  1197  0539  083E               	movf	main@tecla,w
  1198  053A  00BB               	movwf	??_main
  1199  053B  083B               	movf	??_main,w
  1200  053C  00A0               	movwf	edit@tecla
  1201  053D  3044               	movlw	68
  1202  053E  00BC               	movwf	??_main+1
  1203  053F  083C               	movf	??_main+1,w
  1204  0540  00A1               	movwf	edit@delete
  1205  0541  305A               	movlw	90
  1206  0542  00BD               	movwf	??_main+2
  1207  0543  083D               	movf	??_main+2,w
  1208  0544  00A2               	movwf	edit@menos
  1209  0545  3000               	movlw	0
  1210  0546  00A3               	movwf	edit@min
  1211  0547  00A4               	movwf	edit@min+1
  1212  0548  3010               	movlw	16
  1213  0549  00A5               	movwf	edit@max
  1214  054A  3027               	movlw	39
  1215  054B  00A6               	movwf	edit@max+1
  1216  054C  303F               	movlw	(low (main@numpassos| 0))& (0+255)
  1217  054D  120A  118A  2645  120A  118A  	fcall	_edit
  1218  0552                     l1539:
  1219                           
  1220                           ;main.c: 21:         lcd_print(1,0,"NumPassos: ");
  1221  0552  01F6               	clrf	lcd_print@col
  1222  0553  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1223  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0556  00BB               	movwf	??_main
  1226  0557  083B               	movf	??_main,w
  1227  0558  00F7               	movwf	lcd_print@str
  1228  0559  3001               	movlw	1
  1229  055A  120A  118A  21E7  120A  118A  	fcall	_lcd_print
  1230  055F                     l1541:
  1231                           
  1232                           ;main.c: 22:         lcd_num(1,11, numpassos, 5 );
  1233  055F  300B               	movlw	11
  1234  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0562  00BB               	movwf	??_main
  1237  0563  083B               	movf	??_main,w
  1238  0564  00F9               	movwf	lcd_num@col
  1239  0565  0840               	movf	main@numpassos+1,w
  1240  0566  00FB               	movwf	lcd_num@num+1
  1241  0567  083F               	movf	main@numpassos,w
  1242  0568  00FA               	movwf	lcd_num@num
  1243  0569  3005               	movlw	5
  1244  056A  00BC               	movwf	??_main+1
  1245  056B  083C               	movf	??_main+1,w
  1246  056C  00FC               	movwf	lcd_num@tam
  1247  056D  3001               	movlw	1
  1248  056E  120A  118A  2704  120A  118A  	fcall	_lcd_num
  1249  0573                     l1543:
  1250                           
  1251                           ;main.c: 23:         if( tecla == '#' )
  1252  0573  3023               	movlw	35
  1253  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0576  063E               	xorwf	main@tecla,w
  1256  0577  1D03               	btfss	3,2
  1257  0578  2D7A               	goto	u1661
  1258  0579  2D7B               	goto	u1660
  1259  057A                     u1661:
  1260  057A  2D2F               	goto	l1535
  1261  057B                     u1660:
  1262  057B                     l1545:
  1263                           
  1264                           ;main.c: 24:             stepmotor( numpassos, 1, 0, 0, 200 );
  1265  057B  083F               	movf	main@numpassos,w
  1266  057C  00AD               	movwf	stepmotor@qtd_graus_passos
  1267  057D  0840               	movf	main@numpassos+1,w
  1268  057E  00AE               	movwf	stepmotor@qtd_graus_passos+1
  1269  057F  3000               	movlw	0
  1270  0580  1BAE               	btfsc	stepmotor@qtd_graus_passos+1,7
  1271  0581  30FF               	movlw	255
  1272  0582  00AF               	movwf	stepmotor@qtd_graus_passos+2
  1273  0583  00B0               	movwf	stepmotor@qtd_graus_passos+3
  1274  0584  01B1               	clrf	stepmotor@unidade
  1275  0585  0AB1               	incf	stepmotor@unidade,f
  1276  0586  01B2               	clrf	stepmotor@sentido
  1277  0587  01B3               	clrf	stepmotor@meio_passo
  1278  0588  30C8               	movlw	200
  1279  0589  00B4               	movwf	stepmotor@t
  1280  058A  3000               	movlw	0
  1281  058B  00B5               	movwf	stepmotor@t+1
  1282  058C  120A  118A  2595  120A  118A  	fcall	_stepmotor
  1283  0591  2D2F               	goto	l1535
  1284  0592  120A  118A  2800   	ljmp	start
  1285  0595                     __end_of_main:
  1286                           
  1287                           	psect	text1
  1288  0161                     __ptext1:	
  1289 ;; *************** function _teclado_init *****************
  1290 ;; Defined at:
  1291 ;;		line 9 in file "teclado.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0
  1308 ;;      Totals:         0       0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _teclado_init
  1320  0161                     _teclado_init:
  1321  0161                     l1451:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _teclado_init: [wreg+status,2]
  1324                           
  1325                           
  1326                           ;teclado.c: 11:     TRISB = 0xF0;
  1327  0161  30F0               	movlw	240
  1328  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1329  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0164  0086               	movwf	6	;volatile
  1331  0165                     l1453:
  1332                           
  1333                           ;teclado.c: 12:     ANSELH = 0x00;
  1334  0165  1683               	bsf	3,5	;RP0=1, select bank3
  1335  0166  1703               	bsf	3,6	;RP1=1, select bank3
  1336  0167  0189               	clrf	9	;volatile
  1337  0168                     l1455:
  1338                           
  1339                           ;teclado.c: 13:     OPTION_REGbits.nRBPU = 0;
  1340  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1342  016A  1381               	bcf	1,7	;volatile
  1343  016B                     l1457:
  1344                           
  1345                           ;teclado.c: 14:     WPUB = 0xFF;
  1346  016B  30FF               	movlw	255
  1347  016C  0095               	movwf	21	;volatile
  1348  016D                     l1459:
  1349                           
  1350                           ;teclado.c: 15:     PORTB = 0xFF;
  1351  016D  30FF               	movlw	255
  1352  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1353  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0170  0086               	movwf	6	;volatile
  1355  0171                     l145:
  1356  0171  0008               	return
  1357  0172                     __end_of_teclado_init:
  1358                           
  1359                           	psect	text2
  1360  035F                     __ptext2:	
  1361 ;; *************** function _teclado *****************
  1362 ;; Defined at:
  1363 ;;		line 23 in file "teclado.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  c               1    9[COMMON] unsigned char 
  1368 ;;  l               1    8[COMMON] unsigned char 
  1369 ;;  aux             1    7[COMMON] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      unsigned char 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       0       0       0       0
  1380 ;;      Locals:         3       0       0       0       0
  1381 ;;      Temps:          7       0       0       0       0
  1382 ;;      Totals:        10       0       0       0       0
  1383 ;;Total ram usage:       10 bytes
  1384 ;; Hardware stack levels used: 2
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _teclado
  1394  035F                     _teclado:
  1395  035F                     l1471:	
  1396                           ;incstack = 0
  1397                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+pclath]
  1398                           
  1399                           
  1400                           ;teclado.c: 25:     unsigned char aux = 0;
  1401  035F  01F7               	clrf	teclado@aux
  1402                           
  1403                           ;teclado.c: 26:     unsigned char l,c;;teclado.c: 28:     for( l=0; l<4; l++ )
  1404  0360  01F8               	clrf	teclado@l
  1405  0361                     l1473:
  1406  0361  3004               	movlw	4
  1407  0362  0278               	subwf	teclado@l,w
  1408  0363  1C03               	skipc
  1409  0364  2B66               	goto	u1541
  1410  0365  2B67               	goto	u1540
  1411  0366                     u1541:
  1412  0366  2B68               	goto	l1477
  1413  0367                     u1540:
  1414  0367  2BB8               	goto	l1497
  1415  0368                     l1477:
  1416                           
  1417                           ;teclado.c: 29:     {;teclado.c: 30:         PORTB = (unsigned char)~(0x01 << l);
  1418  0368  3001               	movlw	1
  1419  0369  00F0               	movwf	??_teclado
  1420  036A  0A78               	incf	teclado@l,w
  1421  036B  2B6E               	goto	u1554
  1422  036C                     u1555:
  1423  036C  1003               	clrc
  1424  036D  0DF0               	rlf	??_teclado,f
  1425  036E                     u1554:
  1426  036E  3EFF               	addlw	-1
  1427  036F  1D03               	skipz
  1428  0370  2B6C               	goto	u1555
  1429  0371  0870               	movf	??_teclado,w
  1430  0372  3AFF               	xorlw	255
  1431  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0375  0086               	movwf	6	;volatile
  1434  0376                     l1479:
  1435                           
  1436                           ;teclado.c: 31:         for( c=0; c<4; c++ )
  1437  0376  01F9               	clrf	teclado@c
  1438  0377                     l1485:
  1439                           
  1440                           ;teclado.c: 32:         {;teclado.c: 33:             if( ~PORTB & (0x10<<c) )
  1441  0377  0906               	comf	6,w	;volatile
  1442  0378  00F0               	movwf	??_teclado
  1443  0379  01F1               	clrf	??_teclado+1
  1444  037A  09F1               	comf	??_teclado+1,f
  1445  037B  0A79               	incf	teclado@c,w
  1446  037C  00F2               	movwf	??_teclado+2
  1447  037D  3010               	movlw	16
  1448  037E  00F3               	movwf	??_teclado+3
  1449  037F  3000               	movlw	0
  1450  0380  00F4               	movwf	??_teclado+4
  1451  0381  2B85               	goto	u1564
  1452  0382                     u1565:
  1453  0382  1003               	clrc
  1454  0383  0DF3               	rlf	??_teclado+3,f
  1455  0384  0DF4               	rlf	??_teclado+4,f
  1456  0385                     u1564:
  1457  0385  0BF2               	decfsz	??_teclado+2,f
  1458  0386  2B82               	goto	u1565
  1459  0387  0870               	movf	??_teclado,w
  1460  0388  0573               	andwf	??_teclado+3,w
  1461  0389  00F5               	movwf	??_teclado+5
  1462  038A  0871               	movf	??_teclado+1,w
  1463  038B  0574               	andwf	??_teclado+4,w
  1464  038C  00F6               	movwf	??_teclado+6
  1465  038D  0875               	movf	??_teclado+5,w
  1466  038E  0476               	iorwf	??_teclado+6,w
  1467  038F  1903               	btfsc	3,2
  1468  0390  2B92               	goto	u1571
  1469  0391  2B93               	goto	u1570
  1470  0392                     u1571:
  1471  0392  2BA9               	goto	l1489
  1472  0393                     u1570:
  1473  0393                     l1487:
  1474                           
  1475                           ;teclado.c: 34:                 aux = tecladoMatriz[l][c];
  1476  0393  0878               	movf	teclado@l,w
  1477  0394  00F0               	movwf	??_teclado
  1478  0395  3002               	movlw	2
  1479  0396                     u1585:
  1480  0396  1003               	clrc
  1481  0397  0DF0               	rlf	??_teclado,f
  1482  0398  3EFF               	addlw	-1
  1483  0399  1D03               	skipz
  1484  039A  2B96               	goto	u1585
  1485  039B  3001               	movlw	(low ((_tecladoMatriz-__stringbase)| (0+32768)))& (0+255)
  1486  039C  0770               	addwf	??_teclado,w
  1487  039D  00F1               	movwf	??_teclado+1
  1488  039E  0879               	movf	teclado@c,w
  1489  039F  0771               	addwf	??_teclado+1,w
  1490  03A0  0084               	movwf	4
  1491  03A1  120A  118A  2003  120A  118A  	fcall	stringdir
  1492  03A6  00F2               	movwf	??_teclado+2
  1493  03A7  0872               	movf	??_teclado+2,w
  1494  03A8  00F7               	movwf	teclado@aux
  1495  03A9                     l1489:
  1496                           
  1497                           ;teclado.c: 35:         }
  1498  03A9  3001               	movlw	1
  1499  03AA  00F0               	movwf	??_teclado
  1500  03AB  0870               	movf	??_teclado,w
  1501  03AC  07F9               	addwf	teclado@c,f
  1502  03AD                     l1491:
  1503  03AD  3004               	movlw	4
  1504  03AE  0279               	subwf	teclado@c,w
  1505  03AF  1C03               	skipc
  1506  03B0  2BB2               	goto	u1591
  1507  03B1  2BB3               	goto	u1590
  1508  03B2                     u1591:
  1509  03B2  2B77               	goto	l1485
  1510  03B3                     u1590:
  1511  03B3                     l1493:
  1512                           
  1513                           ;teclado.c: 36:     }
  1514  03B3  3001               	movlw	1
  1515  03B4  00F0               	movwf	??_teclado
  1516  03B5  0870               	movf	??_teclado,w
  1517  03B6  07F8               	addwf	teclado@l,f
  1518  03B7  2B61               	goto	l1473
  1519  03B8                     l1497:
  1520                           
  1521                           ;teclado.c: 37:     return( aux );
  1522  03B8  0877               	movf	teclado@aux,w
  1523  03B9                     l155:
  1524  03B9  0008               	return
  1525  03BA                     __end_of_teclado:
  1526                           
  1527                           	psect	text3
  1528  0218                     __ptext3:	
  1529 ;; *************** function _stepmotor_init *****************
  1530 ;; Defined at:
  1531 ;;		line 21 in file "stepmotor.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  pulsosPorRev    2    0[COMMON] unsigned int 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         2       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          1       0       0       0       0
  1548 ;;      Totals:         3       0       0       0       0
  1549 ;;Total ram usage:        3 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _stepmotor_init
  1560  0218                     _stepmotor_init:
  1561  0218                     l1461:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _stepmotor_init: [wreg-fsr0h+status,2+status,0]
  1564                           
  1565                           
  1566                           ;stepmotor.c: 21: void stepmotor_init( unsigned int pulsosPorRevolucao );stepmotor.c: 22
      +                          : {;stepmotor.c: 23:     TRISCbits.TRISC4 = 0; PORTCbits.RC4 = 0;
  1567  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0219  1303               	bcf	3,6	;RP1=0, select bank1
  1569  021A  1207               	bcf	7,4	;volatile
  1570  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1571  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1572  021D  1207               	bcf	7,4	;volatile
  1573                           
  1574                           ;stepmotor.c: 24:     TRISCbits.TRISC5 = 0; PORTCbits.RC5 = 0;
  1575  021E  1683               	bsf	3,5	;RP0=1, select bank1
  1576  021F  1303               	bcf	3,6	;RP1=0, select bank1
  1577  0220  1287               	bcf	7,5	;volatile
  1578  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0223  1287               	bcf	7,5	;volatile
  1581                           
  1582                           ;stepmotor.c: 25:     TRISCbits.TRISC6 = 0; PORTCbits.RC6 = 0;
  1583  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0226  1307               	bcf	7,6	;volatile
  1586  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0229  1307               	bcf	7,6	;volatile
  1589                           
  1590                           ;stepmotor.c: 26:     TRISCbits.TRISC7 = 0; PORTCbits.RC7 = 0;
  1591  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1592  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1593  022C  1387               	bcf	7,7	;volatile
  1594  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1595  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1596  022F  1387               	bcf	7,7	;volatile
  1597  0230                     l1463:
  1598                           
  1599                           ;stepmotor.c: 28:     ppr = pulsosPorRevolucao;
  1600  0230  0871               	movf	stepmotor_init@pulsosPorRevolucao+1,w
  1601  0231  00C6               	movwf	_ppr+1
  1602  0232  0870               	movf	stepmotor_init@pulsosPorRevolucao,w
  1603  0233  00C5               	movwf	_ppr
  1604                           
  1605                           ;stepmotor.c: 29:     contador_passos = 0;
  1606  0234  3000               	movlw	0
  1607  0235  00C4               	movwf	_contador_passos+3
  1608  0236  3000               	movlw	0
  1609  0237  00C3               	movwf	_contador_passos+2
  1610  0238  3000               	movlw	0
  1611  0239  00C2               	movwf	_contador_passos+1
  1612  023A  3000               	movlw	0
  1613  023B  00C1               	movwf	_contador_passos
  1614  023C                     l1465:
  1615                           
  1616                           ;stepmotor.c: 30:     passo = 0;
  1617  023C  01C9               	clrf	_passo
  1618  023D                     l1467:
  1619                           
  1620                           ;stepmotor.c: 31:     PORTB &= 0xF0, PORTB |= ( motor[passo] & 0x0F);
  1621  023D  30F0               	movlw	240
  1622  023E  00F2               	movwf	??_stepmotor_init
  1623  023F  0872               	movf	??_stepmotor_init,w
  1624  0240  0586               	andwf	6,f	;volatile
  1625  0241                     l1469:
  1626  0241  0849               	movf	_passo,w
  1627  0242  3E4B               	addlw	(low (_motor| 0))& (0+255)
  1628  0243  0084               	movwf	4
  1629  0244  1383               	bcf	3,7	;select IRP bank0
  1630  0245  0800               	movf	0,w
  1631  0246  390F               	andlw	15
  1632  0247  00F2               	movwf	??_stepmotor_init
  1633  0248  0872               	movf	??_stepmotor_init,w
  1634  0249  0486               	iorwf	6,f	;volatile
  1635  024A                     l122:
  1636  024A  0008               	return
  1637  024B                     __end_of_stepmotor_init:
  1638                           
  1639                           	psect	text4
  1640  0595                     __ptext4:	
  1641 ;; *************** function _stepmotor *****************
  1642 ;; Defined at:
  1643 ;;		line 35 in file "stepmotor.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  qtd_graus_pa    4   13[BANK0 ] unsigned long 
  1646 ;;  unidade         1   17[BANK0 ] unsigned char 
  1647 ;;  sentido         1   18[BANK0 ] unsigned char 
  1648 ;;  meio_passo      1   19[BANK0 ] unsigned char 
  1649 ;;  t               2   20[BANK0 ] unsigned int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  passo_sentid    1   26[BANK0 ] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       9       0       0       0
  1662 ;;      Locals:         0       1       0       0       0
  1663 ;;      Temps:          0       4       0       0       0
  1664 ;;      Totals:         0      14       0       0       0
  1665 ;;Total ram usage:       14 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 1
  1668 ;; This function calls:
  1669 ;;		___bmul
  1670 ;;		___lldiv
  1671 ;;		___lmul
  1672 ;;		_delay
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _stepmotor
  1680  0595                     _stepmotor:
  1681  0595                     l1501:	
  1682                           ;incstack = 0
  1683                           ; Regs used in _stepmotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1684                           
  1685                           
  1686                           ;stepmotor.c: 35: void stepmotor(unsigned long qtd_graus_passos,;stepmotor.c: 36:       
      +                                   unsigned char unidade,;stepmotor.c: 37:                unsigned char sentido,;s
      +                          tepmotor.c: 38:                unsigned char meio_passo,;stepmotor.c: 39:               
      +                           unsigned int t );stepmotor.c: 40: {;stepmotor.c: 41:     char passo_sentido = 2;
  1687  0595  3002               	movlw	2
  1688  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0598  00B6               	movwf	??_stepmotor
  1691  0599  0836               	movf	??_stepmotor,w
  1692  059A  00BA               	movwf	stepmotor@passo_sentido
  1693  059B                     l1503:
  1694                           
  1695                           ;stepmotor.c: 43:     if( unidade == 0 )
  1696  059B  0831               	movf	stepmotor@unidade,w
  1697  059C  1D03               	btfss	3,2
  1698  059D  2D9F               	goto	u1601
  1699  059E  2DA0               	goto	u1600
  1700  059F                     u1601:
  1701  059F  2DD5               	goto	l1507
  1702  05A0                     u1600:
  1703  05A0                     l1505:
  1704                           
  1705                           ;stepmotor.c: 44:         contador_passos = (qtd_graus_passos * ppr) / 360;
  1706  05A0  3000               	movlw	0
  1707  05A1  00A3               	movwf	___lldiv@divisor+3
  1708  05A2  3000               	movlw	0
  1709  05A3  00A2               	movwf	___lldiv@divisor+2
  1710  05A4  3001               	movlw	1
  1711  05A5  00A1               	movwf	___lldiv@divisor+1
  1712  05A6  3068               	movlw	104
  1713  05A7  00A0               	movwf	___lldiv@divisor
  1714  05A8  0845               	movf	_ppr,w
  1715  05A9  00F0               	movwf	___lmul@multiplier
  1716  05AA  0846               	movf	_ppr+1,w
  1717  05AB  00F1               	movwf	___lmul@multiplier+1
  1718  05AC  01F2               	clrf	___lmul@multiplier+2
  1719  05AD  01F3               	clrf	___lmul@multiplier+3
  1720  05AE  0830               	movf	stepmotor@qtd_graus_passos+3,w
  1721  05AF  00F7               	movwf	___lmul@multiplicand+3
  1722  05B0  082F               	movf	stepmotor@qtd_graus_passos+2,w
  1723  05B1  00F6               	movwf	___lmul@multiplicand+2
  1724  05B2  082E               	movf	stepmotor@qtd_graus_passos+1,w
  1725  05B3  00F5               	movwf	___lmul@multiplicand+1
  1726  05B4  082D               	movf	stepmotor@qtd_graus_passos,w
  1727  05B5  00F4               	movwf	___lmul@multiplicand
  1728  05B6  120A  118A  22C0  120A  118A  	fcall	___lmul
  1729  05BB  0873               	movf	?___lmul+3,w
  1730  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1731  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1732  05BE  00A7               	movwf	___lldiv@dividend+3
  1733  05BF  0872               	movf	?___lmul+2,w
  1734  05C0  00A6               	movwf	___lldiv@dividend+2
  1735  05C1  0871               	movf	?___lmul+1,w
  1736  05C2  00A5               	movwf	___lldiv@dividend+1
  1737  05C3  0870               	movf	?___lmul,w
  1738  05C4  00A4               	movwf	___lldiv@dividend
  1739  05C5  120A  118A  2421  120A  118A  	fcall	___lldiv
  1740  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1741  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1742  05CC  0823               	movf	?___lldiv+3,w
  1743  05CD  00C4               	movwf	_contador_passos+3
  1744  05CE  0822               	movf	?___lldiv+2,w
  1745  05CF  00C3               	movwf	_contador_passos+2
  1746  05D0  0821               	movf	?___lldiv+1,w
  1747  05D1  00C2               	movwf	_contador_passos+1
  1748  05D2  0820               	movf	?___lldiv,w
  1749  05D3  00C1               	movwf	_contador_passos
  1750  05D4  2DDD               	goto	l1509
  1751  05D5                     l1507:
  1752                           
  1753                           ;stepmotor.c: 46:         contador_passos = qtd_graus_passos;
  1754  05D5  0830               	movf	stepmotor@qtd_graus_passos+3,w
  1755  05D6  00C4               	movwf	_contador_passos+3
  1756  05D7  082F               	movf	stepmotor@qtd_graus_passos+2,w
  1757  05D8  00C3               	movwf	_contador_passos+2
  1758  05D9  082E               	movf	stepmotor@qtd_graus_passos+1,w
  1759  05DA  00C2               	movwf	_contador_passos+1
  1760  05DB  082D               	movf	stepmotor@qtd_graus_passos,w
  1761  05DC  00C1               	movwf	_contador_passos
  1762  05DD                     l1509:
  1763                           
  1764                           ;stepmotor.c: 48:     if( meio_passo == 1 )
  1765  05DD  0333               	decf	stepmotor@meio_passo,w
  1766  05DE  1D03               	btfss	3,2
  1767  05DF  2DE1               	goto	u1611
  1768  05E0  2DE2               	goto	u1610
  1769  05E1                     u1611:
  1770  05E1  2DED               	goto	l127
  1771  05E2                     u1610:
  1772  05E2                     l1511:
  1773                           
  1774                           ;stepmotor.c: 49:     {;stepmotor.c: 50:         contador_passos *= 2;
  1775  05E2  3001               	movlw	1
  1776  05E3  00B6               	movwf	??_stepmotor
  1777  05E4                     u1625:
  1778  05E4  1003               	clrc
  1779  05E5  0DC1               	rlf	_contador_passos,f
  1780  05E6  0DC2               	rlf	_contador_passos+1,f
  1781  05E7  0DC3               	rlf	_contador_passos+2,f
  1782  05E8  0DC4               	rlf	_contador_passos+3,f
  1783  05E9  0BB6               	decfsz	??_stepmotor,f
  1784  05EA  2DE4               	goto	u1625
  1785  05EB                     l1513:
  1786                           
  1787                           ;stepmotor.c: 51:         passo_sentido = 1;
  1788  05EB  01BA               	clrf	stepmotor@passo_sentido
  1789  05EC  0ABA               	incf	stepmotor@passo_sentido,f
  1790  05ED                     l127:	
  1791                           ;stepmotor.c: 52:     }
  1792                           
  1793                           
  1794                           ;stepmotor.c: 54:     if( sentido == 1 )
  1795  05ED  0332               	decf	stepmotor@sentido,w
  1796  05EE  1D03               	btfss	3,2
  1797  05EF  2DF1               	goto	u1631
  1798  05F0  2DF2               	goto	u1630
  1799  05F1                     u1631:
  1800  05F1  2E3A               	goto	l1525
  1801  05F2                     u1630:
  1802  05F2                     l1515:
  1803                           
  1804                           ;stepmotor.c: 55:         passo_sentido *= -1;
  1805  05F2  083A               	movf	stepmotor@passo_sentido,w
  1806  05F3  00B6               	movwf	??_stepmotor
  1807  05F4  0836               	movf	??_stepmotor,w
  1808  05F5  00F0               	movwf	___bmul@multiplicand
  1809  05F6  30FF               	movlw	255
  1810  05F7  120A  118A  21AD  120A  118A  	fcall	___bmul
  1811  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1812  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1813  05FE  00B7               	movwf	??_stepmotor+1
  1814  05FF  0837               	movf	??_stepmotor+1,w
  1815  0600  00BA               	movwf	stepmotor@passo_sentido
  1816  0601  2E3A               	goto	l1525
  1817  0602                     l1517:
  1818                           
  1819                           ;stepmotor.c: 58:     {;stepmotor.c: 59:         passo = (passo + passo_sentido) % 8;
  1820  0602  083A               	movf	stepmotor@passo_sentido,w
  1821  0603  0749               	addwf	_passo,w
  1822  0604  3907               	andlw	7
  1823  0605  00B6               	movwf	??_stepmotor
  1824  0606  0836               	movf	??_stepmotor,w
  1825  0607  00C9               	movwf	_passo
  1826                           
  1827                           ;stepmotor.c: 60:         PORTB &= 0xF0, PORTB |= ( motor[passo] & 0x0F);
  1828  0608  30F0               	movlw	240
  1829  0609  00B6               	movwf	??_stepmotor
  1830  060A  0836               	movf	??_stepmotor,w
  1831  060B  0586               	andwf	6,f	;volatile
  1832  060C                     l1519:
  1833  060C  0849               	movf	_passo,w
  1834  060D  3E4B               	addlw	(low (_motor| 0))& (0+255)
  1835  060E  0084               	movwf	4
  1836  060F  1383               	bcf	3,7	;select IRP bank0
  1837  0610  0800               	movf	0,w
  1838  0611  390F               	andlw	15
  1839  0612  00B6               	movwf	??_stepmotor
  1840  0613  0836               	movf	??_stepmotor,w
  1841  0614  0486               	iorwf	6,f	;volatile
  1842  0615                     l1521:
  1843                           
  1844                           ;stepmotor.c: 61:         --contador_passos;
  1845  0615  3001               	movlw	1
  1846  0616  00B6               	movwf	??_stepmotor
  1847  0617  3000               	movlw	0
  1848  0618  00B7               	movwf	??_stepmotor+1
  1849  0619  3000               	movlw	0
  1850  061A  00B8               	movwf	??_stepmotor+2
  1851  061B  3000               	movlw	0
  1852  061C  00B9               	movwf	??_stepmotor+3
  1853  061D  0836               	movf	??_stepmotor,w
  1854  061E  02C1               	subwf	_contador_passos,f
  1855  061F  0837               	movf	??_stepmotor+1,w
  1856  0620  1C03               	skipc
  1857  0621  0F37               	incfsz	??_stepmotor+1,w
  1858  0622  2E24               	goto	u1645
  1859  0623  2E25               	goto	u1646
  1860  0624                     u1645:
  1861  0624  02C2               	subwf	_contador_passos+1,f
  1862  0625                     u1646:
  1863  0625  0838               	movf	??_stepmotor+2,w
  1864  0626  1C03               	skipc
  1865  0627  0F38               	incfsz	??_stepmotor+2,w
  1866  0628  2E2A               	goto	u1647
  1867  0629  2E2B               	goto	u1648
  1868  062A                     u1647:
  1869  062A  02C3               	subwf	_contador_passos+2,f
  1870  062B                     u1648:
  1871  062B  0839               	movf	??_stepmotor+3,w
  1872  062C  1C03               	skipc
  1873  062D  0F39               	incfsz	??_stepmotor+3,w
  1874  062E  2E30               	goto	u1649
  1875  062F  2E31               	goto	u1640
  1876  0630                     u1649:
  1877  0630  02C4               	subwf	_contador_passos+3,f
  1878  0631                     u1640:
  1879  0631                     l1523:
  1880                           
  1881                           ;stepmotor.c: 62:         delay( t );
  1882  0631  0835               	movf	stepmotor@t+1,w
  1883  0632  00F1               	movwf	delay@t+1
  1884  0633  0834               	movf	stepmotor@t,w
  1885  0634  00F0               	movwf	delay@t
  1886  0635  120A  118A  2198  120A  118A  	fcall	_delay
  1887  063A                     l1525:
  1888                           
  1889                           ;stepmotor.c: 57:     while( contador_passos )
  1890  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1891  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1892  063C  0844               	movf	_contador_passos+3,w
  1893  063D  0443               	iorwf	_contador_passos+2,w
  1894  063E  0442               	iorwf	_contador_passos+1,w
  1895  063F  0441               	iorwf	_contador_passos,w
  1896  0640  1D03               	skipz
  1897  0641  2E43               	goto	u1651
  1898  0642  2E44               	goto	u1650
  1899  0643                     u1651:
  1900  0643  2E02               	goto	l1517
  1901  0644                     u1650:
  1902  0644                     l132:
  1903  0644  0008               	return
  1904  0645                     __end_of_stepmotor:
  1905                           
  1906                           	psect	text5
  1907  02C0                     __ptext5:	
  1908 ;; *************** function ___lmul *****************
  1909 ;; Defined at:
  1910 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/Umul32.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  multiplier      4    0[COMMON] unsigned long 
  1913 ;;  multiplicand    4    4[COMMON] unsigned long 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  product         4    9[COMMON] unsigned long 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  4    0[COMMON] unsigned long 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         8       0       0       0       0
  1926 ;;      Locals:         4       0       0       0       0
  1927 ;;      Temps:          1       0       0       0       0
  1928 ;;      Totals:        13       0       0       0       0
  1929 ;;Total ram usage:       13 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_stepmotor
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function ___lmul
  1940  02C0                     ___lmul:
  1941  02C0                     l1229:	
  1942                           ;incstack = 0
  1943                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1944                           
  1945  02C0  3000               	movlw	0
  1946  02C1  00FC               	movwf	___lmul@product+3
  1947  02C2  3000               	movlw	0
  1948  02C3  00FB               	movwf	___lmul@product+2
  1949  02C4  3000               	movlw	0
  1950  02C5  00FA               	movwf	___lmul@product+1
  1951  02C6  3000               	movlw	0
  1952  02C7  00F9               	movwf	___lmul@product
  1953  02C8                     l1231:
  1954  02C8  1C70               	btfss	___lmul@multiplier,0
  1955  02C9  2ACB               	goto	u1031
  1956  02CA  2ACC               	goto	u1030
  1957  02CB                     u1031:
  1958  02CB  2AE3               	goto	l1235
  1959  02CC                     u1030:
  1960  02CC                     l1233:
  1961  02CC  0874               	movf	___lmul@multiplicand,w
  1962  02CD  07F9               	addwf	___lmul@product,f
  1963  02CE  0875               	movf	___lmul@multiplicand+1,w
  1964  02CF  1103               	clrz
  1965  02D0  1803               	skipnc
  1966  02D1  3E01               	addlw	1
  1967  02D2  1903               	skipnz
  1968  02D3  2AD5               	goto	u1041
  1969  02D4  07FA               	addwf	___lmul@product+1,f
  1970  02D5                     u1041:
  1971  02D5  0876               	movf	___lmul@multiplicand+2,w
  1972  02D6  1103               	clrz
  1973  02D7  1803               	skipnc
  1974  02D8  3E01               	addlw	1
  1975  02D9  1903               	skipnz
  1976  02DA  2ADC               	goto	u1042
  1977  02DB  07FB               	addwf	___lmul@product+2,f
  1978  02DC                     u1042:
  1979  02DC  0877               	movf	___lmul@multiplicand+3,w
  1980  02DD  1103               	clrz
  1981  02DE  1803               	skipnc
  1982  02DF  3E01               	addlw	1
  1983  02E0  1903               	skipnz
  1984  02E1  2AE3               	goto	u1043
  1985  02E2  07FC               	addwf	___lmul@product+3,f
  1986  02E3                     u1043:
  1987  02E3                     l1235:
  1988  02E3  3001               	movlw	1
  1989  02E4  00F8               	movwf	??___lmul
  1990  02E5                     u1055:
  1991  02E5  1003               	clrc
  1992  02E6  0DF4               	rlf	___lmul@multiplicand,f
  1993  02E7  0DF5               	rlf	___lmul@multiplicand+1,f
  1994  02E8  0DF6               	rlf	___lmul@multiplicand+2,f
  1995  02E9  0DF7               	rlf	___lmul@multiplicand+3,f
  1996  02EA  0BF8               	decfsz	??___lmul,f
  1997  02EB  2AE5               	goto	u1055
  1998  02EC                     l1237:
  1999  02EC  3001               	movlw	1
  2000  02ED                     u1065:
  2001  02ED  1003               	clrc
  2002  02EE  0CF3               	rrf	___lmul@multiplier+3,f
  2003  02EF  0CF2               	rrf	___lmul@multiplier+2,f
  2004  02F0  0CF1               	rrf	___lmul@multiplier+1,f
  2005  02F1  0CF0               	rrf	___lmul@multiplier,f
  2006  02F2  3EFF               	addlw	-1
  2007  02F3  1D03               	skipz
  2008  02F4  2AED               	goto	u1065
  2009  02F5  0873               	movf	___lmul@multiplier+3,w
  2010  02F6  0472               	iorwf	___lmul@multiplier+2,w
  2011  02F7  0471               	iorwf	___lmul@multiplier+1,w
  2012  02F8  0470               	iorwf	___lmul@multiplier,w
  2013  02F9  1D03               	skipz
  2014  02FA  2AFC               	goto	u1071
  2015  02FB  2AFD               	goto	u1070
  2016  02FC                     u1071:
  2017  02FC  2AC8               	goto	l1231
  2018  02FD                     u1070:
  2019  02FD                     l1239:
  2020  02FD  087C               	movf	___lmul@product+3,w
  2021  02FE  00F3               	movwf	?___lmul+3
  2022  02FF  087B               	movf	___lmul@product+2,w
  2023  0300  00F2               	movwf	?___lmul+2
  2024  0301  087A               	movf	___lmul@product+1,w
  2025  0302  00F1               	movwf	?___lmul+1
  2026  0303  0879               	movf	___lmul@product,w
  2027  0304  00F0               	movwf	?___lmul
  2028  0305                     l255:
  2029  0305  0008               	return
  2030  0306                     __end_of___lmul:
  2031                           
  2032                           	psect	text6
  2033  0421                     __ptext6:	
  2034 ;; *************** function ___lldiv *****************
  2035 ;; Defined at:
  2036 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/__lldiv.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  divisor         4    0[BANK0 ] unsigned long 
  2039 ;;  dividend        4    4[BANK0 ] unsigned long 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  quotient        4    8[BANK0 ] unsigned long 
  2042 ;;  counter         1   12[BANK0 ] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  4    0[BANK0 ] unsigned long 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       8       0       0       0
  2053 ;;      Locals:         0       5       0       0       0
  2054 ;;      Temps:          1       0       0       0       0
  2055 ;;      Totals:         1      13       0       0       0
  2056 ;;Total ram usage:       14 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_stepmotor
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function ___lldiv
  2067  0421                     ___lldiv:
  2068  0421                     l1257:	
  2069                           ;incstack = 0
  2070                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2071                           
  2072  0421  3000               	movlw	0
  2073  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0424  00AB               	movwf	___lldiv@quotient+3
  2076  0425  3000               	movlw	0
  2077  0426  00AA               	movwf	___lldiv@quotient+2
  2078  0427  3000               	movlw	0
  2079  0428  00A9               	movwf	___lldiv@quotient+1
  2080  0429  3000               	movlw	0
  2081  042A  00A8               	movwf	___lldiv@quotient
  2082  042B  0823               	movf	___lldiv@divisor+3,w
  2083  042C  0422               	iorwf	___lldiv@divisor+2,w
  2084  042D  0421               	iorwf	___lldiv@divisor+1,w
  2085  042E  0420               	iorwf	___lldiv@divisor,w
  2086  042F  1903               	skipnz
  2087  0430  2C32               	goto	u1101
  2088  0431  2C33               	goto	u1100
  2089  0432                     u1101:
  2090  0432  2C80               	goto	l1277
  2091  0433                     u1100:
  2092  0433                     l1259:
  2093  0433  01AC               	clrf	___lldiv@counter
  2094  0434  0AAC               	incf	___lldiv@counter,f
  2095  0435  2C43               	goto	l1263
  2096  0436                     l1261:
  2097  0436  3001               	movlw	1
  2098  0437  00FD               	movwf	??___lldiv
  2099  0438                     u1115:
  2100  0438  1003               	clrc
  2101  0439  0DA0               	rlf	___lldiv@divisor,f
  2102  043A  0DA1               	rlf	___lldiv@divisor+1,f
  2103  043B  0DA2               	rlf	___lldiv@divisor+2,f
  2104  043C  0DA3               	rlf	___lldiv@divisor+3,f
  2105  043D  0BFD               	decfsz	??___lldiv,f
  2106  043E  2C38               	goto	u1115
  2107  043F  3001               	movlw	1
  2108  0440  00FD               	movwf	??___lldiv
  2109  0441  087D               	movf	??___lldiv,w
  2110  0442  07AC               	addwf	___lldiv@counter,f
  2111  0443                     l1263:
  2112  0443  1FA3               	btfss	___lldiv@divisor+3,7
  2113  0444  2C46               	goto	u1121
  2114  0445  2C47               	goto	u1120
  2115  0446                     u1121:
  2116  0446  2C36               	goto	l1261
  2117  0447                     u1120:
  2118  0447                     l1265:
  2119  0447  3001               	movlw	1
  2120  0448  00FD               	movwf	??___lldiv
  2121  0449                     u1135:
  2122  0449  1003               	clrc
  2123  044A  0DA8               	rlf	___lldiv@quotient,f
  2124  044B  0DA9               	rlf	___lldiv@quotient+1,f
  2125  044C  0DAA               	rlf	___lldiv@quotient+2,f
  2126  044D  0DAB               	rlf	___lldiv@quotient+3,f
  2127  044E  0BFD               	decfsz	??___lldiv,f
  2128  044F  2C49               	goto	u1135
  2129  0450                     l1267:
  2130  0450  0823               	movf	___lldiv@divisor+3,w
  2131  0451  0227               	subwf	___lldiv@dividend+3,w
  2132  0452  1D03               	skipz
  2133  0453  2C5E               	goto	u1145
  2134  0454  0822               	movf	___lldiv@divisor+2,w
  2135  0455  0226               	subwf	___lldiv@dividend+2,w
  2136  0456  1D03               	skipz
  2137  0457  2C5E               	goto	u1145
  2138  0458  0821               	movf	___lldiv@divisor+1,w
  2139  0459  0225               	subwf	___lldiv@dividend+1,w
  2140  045A  1D03               	skipz
  2141  045B  2C5E               	goto	u1145
  2142  045C  0820               	movf	___lldiv@divisor,w
  2143  045D  0224               	subwf	___lldiv@dividend,w
  2144  045E                     u1145:
  2145  045E  1C03               	skipc
  2146  045F  2C61               	goto	u1141
  2147  0460  2C62               	goto	u1140
  2148  0461                     u1141:
  2149  0461  2C71               	goto	l1273
  2150  0462                     u1140:
  2151  0462                     l1269:
  2152  0462  0820               	movf	___lldiv@divisor,w
  2153  0463  02A4               	subwf	___lldiv@dividend,f
  2154  0464  0821               	movf	___lldiv@divisor+1,w
  2155  0465  1C03               	skipc
  2156  0466  0F21               	incfsz	___lldiv@divisor+1,w
  2157  0467  02A5               	subwf	___lldiv@dividend+1,f
  2158  0468  0822               	movf	___lldiv@divisor+2,w
  2159  0469  1C03               	skipc
  2160  046A  0F22               	incfsz	___lldiv@divisor+2,w
  2161  046B  02A6               	subwf	___lldiv@dividend+2,f
  2162  046C  0823               	movf	___lldiv@divisor+3,w
  2163  046D  1C03               	skipc
  2164  046E  0F23               	incfsz	___lldiv@divisor+3,w
  2165  046F  02A7               	subwf	___lldiv@dividend+3,f
  2166  0470                     l1271:
  2167  0470  1428               	bsf	___lldiv@quotient,0
  2168  0471                     l1273:
  2169  0471  3001               	movlw	1
  2170  0472                     u1155:
  2171  0472  1003               	clrc
  2172  0473  0CA3               	rrf	___lldiv@divisor+3,f
  2173  0474  0CA2               	rrf	___lldiv@divisor+2,f
  2174  0475  0CA1               	rrf	___lldiv@divisor+1,f
  2175  0476  0CA0               	rrf	___lldiv@divisor,f
  2176  0477  3EFF               	addlw	-1
  2177  0478  1D03               	skipz
  2178  0479  2C72               	goto	u1155
  2179  047A                     l1275:
  2180  047A  3001               	movlw	1
  2181  047B  02AC               	subwf	___lldiv@counter,f
  2182  047C  1D03               	btfss	3,2
  2183  047D  2C7F               	goto	u1161
  2184  047E  2C80               	goto	u1160
  2185  047F                     u1161:
  2186  047F  2C47               	goto	l1265
  2187  0480                     u1160:
  2188  0480                     l1277:
  2189  0480  082B               	movf	___lldiv@quotient+3,w
  2190  0481  00A3               	movwf	?___lldiv+3
  2191  0482  082A               	movf	___lldiv@quotient+2,w
  2192  0483  00A2               	movwf	?___lldiv+2
  2193  0484  0829               	movf	___lldiv@quotient+1,w
  2194  0485  00A1               	movwf	?___lldiv+1
  2195  0486  0828               	movf	___lldiv@quotient,w
  2196  0487  00A0               	movwf	?___lldiv
  2197  0488                     l277:
  2198  0488  0008               	return
  2199  0489                     __end_of___lldiv:
  2200                           
  2201                           	psect	text7
  2202  01AD                     __ptext7:	
  2203 ;; *************** function ___bmul *****************
  2204 ;; Defined at:
  2205 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/Umul8.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  multiplier      1    wreg     unsigned char 
  2208 ;;  multiplicand    1    0[COMMON] unsigned char 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  multiplier      1    3[COMMON] unsigned char 
  2211 ;;  product         1    2[COMMON] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      unsigned char 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         1       0       0       0       0
  2222 ;;      Locals:         2       0       0       0       0
  2223 ;;      Temps:          1       0       0       0       0
  2224 ;;      Totals:         4       0       0       0       0
  2225 ;;Total ram usage:        4 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_stepmotor
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function ___bmul
  2236  01AD                     ___bmul:
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2240                           ;___bmul@multiplier stored from wreg
  2241  01AD  00F3               	movwf	___bmul@multiplier
  2242  01AE                     l1243:
  2243  01AE  01F2               	clrf	___bmul@product
  2244  01AF                     l1245:
  2245  01AF  1C73               	btfss	___bmul@multiplier,0
  2246  01B0  29B2               	goto	u1081
  2247  01B1  29B3               	goto	u1080
  2248  01B2                     u1081:
  2249  01B2  29B7               	goto	l1249
  2250  01B3                     u1080:
  2251  01B3                     l1247:
  2252  01B3  0870               	movf	___bmul@multiplicand,w
  2253  01B4  00F1               	movwf	??___bmul
  2254  01B5  0871               	movf	??___bmul,w
  2255  01B6  07F2               	addwf	___bmul@product,f
  2256  01B7                     l1249:
  2257  01B7  1003               	clrc
  2258  01B8  0DF0               	rlf	___bmul@multiplicand,f
  2259  01B9                     l1251:
  2260  01B9  1003               	clrc
  2261  01BA  0CF3               	rrf	___bmul@multiplier,f
  2262  01BB  0873               	movf	___bmul@multiplier,w
  2263  01BC  1D03               	btfss	3,2
  2264  01BD  29BF               	goto	u1091
  2265  01BE  29C0               	goto	u1090
  2266  01BF                     u1091:
  2267  01BF  29AF               	goto	l1245
  2268  01C0                     u1090:
  2269  01C0                     l1253:
  2270  01C0  0872               	movf	___bmul@product,w
  2271  01C1                     l267:
  2272  01C1  0008               	return
  2273  01C2                     __end_of___bmul:
  2274                           
  2275                           	psect	text8
  2276  01E7                     __ptext8:	
  2277 ;; *************** function _lcd_print *****************
  2278 ;; Defined at:
  2279 ;;		line 156 in file "lcd.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  lin             1    wreg     unsigned char 
  2282 ;;  col             1    6[COMMON] unsigned char 
  2283 ;;  str             1    7[COMMON] PTR const unsigned char 
  2284 ;;		 -> STR_2(12), STR_1(17), 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  lin             1   10[COMMON] unsigned char 
  2287 ;;  pos             1    9[COMMON] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         2       0       0       0       0
  2298 ;;      Locals:         2       0       0       0       0
  2299 ;;      Temps:          1       0       0       0       0
  2300 ;;      Totals:         5       0       0       0       0
  2301 ;;Total ram usage:        5 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 2
  2304 ;; This function calls:
  2305 ;;		_lcd_dataReg
  2306 ;;		_lcd_lincol
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _lcd_print
  2314  01E7                     _lcd_print:
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2318                           ;lcd_print@lin stored from wreg
  2319  01E7  00FA               	movwf	lcd_print@lin
  2320  01E8                     l1405:
  2321                           
  2322                           ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
      +                          d.c: 157: {;lcd.c: 158:     char pos = col;
  2323  01E8  0876               	movf	lcd_print@col,w
  2324  01E9  00F8               	movwf	??_lcd_print
  2325  01EA  0878               	movf	??_lcd_print,w
  2326  01EB  00F9               	movwf	lcd_print@pos
  2327  01EC                     l1407:
  2328                           
  2329                           ;lcd.c: 159:     lcd_lincol( lin, col );
  2330  01EC  0876               	movf	lcd_print@col,w
  2331  01ED  00F8               	movwf	??_lcd_print
  2332  01EE  0878               	movf	??_lcd_print,w
  2333  01EF  00F3               	movwf	lcd_lincol@col
  2334  01F0  087A               	movf	lcd_print@lin,w
  2335  01F1  120A  118A  2172  120A  118A  	fcall	_lcd_lincol
  2336                           
  2337                           ;lcd.c: 161:     while( *str )
  2338  01F6  2A0B               	goto	l1415
  2339  01F7                     l1409:
  2340                           
  2341                           ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  2342  01F7  0877               	movf	lcd_print@str,w
  2343  01F8  0084               	movwf	4
  2344  01F9  120A  118A  2003  120A  118A  	fcall	stringdir
  2345  01FE  120A  118A  224B  120A  118A  	fcall	_lcd_dataReg
  2346  0203                     l1411:
  2347                           
  2348                           ;lcd.c: 164:         ++str;
  2349  0203  3001               	movlw	1
  2350  0204  00F8               	movwf	??_lcd_print
  2351  0205  0878               	movf	??_lcd_print,w
  2352  0206  07F7               	addwf	lcd_print@str,f
  2353  0207                     l1413:
  2354                           
  2355                           ;lcd.c: 165:         ++pos;
  2356  0207  3001               	movlw	1
  2357  0208  00F8               	movwf	??_lcd_print
  2358  0209  0878               	movf	??_lcd_print,w
  2359  020A  07F9               	addwf	lcd_print@pos,f
  2360  020B                     l1415:
  2361                           
  2362                           ;lcd.c: 161:     while( *str )
  2363  020B  0877               	movf	lcd_print@str,w
  2364  020C  0084               	movwf	4
  2365  020D  120A  118A  2003  120A  118A  	fcall	stringdir
  2366  0212  3A00               	xorlw	0
  2367  0213  1D03               	skipz
  2368  0214  2A16               	goto	u1441
  2369  0215  2A17               	goto	u1440
  2370  0216                     u1441:
  2371  0216  29F7               	goto	l1409
  2372  0217                     u1440:
  2373  0217                     l61:
  2374  0217  0008               	return
  2375  0218                     __end_of_lcd_print:
  2376                           
  2377                           	psect	text9
  2378  0704                     __ptext9:	
  2379 ;; *************** function _lcd_num *****************
  2380 ;; Defined at:
  2381 ;;		line 178 in file "lcd.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  lin             1    wreg     unsigned char 
  2384 ;;  col             1    9[COMMON] unsigned char 
  2385 ;;  num             2   10[COMMON] int 
  2386 ;;  tam             1   12[COMMON] unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  lin             1    3[BANK0 ] unsigned char 
  2389 ;;  div             2    6[BANK0 ] int 
  2390 ;;  sinal           1    5[BANK0 ] unsigned char 
  2391 ;;  size            1    4[BANK0 ] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         4       0       0       0       0
  2402 ;;      Locals:         0       5       0       0       0
  2403 ;;      Temps:          0       3       0       0       0
  2404 ;;      Totals:         4       8       0       0       0
  2405 ;;Total ram usage:       12 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 2
  2408 ;; This function calls:
  2409 ;;		___awdiv
  2410 ;;		___awmod
  2411 ;;		_lcd_dataReg
  2412 ;;		_lcd_lincol
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _lcd_num
  2420  0704                     _lcd_num:
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2424                           ;lcd_num@lin stored from wreg
  2425  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0706  00A3               	movwf	lcd_num@lin
  2428  0707                     l1417:
  2429                           
  2430                           ;lcd.c: 178: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 179:            
      +                                   int num, unsigned char tam );lcd.c: 180: {;lcd.c: 181:     int div;;lcd.c: 182:
      +                               unsigned char size;;lcd.c: 183:     char sinal;;lcd.c: 185:     sinal = num < 0;
  2431  0707  1BFB               	btfsc	lcd_num@num+1,7
  2432  0708  2F0A               	goto	u1451
  2433  0709  2F0C               	goto	u1450
  2434  070A                     u1451:
  2435  070A  3001               	movlw	1
  2436  070B  2F0D               	goto	u1460
  2437  070C                     u1450:
  2438  070C  3000               	movlw	0
  2439  070D                     u1460:
  2440  070D  00A0               	movwf	??_lcd_num
  2441  070E  0820               	movf	??_lcd_num,w
  2442  070F  00A5               	movwf	lcd_num@sinal
  2443  0710                     l1419:
  2444                           
  2445                           ;lcd.c: 186:     if( sinal )
  2446  0710  0825               	movf	lcd_num@sinal,w
  2447  0711  1903               	btfsc	3,2
  2448  0712  2F14               	goto	u1471
  2449  0713  2F15               	goto	u1470
  2450  0714                     u1471:
  2451  0714  2F1A               	goto	l1423
  2452  0715                     u1470:
  2453  0715                     l1421:
  2454                           
  2455                           ;lcd.c: 187:         num = (~num) + 1;
  2456  0715  09FA               	comf	lcd_num@num,f
  2457  0716  09FB               	comf	lcd_num@num+1,f
  2458  0717  0AFA               	incf	lcd_num@num,f
  2459  0718  1903               	skipnz
  2460  0719  0AFB               	incf	lcd_num@num+1,f
  2461  071A                     l1423:
  2462                           
  2463                           ;lcd.c: 189:     lcd_lincol(lin, col);
  2464  071A  0879               	movf	lcd_num@col,w
  2465  071B  00A0               	movwf	??_lcd_num
  2466  071C  0820               	movf	??_lcd_num,w
  2467  071D  00F3               	movwf	lcd_lincol@col
  2468  071E  0823               	movf	lcd_num@lin,w
  2469  071F  120A  118A  2172  120A  118A  	fcall	_lcd_lincol
  2470  0724                     l1425:
  2471                           
  2472                           ;lcd.c: 191:     div=10000;
  2473  0724  3010               	movlw	16
  2474  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0727  00A6               	movwf	lcd_num@div
  2477  0728  3027               	movlw	39
  2478  0729  00A7               	movwf	lcd_num@div+1
  2479  072A                     l1427:
  2480                           
  2481                           ;lcd.c: 192:     size = 5;
  2482  072A  3005               	movlw	5
  2483  072B  00A0               	movwf	??_lcd_num
  2484  072C  0820               	movf	??_lcd_num,w
  2485  072D  00A4               	movwf	lcd_num@size
  2486                           
  2487                           ;lcd.c: 193:     while( div >= 1 )
  2488  072E  2F5B               	goto	l1435
  2489  072F                     l1429:
  2490                           
  2491                           ;lcd.c: 194:     {;lcd.c: 195:         if( num/div == 0 )
  2492  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0730  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0731  0827               	movf	lcd_num@div+1,w
  2495  0732  00F1               	movwf	___awdiv@divisor+1
  2496  0733  0826               	movf	lcd_num@div,w
  2497  0734  00F0               	movwf	___awdiv@divisor
  2498  0735  087B               	movf	lcd_num@num+1,w
  2499  0736  00F3               	movwf	___awdiv@dividend+1
  2500  0737  087A               	movf	lcd_num@num,w
  2501  0738  00F2               	movwf	___awdiv@dividend
  2502  0739  120A  118A  23BA  120A  118A  	fcall	___awdiv
  2503  073E  0870               	movf	?___awdiv,w
  2504  073F  0471               	iorwf	?___awdiv+1,w
  2505  0740  1D03               	btfss	3,2
  2506  0741  2F43               	goto	u1481
  2507  0742  2F44               	goto	u1480
  2508  0743                     u1481:
  2509  0743  2F71               	goto	l1441
  2510  0744                     u1480:
  2511  0744                     l1431:
  2512                           
  2513                           ;lcd.c: 196:             --size;
  2514  0744  3001               	movlw	1
  2515  0745  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0746  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0747  02A4               	subwf	lcd_num@size,f
  2518  0748                     l1433:
  2519                           
  2520                           ;lcd.c: 199:         div/=10;
  2521  0748  300A               	movlw	10
  2522  0749  00F0               	movwf	___awdiv@divisor
  2523  074A  3000               	movlw	0
  2524  074B  00F1               	movwf	___awdiv@divisor+1
  2525  074C  0827               	movf	lcd_num@div+1,w
  2526  074D  00F3               	movwf	___awdiv@dividend+1
  2527  074E  0826               	movf	lcd_num@div,w
  2528  074F  00F2               	movwf	___awdiv@dividend
  2529  0750  120A  118A  23BA  120A  118A  	fcall	___awdiv
  2530  0755  0871               	movf	?___awdiv+1,w
  2531  0756  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0757  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0758  00A7               	movwf	lcd_num@div+1
  2534  0759  0870               	movf	?___awdiv,w
  2535  075A  00A6               	movwf	lcd_num@div
  2536  075B                     l1435:
  2537                           
  2538                           ;lcd.c: 193:     while( div >= 1 )
  2539  075B  0827               	movf	lcd_num@div+1,w
  2540  075C  3A80               	xorlw	128
  2541  075D  00FF               	movwf	btemp+1
  2542  075E  3080               	movlw	128
  2543  075F  027F               	subwf	btemp+1,w
  2544  0760  1D03               	skipz
  2545  0761  2F64               	goto	u1495
  2546  0762  3001               	movlw	1
  2547  0763  0226               	subwf	lcd_num@div,w
  2548  0764                     u1495:
  2549  0764  1803               	skipnc
  2550  0765  2F67               	goto	u1491
  2551  0766  2F68               	goto	u1490
  2552  0767                     u1491:
  2553  0767  2F2F               	goto	l1429
  2554  0768                     u1490:
  2555  0768  2F71               	goto	l1441
  2556  0769                     l1437:
  2557                           
  2558                           ;lcd.c: 203:     {;lcd.c: 204:         lcd_dataReg(' ');
  2559  0769  3020               	movlw	32
  2560  076A  120A  118A  224B  120A  118A  	fcall	_lcd_dataReg
  2561  076F                     l1439:
  2562                           
  2563                           ;lcd.c: 205:         --tam;
  2564  076F  3001               	movlw	1
  2565  0770  02FC               	subwf	lcd_num@tam,f
  2566  0771                     l1441:
  2567                           
  2568                           ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  2569  0771  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0772  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0773  0824               	movf	lcd_num@size,w
  2572  0774  0725               	addwf	lcd_num@sinal,w
  2573  0775  00A0               	movwf	??_lcd_num
  2574  0776  01A1               	clrf	??_lcd_num+1
  2575  0777  0DA1               	rlf	??_lcd_num+1,f
  2576  0778  0821               	movf	??_lcd_num+1,w
  2577  0779  3A80               	xorlw	128
  2578  077A  00A2               	movwf	??_lcd_num+2
  2579  077B  3080               	movlw	128
  2580  077C  0222               	subwf	??_lcd_num+2,w
  2581  077D  1D03               	skipz
  2582  077E  2F81               	goto	u1505
  2583  077F  087C               	movf	lcd_num@tam,w
  2584  0780  0220               	subwf	??_lcd_num,w
  2585  0781                     u1505:
  2586  0781  1803               	skipnc
  2587  0782  2F84               	goto	u1501
  2588  0783  2F85               	goto	u1500
  2589  0784                     u1501:
  2590  0784  2F8B               	goto	l1445
  2591  0785                     u1500:
  2592  0785                     l1443:
  2593  0785  3002               	movlw	2
  2594  0786  027C               	subwf	lcd_num@tam,w
  2595  0787  1803               	skipnc
  2596  0788  2F8A               	goto	u1511
  2597  0789  2F8B               	goto	u1510
  2598  078A                     u1511:
  2599  078A  2F69               	goto	l1437
  2600  078B                     u1510:
  2601  078B                     l1445:
  2602                           
  2603                           ;lcd.c: 208:     if( sinal )
  2604  078B  1283               	bcf	3,5	;RP0=0, select bank0
  2605  078C  1303               	bcf	3,6	;RP1=0, select bank0
  2606  078D  0825               	movf	lcd_num@sinal,w
  2607  078E  1903               	btfsc	3,2
  2608  078F  2F91               	goto	u1521
  2609  0790  2F92               	goto	u1520
  2610  0791                     u1521:
  2611  0791  2F98               	goto	l76
  2612  0792                     u1520:
  2613  0792                     l1447:
  2614                           
  2615                           ;lcd.c: 209:         lcd_dataReg('-');
  2616  0792  302D               	movlw	45
  2617  0793  120A  118A  224B  120A  118A  	fcall	_lcd_dataReg
  2618  0798                     l76:	
  2619                           ;lcd.c: 211:     do
  2620                           
  2621                           
  2622                           ;lcd.c: 212:     {;lcd.c: 213:         lcd_dataReg( (unsigned char)(num / div) + '0' );
  2623  0798  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0799  1303               	bcf	3,6	;RP1=0, select bank0
  2625  079A  0827               	movf	lcd_num@div+1,w
  2626  079B  00F1               	movwf	___awdiv@divisor+1
  2627  079C  0826               	movf	lcd_num@div,w
  2628  079D  00F0               	movwf	___awdiv@divisor
  2629  079E  087B               	movf	lcd_num@num+1,w
  2630  079F  00F3               	movwf	___awdiv@dividend+1
  2631  07A0  087A               	movf	lcd_num@num,w
  2632  07A1  00F2               	movwf	___awdiv@dividend
  2633  07A2  120A  118A  23BA  120A  118A  	fcall	___awdiv
  2634  07A7  0870               	movf	?___awdiv,w
  2635  07A8  3E30               	addlw	48
  2636  07A9  120A  118A  224B  120A  118A  	fcall	_lcd_dataReg
  2637                           
  2638                           ;lcd.c: 214:         num = num % div;
  2639  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  2640  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  2641  07B0  0827               	movf	lcd_num@div+1,w
  2642  07B1  00F1               	movwf	___awmod@divisor+1
  2643  07B2  0826               	movf	lcd_num@div,w
  2644  07B3  00F0               	movwf	___awmod@divisor
  2645  07B4  087B               	movf	lcd_num@num+1,w
  2646  07B5  00F3               	movwf	___awmod@dividend+1
  2647  07B6  087A               	movf	lcd_num@num,w
  2648  07B7  00F2               	movwf	___awmod@dividend
  2649  07B8  120A  118A  2306  120A  118A  	fcall	___awmod
  2650  07BD  0871               	movf	?___awmod+1,w
  2651  07BE  00FB               	movwf	lcd_num@num+1
  2652  07BF  0870               	movf	?___awmod,w
  2653  07C0  00FA               	movwf	lcd_num@num
  2654                           
  2655                           ;lcd.c: 215:         div/=10;
  2656  07C1  300A               	movlw	10
  2657  07C2  00F0               	movwf	___awdiv@divisor
  2658  07C3  3000               	movlw	0
  2659  07C4  00F1               	movwf	___awdiv@divisor+1
  2660  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  2661  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  2662  07C7  0827               	movf	lcd_num@div+1,w
  2663  07C8  00F3               	movwf	___awdiv@dividend+1
  2664  07C9  0826               	movf	lcd_num@div,w
  2665  07CA  00F2               	movwf	___awdiv@dividend
  2666  07CB  120A  118A  23BA  120A  118A  	fcall	___awdiv
  2667  07D0  0871               	movf	?___awdiv+1,w
  2668  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  2669  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  2670  07D3  00A7               	movwf	lcd_num@div+1
  2671  07D4  0870               	movf	?___awdiv,w
  2672  07D5  00A6               	movwf	lcd_num@div
  2673  07D6                     l1449:
  2674                           
  2675                           ;lcd.c: 216:     }
  2676  07D6  0827               	movf	lcd_num@div+1,w
  2677  07D7  3A80               	xorlw	128
  2678  07D8  00FF               	movwf	btemp+1
  2679  07D9  3080               	movlw	128
  2680  07DA  027F               	subwf	btemp+1,w
  2681  07DB  1D03               	skipz
  2682  07DC  2FDF               	goto	u1535
  2683  07DD  3001               	movlw	1
  2684  07DE  0226               	subwf	lcd_num@div,w
  2685  07DF                     u1535:
  2686  07DF  1803               	skipnc
  2687  07E0  2FE2               	goto	u1531
  2688  07E1  2FE3               	goto	u1530
  2689  07E2                     u1531:
  2690  07E2  2F98               	goto	l76
  2691  07E3                     u1530:
  2692  07E3                     l78:
  2693  07E3  0008               	return
  2694  07E4                     __end_of_lcd_num:
  2695                           
  2696                           	psect	text10
  2697  0172                     __ptext10:	
  2698 ;; *************** function _lcd_lincol *****************
  2699 ;; Defined at:
  2700 ;;		line 111 in file "lcd.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  lin             1    wreg     unsigned char 
  2703 ;;  col             1    3[COMMON] unsigned char 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  lin             1    5[COMMON] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, pclath, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         1       0       0       0       0
  2716 ;;      Locals:         1       0       0       0       0
  2717 ;;      Temps:          1       0       0       0       0
  2718 ;;      Totals:         3       0       0       0       0
  2719 ;;Total ram usage:        3 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 1
  2722 ;; This function calls:
  2723 ;;		_lcd_instReg
  2724 ;; This function is called by:
  2725 ;;		_lcd_print
  2726 ;;		_lcd_num
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _lcd_lincol
  2732  0172                     _lcd_lincol:
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  2736                           ;lcd_lincol@lin stored from wreg
  2737  0172  00F5               	movwf	lcd_lincol@lin
  2738  0173                     l1213:
  2739                           
  2740                           ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
      +                           113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  2741  0173  0875               	movf	lcd_lincol@lin,w
  2742  0174  00F4               	movwf	??_lcd_lincol
  2743  0175  3006               	movlw	6
  2744  0176                     u985:
  2745  0176  1003               	clrc
  2746  0177  0DF4               	rlf	??_lcd_lincol,f
  2747  0178  3EFF               	addlw	-1
  2748  0179  1D03               	skipz
  2749  017A  2976               	goto	u985
  2750  017B  0873               	movf	lcd_lincol@col,w
  2751  017C  0774               	addwf	??_lcd_lincol,w
  2752  017D  397F               	andlw	127
  2753  017E  3E80               	addlw	128
  2754  017F  120A  118A  2489  120A  118A  	fcall	_lcd_instReg
  2755  0184                     l49:
  2756  0184  0008               	return
  2757  0185                     __end_of_lcd_lincol:
  2758                           
  2759                           	psect	text11
  2760  024B                     __ptext11:	
  2761 ;; *************** function _lcd_dataReg *****************
  2762 ;; Defined at:
  2763 ;;		line 93 in file "lcd.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  d               1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  d               1    2[COMMON] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0
  2779 ;;      Temps:          2       0       0       0       0
  2780 ;;      Totals:         3       0       0       0       0
  2781 ;;Total ram usage:        3 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_lcd_print
  2787 ;;		_lcd_num
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _lcd_dataReg
  2793  024B                     _lcd_dataReg:
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  2797                           ;lcd_dataReg@d stored from wreg
  2798  024B  00F2               	movwf	lcd_dataReg@d
  2799  024C                     l1195:
  2800                           
  2801                           ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
      +                          2 = 1;
  2802  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2803  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2804  024E  1508               	bsf	8,2	;volatile
  2805  024F                     l1197:
  2806                           
  2807                           ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  2808  024F  0872               	movf	lcd_dataReg@d,w
  2809  0250  00F0               	movwf	??_lcd_dataReg
  2810  0251  3004               	movlw	4
  2811  0252                     u955:
  2812  0252  1003               	clrc
  2813  0253  0CF0               	rrf	??_lcd_dataReg,f
  2814  0254  3EFF               	addlw	-1
  2815  0255  1D03               	skipz
  2816  0256  2A52               	goto	u955
  2817  0257  0870               	movf	??_lcd_dataReg,w
  2818  0258  00F1               	movwf	??_lcd_dataReg+1
  2819  0259  3004               	movlw	4
  2820  025A                     u965:
  2821  025A  1003               	clrc
  2822  025B  0DF1               	rlf	??_lcd_dataReg+1,f
  2823  025C  3EFF               	addlw	-1
  2824  025D  1D03               	skipz
  2825  025E  2A5A               	goto	u965
  2826  025F  0808               	movf	8,w	;volatile
  2827  0260  390F               	andlw	15
  2828  0261  0471               	iorwf	??_lcd_dataReg+1,w
  2829  0262  0088               	movwf	8	;volatile
  2830  0263                     l1199:
  2831                           
  2832                           ;lcd.c: 97:     PORTDbits.RD3 = 0;
  2833  0263  1188               	bcf	8,3	;volatile
  2834  0264                     l1201:
  2835                           
  2836                           ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2837  0264  300D               	movlw	13
  2838  0265  00F0               	movwf	??_lcd_dataReg
  2839  0266                     u1677:
  2840  0266  0BF0               	decfsz	??_lcd_dataReg,f
  2841  0267  2A66               	goto	u1677
  2842  0268                     l1203:
  2843                           
  2844                           ;lcd.c: 99:     PORTDbits.RD3 = 1;
  2845  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2847  026A  1588               	bsf	8,3	;volatile
  2848  026B                     l1205:
  2849                           
  2850                           ;lcd.c: 101:     PORTDbits.RD2 = 1;
  2851  026B  1508               	bsf	8,2	;volatile
  2852  026C                     l1207:
  2853                           
  2854                           ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  2855  026C  0872               	movf	lcd_dataReg@d,w
  2856  026D  00F0               	movwf	??_lcd_dataReg
  2857  026E  3004               	movlw	4
  2858  026F                     u975:
  2859  026F  1003               	clrc
  2860  0270  0DF0               	rlf	??_lcd_dataReg,f
  2861  0271  3EFF               	addlw	-1
  2862  0272  1D03               	skipz
  2863  0273  2A6F               	goto	u975
  2864  0274  0808               	movf	8,w	;volatile
  2865  0275  390F               	andlw	15
  2866  0276  0470               	iorwf	??_lcd_dataReg,w
  2867  0277  0088               	movwf	8	;volatile
  2868  0278                     l1209:
  2869                           
  2870                           ;lcd.c: 103:     PORTDbits.RD3 = 0;
  2871  0278  1188               	bcf	8,3	;volatile
  2872                           
  2873                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2874  0279  300D               	movlw	13
  2875  027A  00F0               	movwf	??_lcd_dataReg
  2876  027B                     u1687:
  2877  027B  0BF0               	decfsz	??_lcd_dataReg,f
  2878  027C  2A7B               	goto	u1687
  2879  027D                     l1211:
  2880                           
  2881                           ;lcd.c: 105:     PORTDbits.RD3 = 1;
  2882  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2883  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2884  027F  1588               	bsf	8,3	;volatile
  2885  0280                     l46:
  2886  0280  0008               	return
  2887  0281                     __end_of_lcd_dataReg:
  2888                           
  2889                           	psect	text12
  2890  0306                     __ptext12:	
  2891 ;; *************** function ___awmod *****************
  2892 ;; Defined at:
  2893 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/awmod.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  divisor         2    0[COMMON] int 
  2896 ;;  dividend        2    2[COMMON] int 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  sign            1    6[COMMON] unsigned char 
  2899 ;;  counter         1    5[COMMON] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  2    0[COMMON] int 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         4       0       0       0       0
  2910 ;;      Locals:         2       0       0       0       0
  2911 ;;      Temps:          1       0       0       0       0
  2912 ;;      Totals:         7       0       0       0       0
  2913 ;;Total ram usage:        7 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_lcd_num
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function ___awmod
  2924  0306                     ___awmod:
  2925  0306                     l1325:	
  2926                           ;incstack = 0
  2927                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2928                           
  2929  0306  01F6               	clrf	___awmod@sign
  2930  0307                     l1327:
  2931  0307  1FF3               	btfss	___awmod@dividend+1,7
  2932  0308  2B0A               	goto	u1271
  2933  0309  2B0B               	goto	u1270
  2934  030A                     u1271:
  2935  030A  2B12               	goto	l1333
  2936  030B                     u1270:
  2937  030B                     l1329:
  2938  030B  09F2               	comf	___awmod@dividend,f
  2939  030C  09F3               	comf	___awmod@dividend+1,f
  2940  030D  0AF2               	incf	___awmod@dividend,f
  2941  030E  1903               	skipnz
  2942  030F  0AF3               	incf	___awmod@dividend+1,f
  2943  0310                     l1331:
  2944  0310  01F6               	clrf	___awmod@sign
  2945  0311  0AF6               	incf	___awmod@sign,f
  2946  0312                     l1333:
  2947  0312  1FF1               	btfss	___awmod@divisor+1,7
  2948  0313  2B15               	goto	u1281
  2949  0314  2B16               	goto	u1280
  2950  0315                     u1281:
  2951  0315  2B1B               	goto	l1337
  2952  0316                     u1280:
  2953  0316                     l1335:
  2954  0316  09F0               	comf	___awmod@divisor,f
  2955  0317  09F1               	comf	___awmod@divisor+1,f
  2956  0318  0AF0               	incf	___awmod@divisor,f
  2957  0319  1903               	skipnz
  2958  031A  0AF1               	incf	___awmod@divisor+1,f
  2959  031B                     l1337:
  2960  031B  0870               	movf	___awmod@divisor,w
  2961  031C  0471               	iorwf	___awmod@divisor+1,w
  2962  031D  1903               	btfsc	3,2
  2963  031E  2B20               	goto	u1291
  2964  031F  2B21               	goto	u1290
  2965  0320                     u1291:
  2966  0320  2B50               	goto	l1355
  2967  0321                     u1290:
  2968  0321                     l1339:
  2969  0321  01F5               	clrf	___awmod@counter
  2970  0322  0AF5               	incf	___awmod@counter,f
  2971  0323  2B2F               	goto	l1345
  2972  0324                     l1341:
  2973  0324  3001               	movlw	1
  2974  0325                     u1305:
  2975  0325  1003               	clrc
  2976  0326  0DF0               	rlf	___awmod@divisor,f
  2977  0327  0DF1               	rlf	___awmod@divisor+1,f
  2978  0328  3EFF               	addlw	-1
  2979  0329  1D03               	skipz
  2980  032A  2B25               	goto	u1305
  2981  032B                     l1343:
  2982  032B  3001               	movlw	1
  2983  032C  00F4               	movwf	??___awmod
  2984  032D  0874               	movf	??___awmod,w
  2985  032E  07F5               	addwf	___awmod@counter,f
  2986  032F                     l1345:
  2987  032F  1FF1               	btfss	___awmod@divisor+1,7
  2988  0330  2B32               	goto	u1311
  2989  0331  2B33               	goto	u1310
  2990  0332                     u1311:
  2991  0332  2B24               	goto	l1341
  2992  0333                     u1310:
  2993  0333                     l1347:
  2994  0333  0871               	movf	___awmod@divisor+1,w
  2995  0334  0273               	subwf	___awmod@dividend+1,w
  2996  0335  1D03               	skipz
  2997  0336  2B39               	goto	u1325
  2998  0337  0870               	movf	___awmod@divisor,w
  2999  0338  0272               	subwf	___awmod@dividend,w
  3000  0339                     u1325:
  3001  0339  1C03               	skipc
  3002  033A  2B3C               	goto	u1321
  3003  033B  2B3D               	goto	u1320
  3004  033C                     u1321:
  3005  033C  2B43               	goto	l1351
  3006  033D                     u1320:
  3007  033D                     l1349:
  3008  033D  0870               	movf	___awmod@divisor,w
  3009  033E  02F2               	subwf	___awmod@dividend,f
  3010  033F  0871               	movf	___awmod@divisor+1,w
  3011  0340  1C03               	skipc
  3012  0341  03F3               	decf	___awmod@dividend+1,f
  3013  0342  02F3               	subwf	___awmod@dividend+1,f
  3014  0343                     l1351:
  3015  0343  3001               	movlw	1
  3016  0344                     u1335:
  3017  0344  1003               	clrc
  3018  0345  0CF1               	rrf	___awmod@divisor+1,f
  3019  0346  0CF0               	rrf	___awmod@divisor,f
  3020  0347  3EFF               	addlw	-1
  3021  0348  1D03               	skipz
  3022  0349  2B44               	goto	u1335
  3023  034A                     l1353:
  3024  034A  3001               	movlw	1
  3025  034B  02F5               	subwf	___awmod@counter,f
  3026  034C  1D03               	btfss	3,2
  3027  034D  2B4F               	goto	u1341
  3028  034E  2B50               	goto	u1340
  3029  034F                     u1341:
  3030  034F  2B33               	goto	l1347
  3031  0350                     u1340:
  3032  0350                     l1355:
  3033  0350  0876               	movf	___awmod@sign,w
  3034  0351  1903               	btfsc	3,2
  3035  0352  2B54               	goto	u1351
  3036  0353  2B55               	goto	u1350
  3037  0354                     u1351:
  3038  0354  2B5A               	goto	l1359
  3039  0355                     u1350:
  3040  0355                     l1357:
  3041  0355  09F2               	comf	___awmod@dividend,f
  3042  0356  09F3               	comf	___awmod@dividend+1,f
  3043  0357  0AF2               	incf	___awmod@dividend,f
  3044  0358  1903               	skipnz
  3045  0359  0AF3               	incf	___awmod@dividend+1,f
  3046  035A                     l1359:
  3047  035A  0873               	movf	___awmod@dividend+1,w
  3048  035B  00F1               	movwf	?___awmod+1
  3049  035C  0872               	movf	___awmod@dividend,w
  3050  035D  00F0               	movwf	?___awmod
  3051  035E                     l407:
  3052  035E  0008               	return
  3053  035F                     __end_of___awmod:
  3054                           
  3055                           	psect	text13
  3056  0281                     __ptext13:	
  3057 ;; *************** function _lcd_init *****************
  3058 ;; Defined at:
  3059 ;;		line 121 in file "lcd.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 1
  3080 ;; This function calls:
  3081 ;;		_delay
  3082 ;;		_lcd_instReg
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           
  3089                           ;psect for function _lcd_init
  3090  0281                     _lcd_init:
  3091  0281                     l1389:	
  3092                           ;incstack = 0
  3093                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3094                           
  3095                           
  3096                           ;lcd.c: 123:     delay(100);
  3097  0281  3064               	movlw	100
  3098  0282  00F0               	movwf	delay@t
  3099  0283  3000               	movlw	0
  3100  0284  00F1               	movwf	delay@t+1
  3101  0285  120A  118A  2198  120A  118A  	fcall	_delay
  3102  028A                     l1391:
  3103                           
  3104                           ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  3105  028A  1683               	bsf	3,5	;RP0=1, select bank1
  3106  028B  1303               	bcf	3,6	;RP1=0, select bank1
  3107  028C  1108               	bcf	8,2	;volatile
  3108  028D                     l1393:
  3109                           
  3110                           ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  3111  028D  1188               	bcf	8,3	;volatile
  3112  028E                     l1395:
  3113                           
  3114                           ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  3115  028E  1208               	bcf	8,4	;volatile
  3116  028F                     l1397:
  3117                           
  3118                           ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  3119  028F  1288               	bcf	8,5	;volatile
  3120  0290                     l1399:
  3121                           
  3122                           ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  3123  0290  1308               	bcf	8,6	;volatile
  3124  0291                     l1401:
  3125                           
  3126                           ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  3127  0291  1388               	bcf	8,7	;volatile
  3128                           
  3129                           ;lcd.c: 131:     delay(100);
  3130  0292  3064               	movlw	100
  3131  0293  00F0               	movwf	delay@t
  3132  0294  3000               	movlw	0
  3133  0295  00F1               	movwf	delay@t+1
  3134  0296  120A  118A  2198  120A  118A  	fcall	_delay
  3135  029B                     l1403:
  3136                           
  3137                           ;lcd.c: 132:     PORTDbits.RD3 = 1;
  3138  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3139  029C  1303               	bcf	3,6	;RP1=0, select bank0
  3140  029D  1588               	bsf	8,3	;volatile
  3141                           
  3142                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  3143  029E  3028               	movlw	40
  3144  029F  120A  118A  2489  120A  118A  	fcall	_lcd_instReg
  3145                           
  3146                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  3147  02A4  300C               	movlw	12
  3148  02A5  120A  118A  2489  120A  118A  	fcall	_lcd_instReg
  3149                           
  3150                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  3151  02AA  3001               	movlw	1
  3152  02AB  120A  118A  2489  120A  118A  	fcall	_lcd_instReg
  3153                           
  3154                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  3155  02B0  3002               	movlw	2
  3156  02B1  120A  118A  2489  120A  118A  	fcall	_lcd_instReg
  3157                           
  3158                           ;lcd.c: 137:     delay(100);
  3159  02B6  3064               	movlw	100
  3160  02B7  00F0               	movwf	delay@t
  3161  02B8  3000               	movlw	0
  3162  02B9  00F1               	movwf	delay@t+1
  3163  02BA  120A  118A  2198  120A  118A  	fcall	_delay
  3164  02BF                     l52:
  3165  02BF  0008               	return
  3166  02C0                     __end_of_lcd_init:
  3167                           
  3168                           	psect	text14
  3169  0489                     __ptext14:	
  3170 ;; *************** function _lcd_instReg *****************
  3171 ;; Defined at:
  3172 ;;		line 58 in file "lcd.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  i               1    wreg     unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  i               1    2[COMMON] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         1       0       0       0       0
  3188 ;;      Temps:          2       0       0       0       0
  3189 ;;      Totals:         3       0       0       0       0
  3190 ;;Total ram usage:        3 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_lcd_lincol
  3196 ;;		_lcd_init
  3197 ;;		_lcd_clr
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _lcd_instReg
  3203  0489                     _lcd_instReg:
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  3207                           ;lcd_instReg@i stored from wreg
  3208  0489  00F2               	movwf	lcd_instReg@i
  3209  048A                     l1147:
  3210                           
  3211                           ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
      +                          2 = 0;
  3212  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3213  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3214  048C  1108               	bcf	8,2	;volatile
  3215  048D                     l1149:
  3216                           
  3217                           ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3218  048D  0872               	movf	lcd_instReg@i,w
  3219  048E  00F0               	movwf	??_lcd_instReg
  3220  048F  3004               	movlw	4
  3221  0490                     u845:
  3222  0490  1003               	clrc
  3223  0491  0CF0               	rrf	??_lcd_instReg,f
  3224  0492  3EFF               	addlw	-1
  3225  0493  1D03               	skipz
  3226  0494  2C90               	goto	u845
  3227  0495  0870               	movf	??_lcd_instReg,w
  3228  0496  00F1               	movwf	??_lcd_instReg+1
  3229  0497  3004               	movlw	4
  3230  0498                     u855:
  3231  0498  1003               	clrc
  3232  0499  0DF1               	rlf	??_lcd_instReg+1,f
  3233  049A  3EFF               	addlw	-1
  3234  049B  1D03               	skipz
  3235  049C  2C98               	goto	u855
  3236  049D  0808               	movf	8,w	;volatile
  3237  049E  390F               	andlw	15
  3238  049F  0471               	iorwf	??_lcd_instReg+1,w
  3239  04A0  0088               	movwf	8	;volatile
  3240  04A1                     l1151:
  3241                           
  3242                           ;lcd.c: 63:     PORTDbits.RD3 = 0;
  3243  04A1  1188               	bcf	8,3	;volatile
  3244                           
  3245                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  3246  04A2  0372               	decf	lcd_instReg@i,w
  3247  04A3  1903               	btfsc	3,2
  3248  04A4  2CA6               	goto	u861
  3249  04A5  2CA7               	goto	u860
  3250  04A6                     u861:
  3251  04A6  2CAD               	goto	l1155
  3252  04A7                     u860:
  3253  04A7                     l1153:
  3254  04A7  3002               	movlw	2
  3255  04A8  0672               	xorwf	lcd_instReg@i,w
  3256  04A9  1D03               	btfss	3,2
  3257  04AA  2CAC               	goto	u871
  3258  04AB  2CAD               	goto	u870
  3259  04AC                     u871:
  3260  04AC  2CB7               	goto	l1157
  3261  04AD                     u870:
  3262  04AD                     l1155:
  3263                           
  3264                           ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3265  04AD  3003               	movlw	3
  3266  04AE  00F1               	movwf	??_lcd_instReg+1
  3267  04AF  3097               	movlw	151
  3268  04B0  00F0               	movwf	??_lcd_instReg
  3269  04B1                     u1697:
  3270  04B1  0BF0               	decfsz	??_lcd_instReg,f
  3271  04B2  2CB1               	goto	u1697
  3272  04B3  0BF1               	decfsz	??_lcd_instReg+1,f
  3273  04B4  2CB1               	goto	u1697
  3274  04B5  2CB6               	nop2
  3275  04B6  2CBB               	goto	l1159
  3276  04B7                     l1157:
  3277                           
  3278                           ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3279  04B7  300D               	movlw	13
  3280  04B8  00F0               	movwf	??_lcd_instReg
  3281  04B9                     u1707:
  3282  04B9  0BF0               	decfsz	??_lcd_instReg,f
  3283  04BA  2CB9               	goto	u1707
  3284  04BB                     l1159:
  3285                           
  3286                           ;lcd.c: 68:     PORTDbits.RD3 = 1;
  3287  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  3288  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  3289  04BD  1588               	bsf	8,3	;volatile
  3290  04BE                     l1161:
  3291                           
  3292                           ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  3293  04BE  30F0               	movlw	240
  3294  04BF  0572               	andwf	lcd_instReg@i,w
  3295  04C0  00F0               	movwf	??_lcd_instReg
  3296  04C1  3020               	movlw	32
  3297  04C2  0670               	xorwf	??_lcd_instReg,w
  3298  04C3  1D03               	btfss	3,2
  3299  04C4  2CC6               	goto	u881
  3300  04C5  2CC7               	goto	u880
  3301  04C6                     u881:
  3302  04C6  2CE4               	goto	l1173
  3303  04C7                     u880:
  3304  04C7                     l1163:
  3305                           
  3306                           ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  3307  04C7  1108               	bcf	8,2	;volatile
  3308  04C8                     l1165:
  3309                           
  3310                           ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3311  04C8  0872               	movf	lcd_instReg@i,w
  3312  04C9  00F0               	movwf	??_lcd_instReg
  3313  04CA  3004               	movlw	4
  3314  04CB                     u895:
  3315  04CB  1003               	clrc
  3316  04CC  0CF0               	rrf	??_lcd_instReg,f
  3317  04CD  3EFF               	addlw	-1
  3318  04CE  1D03               	skipz
  3319  04CF  2CCB               	goto	u895
  3320  04D0  0870               	movf	??_lcd_instReg,w
  3321  04D1  00F1               	movwf	??_lcd_instReg+1
  3322  04D2  3004               	movlw	4
  3323  04D3                     u905:
  3324  04D3  1003               	clrc
  3325  04D4  0DF1               	rlf	??_lcd_instReg+1,f
  3326  04D5  3EFF               	addlw	-1
  3327  04D6  1D03               	skipz
  3328  04D7  2CD3               	goto	u905
  3329  04D8  0808               	movf	8,w	;volatile
  3330  04D9  390F               	andlw	15
  3331  04DA  0471               	iorwf	??_lcd_instReg+1,w
  3332  04DB  0088               	movwf	8	;volatile
  3333  04DC                     l1167:
  3334                           
  3335                           ;lcd.c: 75:         PORTDbits.RD3 = 0;
  3336  04DC  1188               	bcf	8,3	;volatile
  3337  04DD                     l1169:
  3338                           
  3339                           ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3340  04DD  300D               	movlw	13
  3341  04DE  00F0               	movwf	??_lcd_instReg
  3342  04DF                     u1717:
  3343  04DF  0BF0               	decfsz	??_lcd_instReg,f
  3344  04E0  2CDF               	goto	u1717
  3345  04E1                     l1171:
  3346                           
  3347                           ;lcd.c: 77:         PORTDbits.RD3 = 1;
  3348  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3349  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3350  04E3  1588               	bsf	8,3	;volatile
  3351  04E4                     l1173:
  3352                           
  3353                           ;lcd.c: 80:     PORTDbits.RD2 = 0;
  3354  04E4  1108               	bcf	8,2	;volatile
  3355  04E5                     l1175:
  3356                           
  3357                           ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  3358  04E5  0872               	movf	lcd_instReg@i,w
  3359  04E6  00F0               	movwf	??_lcd_instReg
  3360  04E7  3004               	movlw	4
  3361  04E8                     u915:
  3362  04E8  1003               	clrc
  3363  04E9  0DF0               	rlf	??_lcd_instReg,f
  3364  04EA  3EFF               	addlw	-1
  3365  04EB  1D03               	skipz
  3366  04EC  2CE8               	goto	u915
  3367  04ED  0808               	movf	8,w	;volatile
  3368  04EE  390F               	andlw	15
  3369  04EF  0470               	iorwf	??_lcd_instReg,w
  3370  04F0  0088               	movwf	8	;volatile
  3371  04F1                     l1177:
  3372                           
  3373                           ;lcd.c: 82:     PORTDbits.RD3 = 0;
  3374  04F1  1188               	bcf	8,3	;volatile
  3375  04F2                     l1179:
  3376                           
  3377                           ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  3378  04F2  0372               	decf	lcd_instReg@i,w
  3379  04F3  1903               	btfsc	3,2
  3380  04F4  2CF6               	goto	u921
  3381  04F5  2CF7               	goto	u920
  3382  04F6                     u921:
  3383  04F6  2CFD               	goto	l1183
  3384  04F7                     u920:
  3385  04F7                     l1181:
  3386  04F7  3002               	movlw	2
  3387  04F8  0672               	xorwf	lcd_instReg@i,w
  3388  04F9  1D03               	btfss	3,2
  3389  04FA  2CFC               	goto	u931
  3390  04FB  2CFD               	goto	u930
  3391  04FC                     u931:
  3392  04FC  2D07               	goto	l1185
  3393  04FD                     u930:
  3394  04FD                     l1183:
  3395                           
  3396                           ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3397  04FD  3003               	movlw	3
  3398  04FE  00F1               	movwf	??_lcd_instReg+1
  3399  04FF  3097               	movlw	151
  3400  0500  00F0               	movwf	??_lcd_instReg
  3401  0501                     u1727:
  3402  0501  0BF0               	decfsz	??_lcd_instReg,f
  3403  0502  2D01               	goto	u1727
  3404  0503  0BF1               	decfsz	??_lcd_instReg+1,f
  3405  0504  2D01               	goto	u1727
  3406  0505  2D06               	nop2
  3407  0506  2D0B               	goto	l1187
  3408  0507                     l1185:
  3409                           
  3410                           ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3411  0507  300D               	movlw	13
  3412  0508  00F0               	movwf	??_lcd_instReg
  3413  0509                     u1737:
  3414  0509  0BF0               	decfsz	??_lcd_instReg,f
  3415  050A  2D09               	goto	u1737
  3416  050B                     l1187:
  3417                           
  3418                           ;lcd.c: 87:     PORTDbits.RD3 = 1;
  3419  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3420  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3421  050D  1588               	bsf	8,3	;volatile
  3422  050E                     l43:
  3423  050E  0008               	return
  3424  050F                     __end_of_lcd_instReg:
  3425                           
  3426                           	psect	text15
  3427  0198                     __ptext15:	
  3428 ;; *************** function _delay *****************
  3429 ;; Defined at:
  3430 ;;		line 12 in file "delay.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  t               2    0[COMMON] unsigned int 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         2       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          1       0       0       0       0
  3447 ;;      Totals:         3       0       0       0       0
  3448 ;;Total ram usage:        3 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_lcd_init
  3454 ;;		_stepmotor
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _delay
  3460  0198                     _delay:
  3461  0198                     l1189:	
  3462                           ;incstack = 0
  3463                           ; Regs used in _delay: [wreg+status,2+status,0]
  3464                           
  3465                           
  3466                           ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  3467  0198  29A6               	goto	l1193
  3468  0199                     l1191:
  3469                           
  3470                           ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));
  3471  0199  30C7               	movlw	199
  3472  019A  00F2               	movwf	??_delay
  3473  019B                     u1747:
  3474  019B  299C               	nop2
  3475  019C  0BF2               	decfsz	??_delay,f
  3476  019D  299B               	goto	u1747
  3477  019E  299F               	nop2
  3478  019F  29A0               	nop2
  3479                           
  3480                           ;delay.c: 17:         --t;
  3481  01A0  3001               	movlw	1
  3482  01A1  02F0               	subwf	delay@t,f
  3483  01A2  3000               	movlw	0
  3484  01A3  1C03               	skipc
  3485  01A4  03F1               	decf	delay@t+1,f
  3486  01A5  02F1               	subwf	delay@t+1,f
  3487  01A6                     l1193:
  3488                           
  3489                           ;delay.c: 14:     while( t )
  3490  01A6  0870               	movf	delay@t,w
  3491  01A7  0471               	iorwf	delay@t+1,w
  3492  01A8  1D03               	btfss	3,2
  3493  01A9  29AB               	goto	u941
  3494  01AA  29AC               	goto	u940
  3495  01AB                     u941:
  3496  01AB  2999               	goto	l1191
  3497  01AC                     u940:
  3498  01AC                     l8:
  3499  01AC  0008               	return
  3500  01AD                     __end_of_delay:
  3501                           
  3502                           	psect	text16
  3503  0645                     __ptext16:	
  3504 ;; *************** function _edit *****************
  3505 ;; Defined at:
  3506 ;;		line 8 in file "editnum.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  ptr_edit        1    wreg     PTR int 
  3509 ;;		 -> main@numpassos(2), 
  3510 ;;  tecla           1    0[BANK0 ] unsigned char 
  3511 ;;  delete          1    1[BANK0 ] unsigned char 
  3512 ;;  menos           1    2[BANK0 ] unsigned char 
  3513 ;;  min             2    3[BANK0 ] unsigned int 
  3514 ;;  max             2    5[BANK0 ] unsigned int 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  ptr_edit        1   11[BANK0 ] PTR int 
  3517 ;;		 -> main@numpassos(2), 
  3518 ;;  aux             4    7[BANK0 ] long 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         0       7       0       0       0
  3529 ;;      Locals:         0       5       0       0       0
  3530 ;;      Temps:          4       0       0       0       0
  3531 ;;      Totals:         4      12       0       0       0
  3532 ;;Total ram usage:       16 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 1
  3535 ;; This function calls:
  3536 ;;		___awdiv
  3537 ;;		___wmul
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _edit
  3545  0645                     _edit:
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _edit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3549                           ;edit@ptr_edit stored from wreg
  3550  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3552  0647  00AB               	movwf	edit@ptr_edit
  3553  0648                     l1363:
  3554                           
  3555                           ;editnum.c: 8: void edit( int * ptr_edit,;editnum.c: 9:             unsigned char tecla,
      +                          ;editnum.c: 10:             unsigned char delete,;editnum.c: 11:             unsigned ch
      +                          ar menos,;editnum.c: 12:             unsigned int min,;editnum.c: 13:             unsign
      +                          ed int max);editnum.c: 14: {;editnum.c: 15:     long aux;;editnum.c: 16:     if( !teclaA
      +                          nt && tecla )
  3556  0648  084A               	movf	_teclaAnt,w
  3557  0649  1D03               	btfss	3,2
  3558  064A  2E4C               	goto	u1361
  3559  064B  2E4D               	goto	u1360
  3560  064C                     u1361:
  3561  064C  2EFF               	goto	l1387
  3562  064D                     u1360:
  3563  064D                     l1365:
  3564  064D  0820               	movf	edit@tecla,w
  3565  064E  1903               	btfsc	3,2
  3566  064F  2E51               	goto	u1371
  3567  0650  2E52               	goto	u1370
  3568  0651                     u1371:
  3569  0651  2EFF               	goto	l1387
  3570  0652                     u1370:
  3571  0652                     l1367:
  3572                           
  3573                           ;editnum.c: 17:     {;editnum.c: 18:         if( tecla >= '0' && tecla <= '9' )
  3574  0652  3030               	movlw	48
  3575  0653  0220               	subwf	edit@tecla,w
  3576  0654  1C03               	skipc
  3577  0655  2E57               	goto	u1381
  3578  0656  2E58               	goto	u1380
  3579  0657                     u1381:
  3580  0657  2EA7               	goto	l1377
  3581  0658                     u1380:
  3582  0658                     l1369:
  3583  0658  303A               	movlw	58
  3584  0659  0220               	subwf	edit@tecla,w
  3585  065A  1803               	skipnc
  3586  065B  2E5D               	goto	u1391
  3587  065C  2E5E               	goto	u1390
  3588  065D                     u1391:
  3589  065D  2EA7               	goto	l1377
  3590  065E                     u1390:
  3591  065E                     l1371:
  3592                           
  3593                           ;editnum.c: 19:         {;editnum.c: 20:             aux = ((*ptr_edit) * 10)+(tecla-'0'
      +                          );
  3594  065E  082B               	movf	edit@ptr_edit,w
  3595  065F  0084               	movwf	4
  3596  0660  1383               	bcf	3,7	;select IRP bank0
  3597  0661  0800               	movf	0,w
  3598  0662  00F0               	movwf	___wmul@multiplier
  3599  0663  0A84               	incf	4,f
  3600  0664  0800               	movf	0,w
  3601  0665  00F1               	movwf	___wmul@multiplier+1
  3602  0666  300A               	movlw	10
  3603  0667  00F2               	movwf	___wmul@multiplicand
  3604  0668  3000               	movlw	0
  3605  0669  00F3               	movwf	___wmul@multiplicand+1
  3606  066A  120A  118A  21C2  120A  118A  	fcall	___wmul
  3607  066F  1283               	bcf	3,5	;RP0=0, select bank0
  3608  0670  1303               	bcf	3,6	;RP1=0, select bank0
  3609  0671  0820               	movf	edit@tecla,w
  3610  0672  0770               	addwf	?___wmul,w
  3611  0673  00F9               	movwf	??_edit
  3612  0674  3000               	movlw	0
  3613  0675  1803               	skipnc
  3614  0676  3001               	movlw	1
  3615  0677  0771               	addwf	?___wmul+1,w
  3616  0678  00FA               	movwf	??_edit+1
  3617  0679  0879               	movf	??_edit,w
  3618  067A  3ED0               	addlw	208
  3619  067B  00A7               	movwf	edit@aux
  3620  067C  087A               	movf	??_edit+1,w
  3621  067D  1803               	skipnc
  3622  067E  3E01               	addlw	1
  3623  067F  3EFF               	addlw	255
  3624  0680  00A8               	movwf	edit@aux+1
  3625  0681  01A9               	clrf	edit@aux+2
  3626  0682  01AA               	clrf	edit@aux+3
  3627  0683                     l1373:
  3628                           
  3629                           ;editnum.c: 21:             if( aux <= max )
  3630  0683  0825               	movf	edit@max,w
  3631  0684  00F9               	movwf	??_edit
  3632  0685  0826               	movf	edit@max+1,w
  3633  0686  00FA               	movwf	??_edit+1
  3634  0687  01FB               	clrf	??_edit+2
  3635  0688  01FC               	clrf	??_edit+3
  3636  0689  087C               	movf	??_edit+3,w
  3637  068A  3A80               	xorlw	128
  3638  068B  00FF               	movwf	btemp+1
  3639  068C  082A               	movf	edit@aux+3,w
  3640  068D  3A80               	xorlw	128
  3641  068E  027F               	subwf	btemp+1,w
  3642  068F  1D03               	skipz
  3643  0690  2E9B               	goto	u1403
  3644  0691  0829               	movf	edit@aux+2,w
  3645  0692  027B               	subwf	??_edit+2,w
  3646  0693  1D03               	skipz
  3647  0694  2E9B               	goto	u1403
  3648  0695  0828               	movf	edit@aux+1,w
  3649  0696  027A               	subwf	??_edit+1,w
  3650  0697  1D03               	skipz
  3651  0698  2E9B               	goto	u1403
  3652  0699  0827               	movf	edit@aux,w
  3653  069A  0279               	subwf	??_edit,w
  3654  069B                     u1403:
  3655  069B  1C03               	skipc
  3656  069C  2E9E               	goto	u1401
  3657  069D  2E9F               	goto	u1400
  3658  069E                     u1401:
  3659  069E  2EA7               	goto	l1377
  3660  069F                     u1400:
  3661  069F                     l1375:
  3662                           
  3663                           ;editnum.c: 22:                 *ptr_edit = aux;
  3664  069F  082B               	movf	edit@ptr_edit,w
  3665  06A0  0084               	movwf	4
  3666  06A1  0827               	movf	edit@aux,w
  3667  06A2  1383               	bcf	3,7	;select IRP bank0
  3668  06A3  0080               	movwf	0
  3669  06A4  0A84               	incf	4,f
  3670  06A5  0828               	movf	edit@aux+1,w
  3671  06A6  0080               	movwf	0
  3672  06A7                     l1377:
  3673                           
  3674                           ;editnum.c: 24:         if( tecla == delete )
  3675  06A7  0820               	movf	edit@tecla,w
  3676  06A8  0621               	xorwf	edit@delete,w
  3677  06A9  1D03               	skipz
  3678  06AA  2EAC               	goto	u1411
  3679  06AB  2EAD               	goto	u1410
  3680  06AC                     u1411:
  3681  06AC  2EE5               	goto	l1383
  3682  06AD                     u1410:
  3683  06AD                     l1379:
  3684                           
  3685                           ;editnum.c: 25:         {;editnum.c: 26:             if( (*ptr_edit)/10 >= min )
  3686  06AD  300A               	movlw	10
  3687  06AE  00F0               	movwf	___awdiv@divisor
  3688  06AF  3000               	movlw	0
  3689  06B0  00F1               	movwf	___awdiv@divisor+1
  3690  06B1  082B               	movf	edit@ptr_edit,w
  3691  06B2  0084               	movwf	4
  3692  06B3  1383               	bcf	3,7	;select IRP bank0
  3693  06B4  0800               	movf	0,w
  3694  06B5  00F2               	movwf	___awdiv@dividend
  3695  06B6  0A84               	incf	4,f
  3696  06B7  0800               	movf	0,w
  3697  06B8  00F3               	movwf	___awdiv@dividend+1
  3698  06B9  120A  118A  23BA  120A  118A  	fcall	___awdiv
  3699  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3700  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3701  06C0  0824               	movf	edit@min+1,w
  3702  06C1  0271               	subwf	?___awdiv+1,w
  3703  06C2  1D03               	skipz
  3704  06C3  2EC6               	goto	u1425
  3705  06C4  0823               	movf	edit@min,w
  3706  06C5  0270               	subwf	?___awdiv,w
  3707  06C6                     u1425:
  3708  06C6  1C03               	skipc
  3709  06C7  2EC9               	goto	u1421
  3710  06C8  2ECA               	goto	u1420
  3711  06C9                     u1421:
  3712  06C9  2EE5               	goto	l1383
  3713  06CA                     u1420:
  3714  06CA                     l1381:
  3715                           
  3716                           ;editnum.c: 27:                 *ptr_edit = (*ptr_edit) / 10;
  3717  06CA  300A               	movlw	10
  3718  06CB  00F0               	movwf	___awdiv@divisor
  3719  06CC  3000               	movlw	0
  3720  06CD  00F1               	movwf	___awdiv@divisor+1
  3721  06CE  082B               	movf	edit@ptr_edit,w
  3722  06CF  0084               	movwf	4
  3723  06D0  1383               	bcf	3,7	;select IRP bank0
  3724  06D1  0800               	movf	0,w
  3725  06D2  00F2               	movwf	___awdiv@dividend
  3726  06D3  0A84               	incf	4,f
  3727  06D4  0800               	movf	0,w
  3728  06D5  00F3               	movwf	___awdiv@dividend+1
  3729  06D6  120A  118A  23BA  120A  118A  	fcall	___awdiv
  3730  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  3731  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  3732  06DD  082B               	movf	edit@ptr_edit,w
  3733  06DE  0084               	movwf	4
  3734  06DF  0870               	movf	?___awdiv,w
  3735  06E0  1383               	bcf	3,7	;select IRP bank0
  3736  06E1  0080               	movwf	0
  3737  06E2  0A84               	incf	4,f
  3738  06E3  0871               	movf	?___awdiv+1,w
  3739  06E4  0080               	movwf	0
  3740  06E5                     l1383:
  3741                           
  3742                           ;editnum.c: 29:         if( tecla == menos )
  3743  06E5  0820               	movf	edit@tecla,w
  3744  06E6  0622               	xorwf	edit@menos,w
  3745  06E7  1D03               	skipz
  3746  06E8  2EEA               	goto	u1431
  3747  06E9  2EEB               	goto	u1430
  3748  06EA                     u1431:
  3749  06EA  2EFF               	goto	l1387
  3750  06EB                     u1430:
  3751  06EB                     l1385:
  3752                           
  3753                           ;editnum.c: 30:         {;editnum.c: 31:             * ptr_edit = ~(*ptr_edit) + 1;
  3754  06EB  082B               	movf	edit@ptr_edit,w
  3755  06EC  0084               	movwf	4
  3756  06ED  1383               	bcf	3,7	;select IRP bank0
  3757  06EE  0800               	movf	0,w
  3758  06EF  00F9               	movwf	??_edit
  3759  06F0  0A84               	incf	4,f
  3760  06F1  0800               	movf	0,w
  3761  06F2  00FA               	movwf	??_edit+1
  3762  06F3  09F9               	comf	??_edit,f
  3763  06F4  09FA               	comf	??_edit+1,f
  3764  06F5  0AF9               	incf	??_edit,f
  3765  06F6  1903               	skipnz
  3766  06F7  0AFA               	incf	??_edit+1,f
  3767  06F8  082B               	movf	edit@ptr_edit,w
  3768  06F9  0084               	movwf	4
  3769  06FA  0879               	movf	??_edit,w
  3770  06FB  0080               	movwf	0
  3771  06FC  0A84               	incf	4,f
  3772  06FD  087A               	movf	??_edit+1,w
  3773  06FE  0080               	movwf	0
  3774  06FF                     l1387:
  3775                           
  3776                           ;editnum.c: 34:     teclaAnt = tecla;
  3777  06FF  0820               	movf	edit@tecla,w
  3778  0700  00F9               	movwf	??_edit
  3779  0701  0879               	movf	??_edit,w
  3780  0702  00CA               	movwf	_teclaAnt
  3781  0703                     l21:
  3782  0703  0008               	return
  3783  0704                     __end_of_edit:
  3784                           
  3785                           	psect	text17
  3786  01C2                     __ptext17:	
  3787 ;; *************** function ___wmul *****************
  3788 ;; Defined at:
  3789 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/Umul16.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  multiplier      2    0[COMMON] unsigned int 
  3792 ;;  multiplicand    2    2[COMMON] unsigned int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  product         2    4[COMMON] unsigned int 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  2    0[COMMON] unsigned int 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         4       0       0       0       0
  3805 ;;      Locals:         2       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0
  3807 ;;      Totals:         6       0       0       0       0
  3808 ;;Total ram usage:        6 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_edit
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           
  3818                           ;psect for function ___wmul
  3819  01C2                     ___wmul:
  3820  01C2                     l1215:	
  3821                           ;incstack = 0
  3822                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3823                           
  3824  01C2  01F4               	clrf	___wmul@product
  3825  01C3  01F5               	clrf	___wmul@product+1
  3826  01C4                     l1217:
  3827  01C4  1C70               	btfss	___wmul@multiplier,0
  3828  01C5  29C7               	goto	u991
  3829  01C6  29C8               	goto	u990
  3830  01C7                     u991:
  3831  01C7  29CE               	goto	l241
  3832  01C8                     u990:
  3833  01C8                     l1219:
  3834  01C8  0872               	movf	___wmul@multiplicand,w
  3835  01C9  07F4               	addwf	___wmul@product,f
  3836  01CA  1803               	skipnc
  3837  01CB  0AF5               	incf	___wmul@product+1,f
  3838  01CC  0873               	movf	___wmul@multiplicand+1,w
  3839  01CD  07F5               	addwf	___wmul@product+1,f
  3840  01CE                     l241:
  3841  01CE  3001               	movlw	1
  3842  01CF                     u1005:
  3843  01CF  1003               	clrc
  3844  01D0  0DF2               	rlf	___wmul@multiplicand,f
  3845  01D1  0DF3               	rlf	___wmul@multiplicand+1,f
  3846  01D2  3EFF               	addlw	-1
  3847  01D3  1D03               	skipz
  3848  01D4  29CF               	goto	u1005
  3849  01D5                     l1221:
  3850  01D5  3001               	movlw	1
  3851  01D6                     u1015:
  3852  01D6  1003               	clrc
  3853  01D7  0CF1               	rrf	___wmul@multiplier+1,f
  3854  01D8  0CF0               	rrf	___wmul@multiplier,f
  3855  01D9  3EFF               	addlw	-1
  3856  01DA  1D03               	skipz
  3857  01DB  29D6               	goto	u1015
  3858  01DC                     l1223:
  3859  01DC  0870               	movf	___wmul@multiplier,w
  3860  01DD  0471               	iorwf	___wmul@multiplier+1,w
  3861  01DE  1D03               	btfss	3,2
  3862  01DF  29E1               	goto	u1021
  3863  01E0  29E2               	goto	u1020
  3864  01E1                     u1021:
  3865  01E1  29C4               	goto	l1217
  3866  01E2                     u1020:
  3867  01E2                     l1225:
  3868  01E2  0875               	movf	___wmul@product+1,w
  3869  01E3  00F1               	movwf	?___wmul+1
  3870  01E4  0874               	movf	___wmul@product,w
  3871  01E5  00F0               	movwf	?___wmul
  3872  01E6                     l243:
  3873  01E6  0008               	return
  3874  01E7                     __end_of___wmul:
  3875                           
  3876                           	psect	text18
  3877  03BA                     __ptext18:	
  3878 ;; *************** function ___awdiv *****************
  3879 ;; Defined at:
  3880 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/awdiv.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  divisor         2    0[COMMON] int 
  3883 ;;  dividend        2    2[COMMON] int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  quotient        2    7[COMMON] int 
  3886 ;;  sign            1    6[COMMON] unsigned char 
  3887 ;;  counter         1    5[COMMON] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    0[COMMON] int 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3897 ;;      Params:         4       0       0       0       0
  3898 ;;      Locals:         4       0       0       0       0
  3899 ;;      Temps:          1       0       0       0       0
  3900 ;;      Totals:         9       0       0       0       0
  3901 ;;Total ram usage:        9 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_edit
  3907 ;;		_lcd_num
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function ___awdiv
  3913  03BA                     ___awdiv:
  3914  03BA                     l1281:	
  3915                           ;incstack = 0
  3916                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3917                           
  3918  03BA  01F6               	clrf	___awdiv@sign
  3919  03BB                     l1283:
  3920  03BB  1FF1               	btfss	___awdiv@divisor+1,7
  3921  03BC  2BBE               	goto	u1171
  3922  03BD  2BBF               	goto	u1170
  3923  03BE                     u1171:
  3924  03BE  2BC6               	goto	l1289
  3925  03BF                     u1170:
  3926  03BF                     l1285:
  3927  03BF  09F0               	comf	___awdiv@divisor,f
  3928  03C0  09F1               	comf	___awdiv@divisor+1,f
  3929  03C1  0AF0               	incf	___awdiv@divisor,f
  3930  03C2  1903               	skipnz
  3931  03C3  0AF1               	incf	___awdiv@divisor+1,f
  3932  03C4                     l1287:
  3933  03C4  01F6               	clrf	___awdiv@sign
  3934  03C5  0AF6               	incf	___awdiv@sign,f
  3935  03C6                     l1289:
  3936  03C6  1FF3               	btfss	___awdiv@dividend+1,7
  3937  03C7  2BC9               	goto	u1181
  3938  03C8  2BCA               	goto	u1180
  3939  03C9                     u1181:
  3940  03C9  2BD3               	goto	l1295
  3941  03CA                     u1180:
  3942  03CA                     l1291:
  3943  03CA  09F2               	comf	___awdiv@dividend,f
  3944  03CB  09F3               	comf	___awdiv@dividend+1,f
  3945  03CC  0AF2               	incf	___awdiv@dividend,f
  3946  03CD  1903               	skipnz
  3947  03CE  0AF3               	incf	___awdiv@dividend+1,f
  3948  03CF                     l1293:
  3949  03CF  3001               	movlw	1
  3950  03D0  00F4               	movwf	??___awdiv
  3951  03D1  0874               	movf	??___awdiv,w
  3952  03D2  06F6               	xorwf	___awdiv@sign,f
  3953  03D3                     l1295:
  3954  03D3  01F7               	clrf	___awdiv@quotient
  3955  03D4  01F8               	clrf	___awdiv@quotient+1
  3956  03D5                     l1297:
  3957  03D5  0870               	movf	___awdiv@divisor,w
  3958  03D6  0471               	iorwf	___awdiv@divisor+1,w
  3959  03D7  1903               	btfsc	3,2
  3960  03D8  2BDA               	goto	u1191
  3961  03D9  2BDB               	goto	u1190
  3962  03DA                     u1191:
  3963  03DA  2C12               	goto	l1317
  3964  03DB                     u1190:
  3965  03DB                     l1299:
  3966  03DB  01F5               	clrf	___awdiv@counter
  3967  03DC  0AF5               	incf	___awdiv@counter,f
  3968  03DD  2BE9               	goto	l1305
  3969  03DE                     l1301:
  3970  03DE  3001               	movlw	1
  3971  03DF                     u1205:
  3972  03DF  1003               	clrc
  3973  03E0  0DF0               	rlf	___awdiv@divisor,f
  3974  03E1  0DF1               	rlf	___awdiv@divisor+1,f
  3975  03E2  3EFF               	addlw	-1
  3976  03E3  1D03               	skipz
  3977  03E4  2BDF               	goto	u1205
  3978  03E5                     l1303:
  3979  03E5  3001               	movlw	1
  3980  03E6  00F4               	movwf	??___awdiv
  3981  03E7  0874               	movf	??___awdiv,w
  3982  03E8  07F5               	addwf	___awdiv@counter,f
  3983  03E9                     l1305:
  3984  03E9  1FF1               	btfss	___awdiv@divisor+1,7
  3985  03EA  2BEC               	goto	u1211
  3986  03EB  2BED               	goto	u1210
  3987  03EC                     u1211:
  3988  03EC  2BDE               	goto	l1301
  3989  03ED                     u1210:
  3990  03ED                     l1307:
  3991  03ED  3001               	movlw	1
  3992  03EE                     u1225:
  3993  03EE  1003               	clrc
  3994  03EF  0DF7               	rlf	___awdiv@quotient,f
  3995  03F0  0DF8               	rlf	___awdiv@quotient+1,f
  3996  03F1  3EFF               	addlw	-1
  3997  03F2  1D03               	skipz
  3998  03F3  2BEE               	goto	u1225
  3999  03F4  0871               	movf	___awdiv@divisor+1,w
  4000  03F5  0273               	subwf	___awdiv@dividend+1,w
  4001  03F6  1D03               	skipz
  4002  03F7  2BFA               	goto	u1235
  4003  03F8  0870               	movf	___awdiv@divisor,w
  4004  03F9  0272               	subwf	___awdiv@dividend,w
  4005  03FA                     u1235:
  4006  03FA  1C03               	skipc
  4007  03FB  2BFD               	goto	u1231
  4008  03FC  2BFE               	goto	u1230
  4009  03FD                     u1231:
  4010  03FD  2C05               	goto	l1313
  4011  03FE                     u1230:
  4012  03FE                     l1309:
  4013  03FE  0870               	movf	___awdiv@divisor,w
  4014  03FF  02F2               	subwf	___awdiv@dividend,f
  4015  0400  0871               	movf	___awdiv@divisor+1,w
  4016  0401  1C03               	skipc
  4017  0402  03F3               	decf	___awdiv@dividend+1,f
  4018  0403  02F3               	subwf	___awdiv@dividend+1,f
  4019  0404                     l1311:
  4020  0404  1477               	bsf	___awdiv@quotient,0
  4021  0405                     l1313:
  4022  0405  3001               	movlw	1
  4023  0406                     u1245:
  4024  0406  1003               	clrc
  4025  0407  0CF1               	rrf	___awdiv@divisor+1,f
  4026  0408  0CF0               	rrf	___awdiv@divisor,f
  4027  0409  3EFF               	addlw	-1
  4028  040A  1D03               	skipz
  4029  040B  2C06               	goto	u1245
  4030  040C                     l1315:
  4031  040C  3001               	movlw	1
  4032  040D  02F5               	subwf	___awdiv@counter,f
  4033  040E  1D03               	btfss	3,2
  4034  040F  2C11               	goto	u1251
  4035  0410  2C12               	goto	u1250
  4036  0411                     u1251:
  4037  0411  2BED               	goto	l1307
  4038  0412                     u1250:
  4039  0412                     l1317:
  4040  0412  0876               	movf	___awdiv@sign,w
  4041  0413  1903               	btfsc	3,2
  4042  0414  2C16               	goto	u1261
  4043  0415  2C17               	goto	u1260
  4044  0416                     u1261:
  4045  0416  2C1C               	goto	l1321
  4046  0417                     u1260:
  4047  0417                     l1319:
  4048  0417  09F7               	comf	___awdiv@quotient,f
  4049  0418  09F8               	comf	___awdiv@quotient+1,f
  4050  0419  0AF7               	incf	___awdiv@quotient,f
  4051  041A  1903               	skipnz
  4052  041B  0AF8               	incf	___awdiv@quotient+1,f
  4053  041C                     l1321:
  4054  041C  0878               	movf	___awdiv@quotient+1,w
  4055  041D  00F1               	movwf	?___awdiv+1
  4056  041E  0877               	movf	___awdiv@quotient,w
  4057  041F  00F0               	movwf	?___awdiv
  4058  0420                     l394:
  4059  0420  0008               	return
  4060  0421                     __end_of___awdiv:
  4061  007E                     btemp	set	126	;btemp
  4062  007E                     wtemp0	set	126
  4063                           
  4064                           	psect	config
  4065                           
  4066                           ;Config register CONFIG1 @ 0x2007
  4067                           ;	Oscillator Selection bits
  4068                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4069                           ;	Watchdog Timer Enable bit
  4070                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4071                           ;	Power-up Timer Enable bit
  4072                           ;	PWRTE = OFF, PWRT disabled
  4073                           ;	RE3/MCLR pin function select bit
  4074                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4075                           ;	Code Protection bit
  4076                           ;	CP = OFF, Program memory code protection is disabled
  4077                           ;	Data Code Protection bit
  4078                           ;	CPD = OFF, Data memory code protection is disabled
  4079                           ;	Brown Out Reset Selection bits
  4080                           ;	BOREN = OFF, BOR disabled
  4081                           ;	Internal External Switchover bit
  4082                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4083                           ;	Fail-Safe Clock Monitor Enabled bit
  4084                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4085                           ;	Low Voltage Programming Enable bit
  4086                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4087                           ;	In-Circuit Debugger Mode bit
  4088                           ;	DEBUG = 0x1, unprogrammed default
  4089  2007                     	org	8199
  4090  2007  20D4               	dw	8404
  4091                           
  4092                           ;Config register CONFIG2 @ 0x2008
  4093                           ;	Brown-out Reset Selection bit
  4094                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4095                           ;	Flash Program Memory Self Write Enable bits
  4096                           ;	WRT = OFF, Write protection off
  4097  2008                     	org	8200
  4098  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    16
    Data        8
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    edit@ptr_edit	PTR int  size(1) Largest target is 2
		 -> main@numpassos(BANK0[2]), 


Critical Paths under _main in COMMON

    _stepmotor->___lldiv
    ___lldiv->___lmul
    _lcd_print->_lcd_lincol
    _lcd_num->___awdiv
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg
    _edit->___awdiv

Critical Paths under _main in BANK0

    _main->_stepmotor
    _stepmotor->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    8434
                                             27 BANK0      6     6      0
                               _edit
                           _lcd_init
                            _lcd_num
                          _lcd_print
                          _stepmotor
                     _stepmotor_init
                            _teclado
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _teclado                                             10    10      0     204
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) _stepmotor_init                                       3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _stepmotor                                           14     5      9    1612
                                             13 BANK0     14     5      9
                             ___bmul
                            ___lldiv
                             ___lmul
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     833
                                              6 COMMON     5     3      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    2753
                                              9 COMMON     4     0      4
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              3 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     503
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     327
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _edit                                                16     9      7    2310
                                              9 COMMON     4     4      0
                                              0 BANK0     12     5      7
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _edit
     ___awdiv
     ___wmul
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
   _stepmotor
     ___bmul
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _delay
   _stepmotor_init
   _teclado
   _teclado_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      41      12        0.0%
ABS                  0      0      41       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 22:31:27 2021

                               l8 01AC                                 pc 0002                    ___bmul@product 0072  
                    lcd_dataReg@d 0072                                l21 0703                                l43 050E  
                              l52 02BF                                l61 0217                                l46 0280  
                              l49 0184                                l76 0798                                l78 07E3  
                    ___awdiv@sign 0076                                fsr 0004               ___wmul@multiplicand 0072  
                             l122 024A                               l132 0644                               l127 05ED  
                             l241 01CE                               l145 0171                               l243 01E6  
                             l155 03B9                               l407 035E                               l255 0305  
                             l267 01C1                               l277 0488                               l394 0420  
                             u920 04F7                               u921 04F6                               u905 04D3  
                             u930 04FD                               u931 04FC                               u915 04E8  
                             u940 01AC                               u860 04A7                               u941 01AB  
                             u861 04A6                               u845 0490                               u870 04AD  
                             u871 04AC                               u855 0498                               u880 04C7  
                             u881 04C6                               u955 0252                               u965 025A  
                             u990 01C8                               u991 01C7                               u895 04CB  
                             u975 026F                               u985 0176                               _ppr 0045  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0076  
                     lcd_num@size 0024                              l1201 0264                              l1211 027D  
                            l1203 0268                              l1301 03DE                              l1221 01D5  
                            l1205 026B                              l1213 0173                              l1311 0404  
                            l1303 03E5                              l1223 01DC                              l1215 01C2  
                            l1151 04A1                              l1207 026C                              l1231 02C8  
                            l1321 041C                              l1313 0405                              l1305 03E9  
                            l1225 01E2                              l1217 01C4                              l1161 04BE  
                            l1153 04A7                              l1401 0291                              l1209 0278  
                            l1233 02CC                              l1315 040C                              l1307 03ED  
                            l1219 01C8                              l1171 04E1                              l1163 04C7  
                            l1155 04AD                              l1147 048A                              l1403 029B  
                            l1331 0310                              l1411 0203                              l1251 01B9  
                            l1243 01AE                              l1235 02E3                              l1309 03FE  
                            l1317 0412                              l1181 04F7                              l1165 04C8  
                            l1173 04E4                              l1157 04B7                              l1149 048D  
                            l1341 0324                              l1333 0312                              l1325 0306  
                            l1421 0715                              l1413 0207                              l1405 01E8  
                            l1253 01C0                              l1245 01AF                              l1261 0436  
                            l1237 02EC                              l1229 02C0                              l1501 0595  
                            l1319 0417                              l1191 0199                              l1183 04FD  
                            l1175 04E5                              l1167 04DC                              l1159 04BB  
                            l1351 0343                              l1343 032B                              l1335 0316  
                            l1327 0307                              l1431 0744                              l1423 071A  
                            l1415 020B                              l1407 01EC                              l1247 01B3  
                            l1271 0470                              l1263 0443                              l1239 02FD  
                            l1511 05E2                              l1503 059B                              l1281 03BA  
                            l1193 01A6                              l1185 0507                              l1177 04F1  
                            l1169 04DD                              l1353 034A                              l1345 032F  
                            l1337 031B                              l1329 030B                              l1433 0748  
                            l1441 0771                              l1425 0724                              l1417 0707  
                            l1409 01F7                              l1249 01B7                              l1273 0471  
                            l1265 0447                              l1257 0421                              l1521 0615  
                            l1513 05EB                              l1505 05A0                              l1291 03CA  
                            l1283 03BB                              l1371 065E                              l1363 0648  
                            l1187 050B                              l1179 04F2                              l1347 0333  
                            l1339 0321                              l1355 0350                              l1195 024C  
                            l1443 0785                              l1435 075B                              l1427 072A  
                            l1419 0710                              l1275 047A                              l1267 0450  
                            l1259 0433                              l1523 0631                              l1515 05F2  
                            l1507 05D5                              l1451 0161                              l1531 0519  
                            l1293 03CF                              l1285 03BF                              l1381 06CA  
                            l1373 0683                              l1365 064D                              l1189 0198  
                            l1357 0355                              l1349 033D                              l1197 024F  
                            l1445 078B                              l1437 0769                              l1429 072F  
                            l1269 0462                              l1277 0480                              l1517 0602  
                            l1525 063A                              l1509 05DD                              l1461 0218  
                            l1453 0165                              l1541 055F                              l1533 0522  
                            l1295 03D3                              l1287 03C4                              l1383 06E5  
                            l1375 069F                              l1367 0652                              l1391 028A  
                            l1359 035A                              l1199 0263                              l1447 0792  
                            l1439 076F                              l1519 060C                              l1463 0230  
                            l1471 035F                              l1455 0168                              l1543 0573  
                            l1535 052F                              l1297 03D5                              l1289 03C6  
                            l1385 06EB                              l1369 0658                              l1377 06A7  
                            l1393 028D                              l1449 07D6                              l1465 023C  
                            l1473 0361                              l1457 016B                              l1545 057B  
                            l1537 0539                              l1529 050F                              l1299 03DB  
                            l1379 06AD                              l1387 06FF                              l1395 028E  
                            l1467 023D                              l1491 03AD                              l1459 016D  
                            l1539 0552                              l1397 028F                              l1389 0281  
                            l1469 0241                              l1493 03B3                              l1485 0377  
                            l1477 0368                              l1399 0290                              l1487 0393  
                            l1479 0376                              l1489 03A9                              l1497 03B8  
                            STR_1 0019                              STR_2 002A                              u1020 01E2  
                            u1100 0433                              u1021 01E1                              u1005 01CF  
                            u1101 0432                              u1030 02CC                              u1015 01D6  
                            u1031 02CB                              u1120 0447                              u1121 0446  
                            u1041 02D5                              u1210 03ED                              u1042 02DC  
                            u1211 03EC                              u1115 0438                              u1043 02E3  
                            u1140 0462                              u1205 03DF                              u1141 0461  
                            u1230 03FE                              u1310 0333                              u1070 02FD  
                            u1231 03FD                              u1311 0332                              u1135 0449  
                            u1071 02FC                              u1055 02E5                              u1400 069F  
                            u1320 033D                              u1080 01B3                              u1160 0480  
                            u1225 03EE                              u1401 069E                              u1321 033C  
                            u1305 0325                              u1081 01B2                              u1161 047F  
                            u1145 045E                              u1065 02ED                              u1250 0412  
                            u1170 03BF                              u1410 06AD                              u1090 01C0  
                            u1251 0411                              u1235 03FA                              u1171 03BE  
                            u1411 06AC                              u1403 069B                              u1091 01BF  
                            u1155 0472                              u1260 0417                              u1180 03CA  
                            u1420 06CA                              u1340 0350                              u1500 0785  
                            u1261 0416                              u1245 0406                              u1181 03C9  
                            u1421 06C9                              u1341 034F                              u1325 0339  
                            u1501 0784                              u1190 03DB                              u1430 06EB  
                            u1350 0355                              u1270 030B                              u1510 078B  
                            u1191 03DA                              u1431 06EA                              u1351 0354  
                            u1335 0344                              u1271 030A                              u1511 078A  
                            u1360 064D                              u1280 0316                              u1520 0792  
                            u1440 0217                              u1600 05A0                              u1425 06C6  
                            u1361 064C                              u1281 0315                              u1521 0791  
                            u1505 0781                              u1441 0216                              u1601 059F  
                            u1370 0652                              u1290 0321                              u1530 07E3  
                            u1450 070C                              u1610 05E2                              u1371 0651  
                            u1291 0320                              u1531 07E2                              u1451 070A  
                            u1611 05E1                              u1380 0658                              u1460 070D  
                            u1540 0367                              u1381 0657                              u1541 0366  
                            u1390 065E                              u1470 0715                              u1630 05F2  
                            u1391 065D                              u1535 07DF                              u1471 0714  
                            u1631 05F1                              u1480 0744                              u1640 0631  
                            u1481 0743                              u1625 05E4                              u1490 0768  
                            u1650 0644                              u1570 0393                              u1554 036E  
                            u1707 04B9                              u1491 0767                              u1651 0643  
                            u1571 0392                              u1555 036C                              u1564 0385  
                            u1660 057B                              u1717 04DF                              u1645 0624  
                            u1565 0382                              u1661 057A                              u1646 0625  
                            u1590 03B3                              u1727 0501                              u1495 0764  
                            u1647 062A                              u1591 03B2                              u1648 062B  
                            u1737 0509                              u1649 0630                              u1585 0396  
                            u1747 019B                              u1677 0266                              u1687 027B  
                            u1697 04B1                              _WPUB 0095                              _edit 0645  
                            _main 050F                              btemp 007E                              start 0000  
               ___bmul@multiplier 0073                      lcd_instReg@i 0072                      lcd_num@sinal 0025  
                           ?_edit 0020                             ?_main 0070                   __end_of___awdiv 0421  
                 __end_of___awmod 035F                   __end_of___lldiv 0489                   ___awdiv@divisor 0070  
                 ___awdiv@counter 0075                             _PORTB 0006                             _PORTD 0008  
                           _TRISB 0086             __end_of_tecladoMatriz 0019                   _contador_passos 0041  
             ___lmul@multiplicand 0074                      lcd_print@col 0076                      lcd_print@lin 007A  
                    lcd_print@pos 0079                      lcd_print@str 0077                   __end_of_lcd_num 07E4  
                           _delay 0198                             _passo 0049                             _motor 004B  
                 __end_of_teclado 03BA                             pclath 000A                             status 0003  
                           wtemp0 007E                     lcd_lincol@col 0073                     lcd_lincol@lin 0075  
                 __initialization 07E4                      __end_of_edit 0704                      __end_of_main 0595  
         __size_of_stepmotor_init 0033                            ??_edit 0079                            ??_main 003B  
                          ?_delay 0070                  ___awdiv@dividend 0072                            _ANSELH 0189  
            __size_of_lcd_dataReg 0036                  __end_of_lcd_init 02C0                            ___bmul 01AD  
                          ___lmul 02C0                            ___wmul 01C2                         ??___awdiv 0074  
                       ??___awmod 0074                         ??___lldiv 007D              __size_of_lcd_instReg 0086  
                          delay@t 0070                  ___awdiv@quotient 0077                   ___awmod@divisor 0070  
                 ___awmod@counter 0075                         ??_lcd_num 0020                     main@numpassos 003F  
                       ??_teclado 0070           __end_of__initialization 07FC               ___bmul@multiplicand 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 0159                     __end_of_delay 01AD  
                  _OPTION_REGbits 0081                           ??_delay 0072                __size_of_lcd_print 0031  
                      __pbssBANK0 0041            stepmotor@passo_sentido 003A                     ?_teclado_init 0070  
                      __pmaintext 050F  stepmotor_init@pulsosPorRevolucao 0070                           ?___bmul 0070  
                         ?___lmul 0070                           ?___wmul 0070                    _stepmotor_init 0218  
                  ___lmul@product 0079                        _lcd_lincol 0172                         ?_lcd_init 0070  
                      __stringtab 0003                __size_of_stepmotor 00B0         stepmotor@qtd_graus_passos 002D  
                  ??_teclado_init 0070            __end_of_stepmotor_init 024B                   __size_of___bmul 0015  
               __end_of_lcd_print 0218                           ___awdiv 03BA                   __size_of___lmul 0046  
                         ___awmod 0306                           ___lldiv 0421                   __size_of___wmul 0025  
                         __ptext1 0161                           __ptext2 035F                           __ptext3 0218  
                         __ptext4 0595                           __ptext5 02C0                           __ptext6 0421  
                         __ptext7 01AD                           __ptext8 01E7                           __ptext9 0704  
                         _lcd_num 0704                        edit@delete 0021                           edit@aux 0027  
                         edit@max 0025                           edit@min 0023                  ___awmod@dividend 0072  
                         _teclado 035F                        ??_lcd_init 0073              end_of_initialization 07FC  
                 ___lldiv@divisor 0020                   ___lldiv@counter 002C                   ?_stepmotor_init 0070  
               __end_of_stepmotor 0645                         _PORTCbits 0007                         _PORTDbits 0008  
                       _TRISCbits 0087                       ?_lcd_lincol 0073                         _TRISDbits 0088  
                   ??_lcd_dataReg 0070                        lcd_num@col 0079                        lcd_num@div 0026  
                      lcd_num@lin 0023                        lcd_num@tam 007C                        lcd_num@num 007A  
                   ??_lcd_instReg 0070                    __end_of___bmul 01C2                    __end_of___lmul 0306  
                  __end_of___wmul 01E7              __end_of_teclado_init 0172               start_initialization 07E4  
                   _tecladoMatriz 0009               __end_of_lcd_dataReg 0281                          ??___bmul 0071  
             __size_of_lcd_lincol 0013                          ??___lmul 0078                          ??___wmul 0074  
                      init_fetch0 0185                       __pdataBANK0 004B               __end_of_lcd_instReg 050F  
             stepmotor@meio_passo 0033                         ___latbits 0002                     __pcstackBANK0 0020  
               __size_of_lcd_init 003F                        teclado@aux 0077                          ?___awdiv 0070  
                        ?___awmod 0070                          ?___lldiv 0020                         __pstrings 0003  
                       _lcd_print 01E7                          ?_lcd_num 0079                          ?_teclado 0070  
                  __size_of_delay 0015                         edit@menos 0022                         edit@tecla 0020  
                     _lcd_dataReg 024B                  ??_stepmotor_init 0072                    ___wmul@product 0074  
                    edit@ptr_edit 002B                       _lcd_instReg 0489             __size_of_teclado_init 0011  
                      ?_lcd_print 0076                       __stringbase 0008                 ___wmul@multiplier 0070  
                       _stepmotor 0595                         main@tecla 003E                      ??_lcd_lincol 0074  
               ___lmul@multiplier 0070                      _teclado_init 0161                __end_of_lcd_lincol 0185  
                __size_of___awdiv 0067                  __size_of___awmod 0059                  __size_of___lldiv 0068  
              __end_of__stringtab 0009                        stepmotor@t 0034                  __size_of_lcd_num 00E0  
                      ?_stepmotor 002D                  __size_of_teclado 005B                  stepmotor@sentido 0032  
                        __ptext10 0172                          __ptext11 024B                          __ptext12 0306  
                        __ptext13 0281                          __ptext14 0489                          __ptext15 0198  
                        __ptext16 0645                          __ptext17 01C2                          __ptext18 03BA  
                stepmotor@unidade 0031                          _lcd_init 0281                     __size_of_edit 00BF  
                   __size_of_main 0086                          _teclaAnt 004A                       ??_lcd_print 0078  
                        init_ram0 0189                          teclado@c 0079                          teclado@l 0078  
                ___lldiv@dividend 0024                      _num_original 0047                         stringcode 0003  
                     ??_stepmotor 0036                  ___lldiv@quotient 0028                          stringdir 0003  
                        stringtab 0003                      ?_lcd_dataReg 0070                      ?_lcd_instReg 0070  
