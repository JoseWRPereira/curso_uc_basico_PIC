

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 22:46:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447                           
   448                           	psect	idataBANK0
   449  05E9                     __pidataBANK0:
   450                           
   451                           ;initializer for main@F1280
   452  05E9  3454               	retlw	84
   453  05EA  3465               	retlw	101
   454  05EB  3463               	retlw	99
   455  05EC  346C               	retlw	108
   456  05ED  3461               	retlw	97
   457  05EE  343A               	retlw	58
   458  05EF  3420               	retlw	32
   459  05F0  3420               	retlw	32
   460  05F1  3420               	retlw	32
   461  05F2  3420               	retlw	32
   462  05F3  3420               	retlw	32
   463  05F4  3420               	retlw	32
   464  05F5  3420               	retlw	32
   465  05F6  3420               	retlw	32
   466  05F7  3420               	retlw	32
   467  05F8  3420               	retlw	32
   468  05F9  3400               	retlw	0
   469                           
   470                           	psect	strings
   471  0003                     __pstrings:
   472  0003                     stringtab:
   473  0003                     __stringtab:
   474  0003                     stringcode:	
   475                           ;	String table - string pointers are 1 byte each
   476                           
   477  0003                     stringdir:
   478  0003  3000               	movlw	high stringdir
   479  0004  008A               	movwf	10
   480  0005  0804               	movf	4,w
   481  0006  0A84               	incf	4,f
   482  0007  0782               	addwf	2,f
   483  0008                     __stringbase:
   484  0008  3400               	retlw	0
   485  0009                     __end_of__stringtab:
   486  0009                     _tecladoMatriz:
   487  0009  3431               	retlw	49
   488  000A  3432               	retlw	50
   489  000B  3433               	retlw	51
   490  000C  3441               	retlw	65
   491  000D  3434               	retlw	52
   492  000E  3435               	retlw	53
   493  000F  3436               	retlw	54
   494  0010  3442               	retlw	66
   495  0011  3437               	retlw	55
   496  0012  3438               	retlw	56
   497  0013  3439               	retlw	57
   498  0014  3443               	retlw	67
   499  0015  342A               	retlw	42
   500  0016  3430               	retlw	48
   501  0017  3423               	retlw	35
   502  0018  3444               	retlw	68
   503  0019                     __end_of_tecladoMatriz:
   504  0006                     _PORTB	set	6
   505  0008                     _PORTD	set	8
   506  0008                     _PORTDbits	set	8
   507  0095                     _WPUB	set	149
   508  0081                     _OPTION_REGbits	set	129
   509  0086                     _TRISB	set	134
   510  0088                     _TRISDbits	set	136
   511  0189                     _ANSELH	set	393
   512                           
   513                           	psect	cinit
   514  07EE                     start_initialization:	
   515                           ; #config settings
   516                           
   517  07EE                     __initialization:
   518                           
   519                           ; Initialize objects allocated to BANK0
   520  07EE  1383               	bcf	3,7	;select IRP bank0
   521  07EF  3046               	movlw	low (__pdataBANK0+17)
   522  07F0  00FD               	movwf	btemp+-1
   523  07F1  3005               	movlw	high __pidataBANK0
   524  07F2  00FE               	movwf	btemp
   525  07F3  30E9               	movlw	low __pidataBANK0
   526  07F4  00FF               	movwf	btemp+1
   527  07F5  3035               	movlw	low __pdataBANK0
   528  07F6  0084               	movwf	4
   529  07F7  120A  118A  2611  120A  118A  	fcall	init_ram0
   530  07FC                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  07FC                     __end_of__initialization:
   534  07FC  0183               	clrf	3
   535  07FD  120A  118A  2E94   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	dataBANK0
   538  0035                     __pdataBANK0:
   539  0035                     main@F1280:
   540  0035                     	ds	17
   541                           
   542                           	psect	inittext
   543  060D                     init_fetch0:	
   544                           ;	Called with low address in FSR and high address in W
   545                           
   546  060D  087E               	movf	btemp,w
   547  060E  008A               	movwf	10
   548  060F  087F               	movf	btemp+1,w
   549  0610  0082               	movwf	2
   550  0611                     init_ram0:	
   551                           ;Called with:
   552                           ;	high address of idata address in btemp 
   553                           ;	low address of idata address in btemp+1 
   554                           ;	low address of data in FSR
   555                           ;	high address + 1 of data in btemp-1
   556                           
   557  0611  120A  118A  260D  120A  118A  	fcall	init_fetch0
   558  0616  0080               	movwf	0
   559  0617  0A84               	incf	4,f
   560  0618  0804               	movf	4,w
   561  0619  067D               	xorwf	btemp+-1,w
   562  061A  1903               	btfsc	3,2
   563  061B  3400               	retlw	0
   564  061C  0AFF               	incf	btemp+1,f
   565  061D  1903               	btfsc	3,2
   566  061E  0AFE               	incf	btemp,f
   567  061F  2E11               	goto	init_ram0
   568                           
   569                           	psect	cstackCOMMON
   570  0070                     __pcstackCOMMON:
   571  0070                     ?_teclado_init:
   572  0070                     ??_teclado_init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_teclado:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??_teclado:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_delay:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_lcd_instReg:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ??_lcd_instReg:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_lcd_dataReg:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ??_lcd_dataReg:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_lcd_init:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     delay@t:	
   603                           ; 1 bytes @ 0x0
   604                           
   605                           
   606                           ; 2 bytes @ 0x0
   607  0070                     	ds	2
   608  0072                     ??_delay:
   609  0072                     lcd_instReg@i:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     lcd_dataReg@d:	
   613                           ; 1 bytes @ 0x2
   614                           
   615                           
   616                           ; 1 bytes @ 0x2
   617  0072                     	ds	1
   618  0073                     ?_lcd_lincol:
   619  0073                     ??_lcd_init:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0073                     lcd_lincol@col:	
   623                           ; 1 bytes @ 0x3
   624                           
   625                           
   626                           ; 1 bytes @ 0x3
   627  0073                     	ds	1
   628  0074                     ??_lcd_lincol:
   629                           
   630                           ; 1 bytes @ 0x4
   631  0074                     	ds	1
   632  0075                     lcd_lincol@lin:
   633                           
   634                           ; 1 bytes @ 0x5
   635  0075                     	ds	1
   636  0076                     ?_lcd_print:
   637  0076                     lcd_print@col:	
   638                           ; 1 bytes @ 0x6
   639                           
   640                           
   641                           ; 1 bytes @ 0x6
   642  0076                     	ds	1
   643  0077                     lcd_print@str:
   644  0077                     teclado@aux:	
   645                           ; 1 bytes @ 0x7
   646                           
   647                           
   648                           ; 1 bytes @ 0x7
   649  0077                     	ds	1
   650  0078                     ??_lcd_print:
   651  0078                     teclado@l:	
   652                           ; 1 bytes @ 0x8
   653                           
   654                           
   655                           ; 1 bytes @ 0x8
   656  0078                     	ds	1
   657  0079                     lcd_print@pos:
   658  0079                     teclado@c:	
   659                           ; 1 bytes @ 0x9
   660                           
   661                           
   662                           ; 1 bytes @ 0x9
   663  0079                     	ds	1
   664  007A                     lcd_print@lin:
   665                           
   666                           ; 1 bytes @ 0xA
   667  007A                     	ds	1
   668                           
   669                           	psect	cstackBANK0
   670  0020                     __pcstackBANK0:
   671  0020                     ??_main:
   672                           
   673                           ; 1 bytes @ 0x0
   674  0020                     	ds	4
   675  0024                     main@string:
   676                           
   677                           ; 17 bytes @ 0x4
   678  0024                     	ds	17
   679                           
   680                           	psect	maintext
   681  0694                     __pmaintext:	
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 7 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  string         17    4[BANK0 ] unsigned char [17]
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : B00/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0      17       0       0       0
   703 ;;      Temps:          0       4       0       0       0
   704 ;;      Totals:         0      21       0       0       0
   705 ;;Total ram usage:       21 bytes
   706 ;; Hardware stack levels required when called: 3
   707 ;; This function calls:
   708 ;;		_lcd_init
   709 ;;		_lcd_print
   710 ;;		_teclado
   711 ;;		_teclado_init
   712 ;; This function is called by:
   713 ;;		Startup code after reset
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _main
   719  0694                     _main:
   720  0694                     l992:	
   721                           ;incstack = 0
   722                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   723                           
   724                           
   725                           ;main.c: 9:     unsigned char string[] = "Tecla:          ";
   726  0694  3024               	movlw	main@string& (0+255)
   727  0695  0084               	movwf	4
   728  0696  3035               	movlw	low main@F1280
   729  0697  1283               	bcf	3,5	;RP0=0, select bank0
   730  0698  1303               	bcf	3,6	;RP1=0, select bank0
   731  0699  00A0               	movwf	??_main
   732  069A  0804               	movf	4,w
   733  069B  00A1               	movwf	??_main+1
   734  069C  3011               	movlw	17
   735  069D  00A2               	movwf	??_main+2
   736  069E                     u510:
   737  069E  0820               	movf	??_main,w
   738  069F  0084               	movwf	4
   739  06A0  1383               	bcf	3,7	;select IRP bank0
   740  06A1  0800               	movf	0,w
   741  06A2  00A3               	movwf	??_main+3
   742  06A3  0AA0               	incf	??_main,f
   743  06A4  0821               	movf	??_main+1,w
   744  06A5  0084               	movwf	4
   745  06A6  0823               	movf	??_main+3,w
   746  06A7  0080               	movwf	0
   747  06A8  0AA1               	incf	??_main+1,f
   748  06A9  0BA2               	decfsz	??_main+2,f
   749  06AA  2E9E               	goto	u510
   750  06AB                     l994:
   751                           
   752                           ;main.c: 11:     lcd_init();
   753  06AB  120A  118A  26CE  120A  118A  	fcall	_lcd_init
   754  06B0                     l996:
   755                           
   756                           ;main.c: 12:     teclado_init();
   757  06B0  120A  118A  25D8  120A  118A  	fcall	_teclado_init
   758  06B5                     l998:
   759                           
   760                           ;main.c: 15:     {;main.c: 16:         string[7] = teclado();
   761  06B5  120A  118A  270D  120A  118A  	fcall	_teclado
   762  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   763  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   764  06BC  00A0               	movwf	??_main
   765  06BD  0820               	movf	??_main,w
   766  06BE  00AB               	movwf	main@string+7
   767  06BF                     l1000:
   768                           
   769                           ;main.c: 17:         lcd_print(0,0, string );
   770  06BF  01F6               	clrf	lcd_print@col
   771  06C0  3024               	movlw	(low (main@string| 0))& (0+255)
   772  06C1  00A0               	movwf	??_main
   773  06C2  0820               	movf	??_main,w
   774  06C3  00F7               	movwf	lcd_print@str
   775  06C4  3000               	movlw	0
   776  06C5  120A  118A  2635  120A  118A  	fcall	_lcd_print
   777  06CA  2EB5               	goto	l998
   778  06CB  120A  118A  2800   	ljmp	start
   779  06CE                     __end_of_main:
   780                           
   781                           	psect	text1
   782  05D8                     __ptext1:	
   783 ;; *************** function _teclado_init *****************
   784 ;; Defined at:
   785 ;;		line 9 in file "teclado.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _teclado_init
   814  05D8                     _teclado_init:
   815  05D8                     l794:	
   816                           ;incstack = 0
   817                           ; Regs used in _teclado_init: [wreg+status,2]
   818                           
   819                           
   820                           ;teclado.c: 11:     TRISB = 0xF0;
   821  05D8  30F0               	movlw	240
   822  05D9  1683               	bsf	3,5	;RP0=1, select bank1
   823  05DA  1303               	bcf	3,6	;RP1=0, select bank1
   824  05DB  0086               	movwf	6	;volatile
   825  05DC                     l796:
   826                           
   827                           ;teclado.c: 12:     ANSELH = 0x00;
   828  05DC  1683               	bsf	3,5	;RP0=1, select bank3
   829  05DD  1703               	bsf	3,6	;RP1=1, select bank3
   830  05DE  0189               	clrf	9	;volatile
   831  05DF                     l798:
   832                           
   833                           ;teclado.c: 13:     OPTION_REGbits.nRBPU = 0;
   834  05DF  1683               	bsf	3,5	;RP0=1, select bank1
   835  05E0  1303               	bcf	3,6	;RP1=0, select bank1
   836  05E1  1381               	bcf	1,7	;volatile
   837  05E2                     l800:
   838                           
   839                           ;teclado.c: 14:     WPUB = 0xFF;
   840  05E2  30FF               	movlw	255
   841  05E3  0095               	movwf	21	;volatile
   842  05E4                     l802:
   843                           
   844                           ;teclado.c: 15:     PORTB = 0xFF;
   845  05E4  30FF               	movlw	255
   846  05E5  1283               	bcf	3,5	;RP0=0, select bank0
   847  05E6  1303               	bcf	3,6	;RP1=0, select bank0
   848  05E7  0086               	movwf	6	;volatile
   849  05E8                     l96:
   850  05E8  0008               	return
   851  05E9                     __end_of_teclado_init:
   852                           
   853                           	psect	text2
   854  070D                     __ptext2:	
   855 ;; *************** function _teclado *****************
   856 ;; Defined at:
   857 ;;		line 23 in file "teclado.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  c               1    9[COMMON] unsigned char 
   862 ;;  l               1    8[COMMON] unsigned char 
   863 ;;  aux             1    7[COMMON] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      unsigned char 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         3       0       0       0       0
   875 ;;      Temps:          7       0       0       0       0
   876 ;;      Totals:        10       0       0       0       0
   877 ;;Total ram usage:       10 bytes
   878 ;; Hardware stack levels used: 2
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           
   887                           ;psect for function _teclado
   888  070D                     _teclado:
   889  070D                     l922:	
   890                           ;incstack = 0
   891                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+pclath]
   892                           
   893                           
   894                           ;teclado.c: 25:     unsigned char aux = 0;
   895  070D  01F7               	clrf	teclado@aux
   896                           
   897                           ;teclado.c: 26:     unsigned char l,c;;teclado.c: 28:     for( l=0; l<4; l++ )
   898  070E  01F8               	clrf	teclado@l
   899  070F                     l924:
   900  070F  3004               	movlw	4
   901  0710  0278               	subwf	teclado@l,w
   902  0711  1C03               	skipc
   903  0712  2F14               	goto	u361
   904  0713  2F15               	goto	u360
   905  0714                     u361:
   906  0714  2F16               	goto	l928
   907  0715                     u360:
   908  0715  2F66               	goto	l948
   909  0716                     l928:
   910                           
   911                           ;teclado.c: 29:     {;teclado.c: 30:         PORTB = (unsigned char)~(0x01 << l);
   912  0716  3001               	movlw	1
   913  0717  00F0               	movwf	??_teclado
   914  0718  0A78               	incf	teclado@l,w
   915  0719  2F1C               	goto	u374
   916  071A                     u375:
   917  071A  1003               	clrc
   918  071B  0DF0               	rlf	??_teclado,f
   919  071C                     u374:
   920  071C  3EFF               	addlw	-1
   921  071D  1D03               	skipz
   922  071E  2F1A               	goto	u375
   923  071F  0870               	movf	??_teclado,w
   924  0720  3AFF               	xorlw	255
   925  0721  1283               	bcf	3,5	;RP0=0, select bank0
   926  0722  1303               	bcf	3,6	;RP1=0, select bank0
   927  0723  0086               	movwf	6	;volatile
   928  0724                     l930:
   929                           
   930                           ;teclado.c: 31:         for( c=0; c<4; c++ )
   931  0724  01F9               	clrf	teclado@c
   932  0725                     l936:
   933                           
   934                           ;teclado.c: 32:         {;teclado.c: 33:             if( ~PORTB & (0x10<<c) )
   935  0725  0906               	comf	6,w	;volatile
   936  0726  00F0               	movwf	??_teclado
   937  0727  01F1               	clrf	??_teclado+1
   938  0728  09F1               	comf	??_teclado+1,f
   939  0729  0A79               	incf	teclado@c,w
   940  072A  00F2               	movwf	??_teclado+2
   941  072B  3010               	movlw	16
   942  072C  00F3               	movwf	??_teclado+3
   943  072D  3000               	movlw	0
   944  072E  00F4               	movwf	??_teclado+4
   945  072F  2F33               	goto	u384
   946  0730                     u385:
   947  0730  1003               	clrc
   948  0731  0DF3               	rlf	??_teclado+3,f
   949  0732  0DF4               	rlf	??_teclado+4,f
   950  0733                     u384:
   951  0733  0BF2               	decfsz	??_teclado+2,f
   952  0734  2F30               	goto	u385
   953  0735  0870               	movf	??_teclado,w
   954  0736  0573               	andwf	??_teclado+3,w
   955  0737  00F5               	movwf	??_teclado+5
   956  0738  0871               	movf	??_teclado+1,w
   957  0739  0574               	andwf	??_teclado+4,w
   958  073A  00F6               	movwf	??_teclado+6
   959  073B  0875               	movf	??_teclado+5,w
   960  073C  0476               	iorwf	??_teclado+6,w
   961  073D  1903               	btfsc	3,2
   962  073E  2F40               	goto	u391
   963  073F  2F41               	goto	u390
   964  0740                     u391:
   965  0740  2F57               	goto	l940
   966  0741                     u390:
   967  0741                     l938:
   968                           
   969                           ;teclado.c: 34:                 aux = tecladoMatriz[l][c];
   970  0741  0878               	movf	teclado@l,w
   971  0742  00F0               	movwf	??_teclado
   972  0743  3002               	movlw	2
   973  0744                     u405:
   974  0744  1003               	clrc
   975  0745  0DF0               	rlf	??_teclado,f
   976  0746  3EFF               	addlw	-1
   977  0747  1D03               	skipz
   978  0748  2F44               	goto	u405
   979  0749  3001               	movlw	(low ((_tecladoMatriz-__stringbase)| (0+32768)))& (0+255)
   980  074A  0770               	addwf	??_teclado,w
   981  074B  00F1               	movwf	??_teclado+1
   982  074C  0879               	movf	teclado@c,w
   983  074D  0771               	addwf	??_teclado+1,w
   984  074E  0084               	movwf	4
   985  074F  120A  118A  2003  120A  118A  	fcall	stringdir
   986  0754  00F2               	movwf	??_teclado+2
   987  0755  0872               	movf	??_teclado+2,w
   988  0756  00F7               	movwf	teclado@aux
   989  0757                     l940:
   990                           
   991                           ;teclado.c: 35:         }
   992  0757  3001               	movlw	1
   993  0758  00F0               	movwf	??_teclado
   994  0759  0870               	movf	??_teclado,w
   995  075A  07F9               	addwf	teclado@c,f
   996  075B                     l942:
   997  075B  3004               	movlw	4
   998  075C  0279               	subwf	teclado@c,w
   999  075D  1C03               	skipc
  1000  075E  2F60               	goto	u411
  1001  075F  2F61               	goto	u410
  1002  0760                     u411:
  1003  0760  2F25               	goto	l936
  1004  0761                     u410:
  1005  0761                     l944:
  1006                           
  1007                           ;teclado.c: 36:     }
  1008  0761  3001               	movlw	1
  1009  0762  00F0               	movwf	??_teclado
  1010  0763  0870               	movf	??_teclado,w
  1011  0764  07F8               	addwf	teclado@l,f
  1012  0765  2F0F               	goto	l924
  1013  0766                     l948:
  1014                           
  1015                           ;teclado.c: 37:     return( aux );
  1016  0766  0877               	movf	teclado@aux,w
  1017  0767                     l106:
  1018  0767  0008               	return
  1019  0768                     __end_of_teclado:
  1020                           
  1021                           	psect	text3
  1022  0635                     __ptext3:	
  1023 ;; *************** function _lcd_print *****************
  1024 ;; Defined at:
  1025 ;;		line 156 in file "lcd.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  lin             1    wreg     unsigned char 
  1028 ;;  col             1    6[COMMON] unsigned char 
  1029 ;;  str             1    7[COMMON] PTR const unsigned char 
  1030 ;;		 -> main@string(17), 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  lin             1   10[COMMON] unsigned char 
  1033 ;;  pos             1    9[COMMON] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         2       0       0       0       0
  1044 ;;      Locals:         2       0       0       0       0
  1045 ;;      Temps:          1       0       0       0       0
  1046 ;;      Totals:         5       0       0       0       0
  1047 ;;Total ram usage:        5 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 2
  1050 ;; This function calls:
  1051 ;;		_lcd_dataReg
  1052 ;;		_lcd_lincol
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function _lcd_print
  1060  0635                     _lcd_print:
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1064                           ;lcd_print@lin stored from wreg
  1065  0635  00FA               	movwf	lcd_print@lin
  1066  0636                     l910:
  1067                           
  1068                           ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
      +                          d.c: 157: {;lcd.c: 158:     char pos = col;
  1069  0636  0876               	movf	lcd_print@col,w
  1070  0637  00F8               	movwf	??_lcd_print
  1071  0638  0878               	movf	??_lcd_print,w
  1072  0639  00F9               	movwf	lcd_print@pos
  1073  063A                     l912:
  1074                           
  1075                           ;lcd.c: 159:     lcd_lincol( lin, col );
  1076  063A  0876               	movf	lcd_print@col,w
  1077  063B  00F8               	movwf	??_lcd_print
  1078  063C  0878               	movf	??_lcd_print,w
  1079  063D  00F3               	movwf	lcd_lincol@col
  1080  063E  087A               	movf	lcd_print@lin,w
  1081  063F  120A  118A  25FA  120A  118A  	fcall	_lcd_lincol
  1082                           
  1083                           ;lcd.c: 161:     while( *str )
  1084  0644  2E55               	goto	l920
  1085  0645                     l914:
  1086                           
  1087                           ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  1088  0645  0877               	movf	lcd_print@str,w
  1089  0646  0084               	movwf	4
  1090  0647  0800               	movf	0,w
  1091  0648  120A  118A  265E  120A  118A  	fcall	_lcd_dataReg
  1092  064D                     l916:
  1093                           
  1094                           ;lcd.c: 164:         ++str;
  1095  064D  3001               	movlw	1
  1096  064E  00F8               	movwf	??_lcd_print
  1097  064F  0878               	movf	??_lcd_print,w
  1098  0650  07F7               	addwf	lcd_print@str,f
  1099  0651                     l918:
  1100                           
  1101                           ;lcd.c: 165:         ++pos;
  1102  0651  3001               	movlw	1
  1103  0652  00F8               	movwf	??_lcd_print
  1104  0653  0878               	movf	??_lcd_print,w
  1105  0654  07F9               	addwf	lcd_print@pos,f
  1106  0655                     l920:
  1107                           
  1108                           ;lcd.c: 161:     while( *str )
  1109  0655  0877               	movf	lcd_print@str,w
  1110  0656  0084               	movwf	4
  1111  0657  1383               	bcf	3,7	;select IRP bank0
  1112  0658  0800               	movf	0,w
  1113  0659  1D03               	btfss	3,2
  1114  065A  2E5C               	goto	u351
  1115  065B  2E5D               	goto	u350
  1116  065C                     u351:
  1117  065C  2E45               	goto	l914
  1118  065D                     u350:
  1119  065D                     l48:
  1120  065D  0008               	return
  1121  065E                     __end_of_lcd_print:
  1122                           
  1123                           	psect	text4
  1124  05FA                     __ptext4:	
  1125 ;; *************** function _lcd_lincol *****************
  1126 ;; Defined at:
  1127 ;;		line 111 in file "lcd.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  lin             1    wreg     unsigned char 
  1130 ;;  col             1    3[COMMON] unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  lin             1    5[COMMON] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         1       0       0       0       0
  1143 ;;      Locals:         1       0       0       0       0
  1144 ;;      Temps:          1       0       0       0       0
  1145 ;;      Totals:         3       0       0       0       0
  1146 ;;Total ram usage:        3 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 1
  1149 ;; This function calls:
  1150 ;;		_lcd_instReg
  1151 ;; This function is called by:
  1152 ;;		_lcd_print
  1153 ;;		_lcd_num
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _lcd_lincol
  1159  05FA                     _lcd_lincol:
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  1163                           ;lcd_lincol@lin stored from wreg
  1164  05FA  00F5               	movwf	lcd_lincol@lin
  1165  05FB                     l892:
  1166                           
  1167                           ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
      +                           113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  1168  05FB  0875               	movf	lcd_lincol@lin,w
  1169  05FC  00F4               	movwf	??_lcd_lincol
  1170  05FD  3006               	movlw	6
  1171  05FE                     u345:
  1172  05FE  1003               	clrc
  1173  05FF  0DF4               	rlf	??_lcd_lincol,f
  1174  0600  3EFF               	addlw	-1
  1175  0601  1D03               	skipz
  1176  0602  2DFE               	goto	u345
  1177  0603  0873               	movf	lcd_lincol@col,w
  1178  0604  0774               	addwf	??_lcd_lincol,w
  1179  0605  397F               	andlw	127
  1180  0606  3E80               	addlw	128
  1181  0607  120A  118A  2768  120A  118A  	fcall	_lcd_instReg
  1182  060C                     l36:
  1183  060C  0008               	return
  1184  060D                     __end_of_lcd_lincol:
  1185                           
  1186                           	psect	text5
  1187  065E                     __ptext5:	
  1188 ;; *************** function _lcd_dataReg *****************
  1189 ;; Defined at:
  1190 ;;		line 93 in file "lcd.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  d               1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  d               1    2[COMMON] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0
  1206 ;;      Temps:          2       0       0       0       0
  1207 ;;      Totals:         3       0       0       0       0
  1208 ;;Total ram usage:        3 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_lcd_print
  1214 ;;		_lcd_num
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _lcd_dataReg
  1220  065E                     _lcd_dataReg:
  1221                           
  1222                           ;incstack = 0
  1223                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  1224                           ;lcd_dataReg@d stored from wreg
  1225  065E  00F2               	movwf	lcd_dataReg@d
  1226  065F                     l746:
  1227                           
  1228                           ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
      +                          2 = 1;
  1229  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0661  1508               	bsf	8,2	;volatile
  1232  0662                     l748:
  1233                           
  1234                           ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  1235  0662  0872               	movf	lcd_dataReg@d,w
  1236  0663  00F0               	movwf	??_lcd_dataReg
  1237  0664  3004               	movlw	4
  1238  0665                     u125:
  1239  0665  1003               	clrc
  1240  0666  0CF0               	rrf	??_lcd_dataReg,f
  1241  0667  3EFF               	addlw	-1
  1242  0668  1D03               	skipz
  1243  0669  2E65               	goto	u125
  1244  066A  0870               	movf	??_lcd_dataReg,w
  1245  066B  00F1               	movwf	??_lcd_dataReg+1
  1246  066C  3004               	movlw	4
  1247  066D                     u135:
  1248  066D  1003               	clrc
  1249  066E  0DF1               	rlf	??_lcd_dataReg+1,f
  1250  066F  3EFF               	addlw	-1
  1251  0670  1D03               	skipz
  1252  0671  2E6D               	goto	u135
  1253  0672  0808               	movf	8,w	;volatile
  1254  0673  390F               	andlw	15
  1255  0674  0471               	iorwf	??_lcd_dataReg+1,w
  1256  0675  0088               	movwf	8	;volatile
  1257  0676                     l750:
  1258                           
  1259                           ;lcd.c: 97:     PORTDbits.RD3 = 0;
  1260  0676  1188               	bcf	8,3	;volatile
  1261  0677                     l752:
  1262                           
  1263                           ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1264  0677  300D               	movlw	13
  1265  0678  00F0               	movwf	??_lcd_dataReg
  1266  0679                     u527:
  1267  0679  0BF0               	decfsz	??_lcd_dataReg,f
  1268  067A  2E79               	goto	u527
  1269  067B                     l754:
  1270                           
  1271                           ;lcd.c: 99:     PORTDbits.RD3 = 1;
  1272  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1273  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1274  067D  1588               	bsf	8,3	;volatile
  1275  067E                     l756:
  1276                           
  1277                           ;lcd.c: 101:     PORTDbits.RD2 = 1;
  1278  067E  1508               	bsf	8,2	;volatile
  1279  067F                     l758:
  1280                           
  1281                           ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  1282  067F  0872               	movf	lcd_dataReg@d,w
  1283  0680  00F0               	movwf	??_lcd_dataReg
  1284  0681  3004               	movlw	4
  1285  0682                     u145:
  1286  0682  1003               	clrc
  1287  0683  0DF0               	rlf	??_lcd_dataReg,f
  1288  0684  3EFF               	addlw	-1
  1289  0685  1D03               	skipz
  1290  0686  2E82               	goto	u145
  1291  0687  0808               	movf	8,w	;volatile
  1292  0688  390F               	andlw	15
  1293  0689  0470               	iorwf	??_lcd_dataReg,w
  1294  068A  0088               	movwf	8	;volatile
  1295  068B                     l760:
  1296                           
  1297                           ;lcd.c: 103:     PORTDbits.RD3 = 0;
  1298  068B  1188               	bcf	8,3	;volatile
  1299                           
  1300                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1301  068C  300D               	movlw	13
  1302  068D  00F0               	movwf	??_lcd_dataReg
  1303  068E                     u537:
  1304  068E  0BF0               	decfsz	??_lcd_dataReg,f
  1305  068F  2E8E               	goto	u537
  1306  0690                     l762:
  1307                           
  1308                           ;lcd.c: 105:     PORTDbits.RD3 = 1;
  1309  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0692  1588               	bsf	8,3	;volatile
  1312  0693                     l33:
  1313  0693  0008               	return
  1314  0694                     __end_of_lcd_dataReg:
  1315                           
  1316                           	psect	text6
  1317  06CE                     __ptext6:	
  1318 ;; *************** function _lcd_init *****************
  1319 ;; Defined at:
  1320 ;;		line 121 in file "lcd.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 1
  1341 ;; This function calls:
  1342 ;;		_delay
  1343 ;;		_lcd_instReg
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _lcd_init
  1351  06CE                     _lcd_init:
  1352  06CE                     l894:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1355                           
  1356                           
  1357                           ;lcd.c: 123:     delay(100);
  1358  06CE  3064               	movlw	100
  1359  06CF  00F0               	movwf	delay@t
  1360  06D0  3000               	movlw	0
  1361  06D1  00F1               	movwf	delay@t+1
  1362  06D2  120A  118A  2620  120A  118A  	fcall	_delay
  1363  06D7                     l896:
  1364                           
  1365                           ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  1366  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  1367  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  1368  06D9  1108               	bcf	8,2	;volatile
  1369  06DA                     l898:
  1370                           
  1371                           ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  1372  06DA  1188               	bcf	8,3	;volatile
  1373  06DB                     l900:
  1374                           
  1375                           ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  1376  06DB  1208               	bcf	8,4	;volatile
  1377  06DC                     l902:
  1378                           
  1379                           ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  1380  06DC  1288               	bcf	8,5	;volatile
  1381  06DD                     l904:
  1382                           
  1383                           ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  1384  06DD  1308               	bcf	8,6	;volatile
  1385  06DE                     l906:
  1386                           
  1387                           ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  1388  06DE  1388               	bcf	8,7	;volatile
  1389                           
  1390                           ;lcd.c: 131:     delay(100);
  1391  06DF  3064               	movlw	100
  1392  06E0  00F0               	movwf	delay@t
  1393  06E1  3000               	movlw	0
  1394  06E2  00F1               	movwf	delay@t+1
  1395  06E3  120A  118A  2620  120A  118A  	fcall	_delay
  1396  06E8                     l908:
  1397                           
  1398                           ;lcd.c: 132:     PORTDbits.RD3 = 1;
  1399  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1400  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1401  06EA  1588               	bsf	8,3	;volatile
  1402                           
  1403                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  1404  06EB  3028               	movlw	40
  1405  06EC  120A  118A  2768  120A  118A  	fcall	_lcd_instReg
  1406                           
  1407                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  1408  06F1  300C               	movlw	12
  1409  06F2  120A  118A  2768  120A  118A  	fcall	_lcd_instReg
  1410                           
  1411                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  1412  06F7  3001               	movlw	1
  1413  06F8  120A  118A  2768  120A  118A  	fcall	_lcd_instReg
  1414                           
  1415                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  1416  06FD  3002               	movlw	2
  1417  06FE  120A  118A  2768  120A  118A  	fcall	_lcd_instReg
  1418                           
  1419                           ;lcd.c: 137:     delay(100);
  1420  0703  3064               	movlw	100
  1421  0704  00F0               	movwf	delay@t
  1422  0705  3000               	movlw	0
  1423  0706  00F1               	movwf	delay@t+1
  1424  0707  120A  118A  2620  120A  118A  	fcall	_delay
  1425  070C                     l39:
  1426  070C  0008               	return
  1427  070D                     __end_of_lcd_init:
  1428                           
  1429                           	psect	text7
  1430  0768                     __ptext7:	
  1431 ;; *************** function _lcd_instReg *****************
  1432 ;; Defined at:
  1433 ;;		line 58 in file "lcd.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  i               1    wreg     unsigned char 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  i               1    2[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         1       0       0       0       0
  1449 ;;      Temps:          2       0       0       0       0
  1450 ;;      Totals:         3       0       0       0       0
  1451 ;;Total ram usage:        3 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_lcd_lincol
  1457 ;;		_lcd_init
  1458 ;;		_lcd_clr
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _lcd_instReg
  1464  0768                     _lcd_instReg:
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  1468                           ;lcd_instReg@i stored from wreg
  1469  0768  00F2               	movwf	lcd_instReg@i
  1470  0769                     l698:
  1471                           
  1472                           ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
      +                          2 = 0;
  1473  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1474  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1475  076B  1108               	bcf	8,2	;volatile
  1476  076C                     l700:
  1477                           
  1478                           ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  1479  076C  0872               	movf	lcd_instReg@i,w
  1480  076D  00F0               	movwf	??_lcd_instReg
  1481  076E  3004               	movlw	4
  1482  076F                     u15:
  1483  076F  1003               	clrc
  1484  0770  0CF0               	rrf	??_lcd_instReg,f
  1485  0771  3EFF               	addlw	-1
  1486  0772  1D03               	skipz
  1487  0773  2F6F               	goto	u15
  1488  0774  0870               	movf	??_lcd_instReg,w
  1489  0775  00F1               	movwf	??_lcd_instReg+1
  1490  0776  3004               	movlw	4
  1491  0777                     u25:
  1492  0777  1003               	clrc
  1493  0778  0DF1               	rlf	??_lcd_instReg+1,f
  1494  0779  3EFF               	addlw	-1
  1495  077A  1D03               	skipz
  1496  077B  2F77               	goto	u25
  1497  077C  0808               	movf	8,w	;volatile
  1498  077D  390F               	andlw	15
  1499  077E  0471               	iorwf	??_lcd_instReg+1,w
  1500  077F  0088               	movwf	8	;volatile
  1501  0780                     l702:
  1502                           
  1503                           ;lcd.c: 63:     PORTDbits.RD3 = 0;
  1504  0780  1188               	bcf	8,3	;volatile
  1505                           
  1506                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  1507  0781  0372               	decf	lcd_instReg@i,w
  1508  0782  1903               	btfsc	3,2
  1509  0783  2F85               	goto	u31
  1510  0784  2F86               	goto	u30
  1511  0785                     u31:
  1512  0785  2F8C               	goto	l706
  1513  0786                     u30:
  1514  0786                     l704:
  1515  0786  3002               	movlw	2
  1516  0787  0672               	xorwf	lcd_instReg@i,w
  1517  0788  1D03               	btfss	3,2
  1518  0789  2F8B               	goto	u41
  1519  078A  2F8C               	goto	u40
  1520  078B                     u41:
  1521  078B  2F96               	goto	l708
  1522  078C                     u40:
  1523  078C                     l706:
  1524                           
  1525                           ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1526  078C  3003               	movlw	3
  1527  078D  00F1               	movwf	??_lcd_instReg+1
  1528  078E  3097               	movlw	151
  1529  078F  00F0               	movwf	??_lcd_instReg
  1530  0790                     u547:
  1531  0790  0BF0               	decfsz	??_lcd_instReg,f
  1532  0791  2F90               	goto	u547
  1533  0792  0BF1               	decfsz	??_lcd_instReg+1,f
  1534  0793  2F90               	goto	u547
  1535  0794  2F95               	nop2
  1536  0795  2F9A               	goto	l710
  1537  0796                     l708:
  1538                           
  1539                           ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1540  0796  300D               	movlw	13
  1541  0797  00F0               	movwf	??_lcd_instReg
  1542  0798                     u557:
  1543  0798  0BF0               	decfsz	??_lcd_instReg,f
  1544  0799  2F98               	goto	u557
  1545  079A                     l710:
  1546                           
  1547                           ;lcd.c: 68:     PORTDbits.RD3 = 1;
  1548  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1549  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1550  079C  1588               	bsf	8,3	;volatile
  1551  079D                     l712:
  1552                           
  1553                           ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  1554  079D  30F0               	movlw	240
  1555  079E  0572               	andwf	lcd_instReg@i,w
  1556  079F  00F0               	movwf	??_lcd_instReg
  1557  07A0  3020               	movlw	32
  1558  07A1  0670               	xorwf	??_lcd_instReg,w
  1559  07A2  1D03               	btfss	3,2
  1560  07A3  2FA5               	goto	u51
  1561  07A4  2FA6               	goto	u50
  1562  07A5                     u51:
  1563  07A5  2FC3               	goto	l724
  1564  07A6                     u50:
  1565  07A6                     l714:
  1566                           
  1567                           ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  1568  07A6  1108               	bcf	8,2	;volatile
  1569  07A7                     l716:
  1570                           
  1571                           ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  1572  07A7  0872               	movf	lcd_instReg@i,w
  1573  07A8  00F0               	movwf	??_lcd_instReg
  1574  07A9  3004               	movlw	4
  1575  07AA                     u65:
  1576  07AA  1003               	clrc
  1577  07AB  0CF0               	rrf	??_lcd_instReg,f
  1578  07AC  3EFF               	addlw	-1
  1579  07AD  1D03               	skipz
  1580  07AE  2FAA               	goto	u65
  1581  07AF  0870               	movf	??_lcd_instReg,w
  1582  07B0  00F1               	movwf	??_lcd_instReg+1
  1583  07B1  3004               	movlw	4
  1584  07B2                     u75:
  1585  07B2  1003               	clrc
  1586  07B3  0DF1               	rlf	??_lcd_instReg+1,f
  1587  07B4  3EFF               	addlw	-1
  1588  07B5  1D03               	skipz
  1589  07B6  2FB2               	goto	u75
  1590  07B7  0808               	movf	8,w	;volatile
  1591  07B8  390F               	andlw	15
  1592  07B9  0471               	iorwf	??_lcd_instReg+1,w
  1593  07BA  0088               	movwf	8	;volatile
  1594  07BB                     l718:
  1595                           
  1596                           ;lcd.c: 75:         PORTDbits.RD3 = 0;
  1597  07BB  1188               	bcf	8,3	;volatile
  1598  07BC                     l720:
  1599                           
  1600                           ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1601  07BC  300D               	movlw	13
  1602  07BD  00F0               	movwf	??_lcd_instReg
  1603  07BE                     u567:
  1604  07BE  0BF0               	decfsz	??_lcd_instReg,f
  1605  07BF  2FBE               	goto	u567
  1606  07C0                     l722:
  1607                           
  1608                           ;lcd.c: 77:         PORTDbits.RD3 = 1;
  1609  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1610  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1611  07C2  1588               	bsf	8,3	;volatile
  1612  07C3                     l724:
  1613                           
  1614                           ;lcd.c: 80:     PORTDbits.RD2 = 0;
  1615  07C3  1108               	bcf	8,2	;volatile
  1616  07C4                     l726:
  1617                           
  1618                           ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  1619  07C4  0872               	movf	lcd_instReg@i,w
  1620  07C5  00F0               	movwf	??_lcd_instReg
  1621  07C6  3004               	movlw	4
  1622  07C7                     u85:
  1623  07C7  1003               	clrc
  1624  07C8  0DF0               	rlf	??_lcd_instReg,f
  1625  07C9  3EFF               	addlw	-1
  1626  07CA  1D03               	skipz
  1627  07CB  2FC7               	goto	u85
  1628  07CC  0808               	movf	8,w	;volatile
  1629  07CD  390F               	andlw	15
  1630  07CE  0470               	iorwf	??_lcd_instReg,w
  1631  07CF  0088               	movwf	8	;volatile
  1632  07D0                     l728:
  1633                           
  1634                           ;lcd.c: 82:     PORTDbits.RD3 = 0;
  1635  07D0  1188               	bcf	8,3	;volatile
  1636  07D1                     l730:
  1637                           
  1638                           ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  1639  07D1  0372               	decf	lcd_instReg@i,w
  1640  07D2  1903               	btfsc	3,2
  1641  07D3  2FD5               	goto	u91
  1642  07D4  2FD6               	goto	u90
  1643  07D5                     u91:
  1644  07D5  2FDC               	goto	l734
  1645  07D6                     u90:
  1646  07D6                     l732:
  1647  07D6  3002               	movlw	2
  1648  07D7  0672               	xorwf	lcd_instReg@i,w
  1649  07D8  1D03               	btfss	3,2
  1650  07D9  2FDB               	goto	u101
  1651  07DA  2FDC               	goto	u100
  1652  07DB                     u101:
  1653  07DB  2FE6               	goto	l736
  1654  07DC                     u100:
  1655  07DC                     l734:
  1656                           
  1657                           ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1658  07DC  3003               	movlw	3
  1659  07DD  00F1               	movwf	??_lcd_instReg+1
  1660  07DE  3097               	movlw	151
  1661  07DF  00F0               	movwf	??_lcd_instReg
  1662  07E0                     u577:
  1663  07E0  0BF0               	decfsz	??_lcd_instReg,f
  1664  07E1  2FE0               	goto	u577
  1665  07E2  0BF1               	decfsz	??_lcd_instReg+1,f
  1666  07E3  2FE0               	goto	u577
  1667  07E4  2FE5               	nop2
  1668  07E5  2FEA               	goto	l738
  1669  07E6                     l736:
  1670                           
  1671                           ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1672  07E6  300D               	movlw	13
  1673  07E7  00F0               	movwf	??_lcd_instReg
  1674  07E8                     u587:
  1675  07E8  0BF0               	decfsz	??_lcd_instReg,f
  1676  07E9  2FE8               	goto	u587
  1677  07EA                     l738:
  1678                           
  1679                           ;lcd.c: 87:     PORTDbits.RD3 = 1;
  1680  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1681  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1682  07EC  1588               	bsf	8,3	;volatile
  1683  07ED                     l30:
  1684  07ED  0008               	return
  1685  07EE                     __end_of_lcd_instReg:
  1686                           
  1687                           	psect	text8
  1688  0620                     __ptext8:	
  1689 ;; *************** function _delay *****************
  1690 ;; Defined at:
  1691 ;;		line 12 in file "delay.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  t               2    0[COMMON] unsigned int 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         2       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0
  1707 ;;      Temps:          1       0       0       0       0
  1708 ;;      Totals:         3       0       0       0       0
  1709 ;;Total ram usage:        3 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_lcd_init
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _delay
  1720  0620                     _delay:
  1721  0620                     l886:	
  1722                           ;incstack = 0
  1723                           ; Regs used in _delay: [wreg+status,2+status,0]
  1724                           
  1725                           
  1726                           ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  1727  0620  2E2E               	goto	l890
  1728  0621                     l888:
  1729                           
  1730                           ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1731  0621  30C7               	movlw	199
  1732  0622  00F2               	movwf	??_delay
  1733  0623                     u597:
  1734  0623  2E24               	nop2
  1735  0624  0BF2               	decfsz	??_delay,f
  1736  0625  2E23               	goto	u597
  1737  0626  2E27               	nop2
  1738  0627  2E28               	nop2
  1739                           
  1740                           ;delay.c: 17:         --t;
  1741  0628  3001               	movlw	1
  1742  0629  02F0               	subwf	delay@t,f
  1743  062A  3000               	movlw	0
  1744  062B  1C03               	skipc
  1745  062C  03F1               	decf	delay@t+1,f
  1746  062D  02F1               	subwf	delay@t+1,f
  1747  062E                     l890:
  1748                           
  1749                           ;delay.c: 14:     while( t )
  1750  062E  0870               	movf	delay@t,w
  1751  062F  0471               	iorwf	delay@t+1,w
  1752  0630  1D03               	btfss	3,2
  1753  0631  2E33               	goto	u331
  1754  0632  2E34               	goto	u330
  1755  0633                     u331:
  1756  0633  2E21               	goto	l888
  1757  0634                     u330:
  1758  0634                     l8:
  1759  0634  0008               	return
  1760  0635                     __end_of_delay:
  1761  007E                     btemp	set	126	;btemp
  1762  007E                     wtemp0	set	126
  1763                           
  1764                           	psect	config
  1765                           
  1766                           ;Config register CONFIG1 @ 0x2007
  1767                           ;	Oscillator Selection bits
  1768                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1769                           ;	Watchdog Timer Enable bit
  1770                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1771                           ;	Power-up Timer Enable bit
  1772                           ;	PWRTE = OFF, PWRT disabled
  1773                           ;	RE3/MCLR pin function select bit
  1774                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1775                           ;	Code Protection bit
  1776                           ;	CP = OFF, Program memory code protection is disabled
  1777                           ;	Data Code Protection bit
  1778                           ;	CPD = OFF, Data memory code protection is disabled
  1779                           ;	Brown Out Reset Selection bits
  1780                           ;	BOREN = OFF, BOR disabled
  1781                           ;	Internal External Switchover bit
  1782                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1783                           ;	Fail-Safe Clock Monitor Enabled bit
  1784                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1785                           ;	Low Voltage Programming Enable bit
  1786                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1787                           ;	In-Circuit Debugger Mode bit
  1788                           ;	DEBUG = 0x1, unprogrammed default
  1789  2007                     	org	8199
  1790  2007  20D4               	dw	8404
  1791                           
  1792                           ;Config register CONFIG2 @ 0x2008
  1793                           ;	Brown-out Reset Selection bit
  1794                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1795                           ;	Flash Program Memory Self Write Enable bits
  1796                           ;	WRT = OFF, Write protection off
  1797  2008                     	org	8200
  1798  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     21      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> main@string(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _lcd_print->_lcd_lincol
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    1235
                                              0 BANK0     21    21      0
                           _lcd_init
                          _lcd_print
                            _teclado
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _teclado                                             10    10      0     204
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     611
                                              6 COMMON     5     3      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     316
                                              3 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     371
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     120
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _teclado
   _teclado_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 22:46:41 2021

                      l8 0634                        pc 0002             lcd_dataReg@d 0072  
                     l30 07ED                       l33 0693                       l36 060C  
                     l39 070C                       l48 065D                       l96 05E8  
                     u30 0786                       u31 0785                       u15 076F  
                     u40 078C                       u41 078B                       u25 0777  
                     u50 07A6                       u51 07A5                       u65 07AA  
                     u90 07D6                       u91 07D5                       u75 07B2  
                     u85 07C7                       fsr 0004                      l106 0767  
                    l700 076C                      l710 079A                      l702 0780  
                    l720 07BC                      l712 079D                      l704 0786  
                    l800 05E2                      l730 07D1                      l722 07C0  
                    l714 07A6                      l706 078C                      l802 05E4  
                    l732 07D6                      l716 07A7                      l724 07C3  
                    l708 0796                      l900 06DB                      l734 07DC  
                    l726 07C4                      l718 07BB                      l902 06DC  
                    l750 0676                      l910 0636                      l736 07E6  
                    l728 07D0                      l904 06DD                      l760 068B  
                    l752 0677                      l920 0655                      l912 063A  
                    l738 07EA                      l906 06DE                      l762 0690  
                    l754 067B                      l746 065F                      l914 0645  
                    l930 0724                      l922 070D                      l908 06E8  
                    l756 067E                      l748 0662                      l916 064D  
                    l940 0757                      l924 070F                      l758 067F  
                    l918 0651                      l942 075B                      l944 0761  
                    l936 0725                      l928 0716                      l890 062E  
                    l698 0769                      l938 0741                      l794 05D8  
                    l892 05FB                      l948 0766                      l796 05DC  
                    l886 0620                      l894 06CE                      l798 05DF  
                    l888 0621                      l896 06D7                      l992 0694  
                    l898 06DA                      l994 06AB                      l996 06B0  
                    l998 06B5                      u100 07DC                      u101 07DB  
                    u125 0665                      u135 066D                      u145 0682  
                    u330 0634                      u410 0761                      u331 0633  
                    u411 0760                      u405 0744                      u350 065D  
                    u510 069E                      u351 065C                      u360 0715  
                    u345 05FE                      u361 0714                      u390 0741  
                    u374 071C                      u527 0679                      u391 0740  
                    u375 071A                      u384 0733                      u537 068E  
                    u385 0730                      u547 0790                      u557 0798  
                    u567 07BE                      u577 07E0                      u587 07E8  
                    u597 0623                      fsr0 0004                      indf 0000  
                   l1000 06BF                     _WPUB 0095                     _main 0694  
                   btemp 007E                     start 0000             lcd_instReg@i 0072  
                  ?_main 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086    __end_of_tecladoMatriz 0019             lcd_print@col 0076  
           lcd_print@lin 007A             lcd_print@pos 0079             lcd_print@str 0077  
                  _delay 0620          __end_of_teclado 0768                    pclath 000A  
                  status 0003                    wtemp0 007E            lcd_lincol@col 0073  
          lcd_lincol@lin 0075          __initialization 07EE             __end_of_main 06CE  
                 ??_main 0020                   ?_delay 0070                   _ANSELH 0189  
   __size_of_lcd_dataReg 0036         __end_of_lcd_init 070D     __size_of_lcd_instReg 0086  
                 delay@t 0070                ??_teclado 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 05E9            __end_of_delay 0635  
         _OPTION_REGbits 0081                  ??_delay 0072       __size_of_lcd_print 0029  
          ?_teclado_init 0070               __pmaintext 0694               _lcd_lincol 05FA  
              ?_lcd_init 0070               __stringtab 0003           ??_teclado_init 0070  
      __end_of_lcd_print 065E                  __ptext1 05D8                  __ptext2 070D  
                __ptext3 0635                  __ptext4 05FA                  __ptext5 065E  
                __ptext6 06CE                  __ptext7 0768                  __ptext8 0620  
                _teclado 070D               ??_lcd_init 0073     end_of_initialization 07FC  
              _PORTDbits 0008              ?_lcd_lincol 0073                _TRISDbits 0088  
          ??_lcd_dataReg 0070            ??_lcd_instReg 0070               main@string 0024  
   __end_of_teclado_init 05E9      start_initialization 07EE            _tecladoMatriz 0009  
    __end_of_lcd_dataReg 0694      __size_of_lcd_lincol 0013               init_fetch0 060D  
            __pdataBANK0 0035      __end_of_lcd_instReg 07EE                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_init 003F               teclado@aux 0077  
              __pstrings 0003                _lcd_print 0635                 ?_teclado 0070  
         __size_of_delay 0015              _lcd_dataReg 065E              _lcd_instReg 0768  
              main@F1280 0035    __size_of_teclado_init 0011               ?_lcd_print 0076  
            __stringbase 0008             ??_lcd_lincol 0074             _teclado_init 05D8  
     __end_of_lcd_lincol 060D       __end_of__stringtab 0009         __size_of_teclado 005B  
               _lcd_init 06CE            __size_of_main 003A              ??_lcd_print 0078  
               init_ram0 0611                 teclado@c 0079                 teclado@l 0078  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
           ?_lcd_dataReg 0070             ?_lcd_instReg 0070  
